{
  "name": "Topl",
  "language": [
    "clang",
    "java",
    "erlang"
  ],
  "description": "Detect errors based on user-provided state machines describing temporal properties over \\\n           multiple objects.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "OCaml",
  "loc": 17,
  "branches": 0,
  "apis": 9,
  "test": [
    {
      "testname": "lock.c",
      "testlanguage": "c",
      "expected-problems": 5,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nstruct FakeMut {\n  int blah;\n};\nstruct FakeMut m1;\nint pthread_mutex_lock(struct FakeMut* mut);\nvoid pthread_mutex_unlock(struct FakeMut*);\n\nvoid unlock_wrap() { pthread_mutex_unlock(&m1); }\nvoid lock_unlock() {\n  pthread_mutex_lock(&m1);\n  unlock_wrap();\n}\n"
    },
    {
      "testname": "Annot.java",
      "testlanguage": "java",
      "expected-problems": 22,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\npackage codetoanalyze.java.topl;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.CLASS)\n@interface Danger {}\n\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.CLASS)\n@interface Safe {}\n\npublic class Annot {\n  void testA_Bad(A x) {\n    sink(x.sourceUnlessSafe());\n  }\n\n  void testB_Ok(B x) {\n    sink(x.sourceUnlessSafe());\n  }\n\n  void testC_Ok(C x) {\n    sink(x.sourceUnlessSafe());\n  }\n\n  void testD_Ok(B x) {\n    sink(x.sourceUnlessSafe());\n  }\n\n  void testE_Ok(E x) {\n    sink(x.sourceIfDanger());\n  }\n\n  void testF_Bad(F x) {\n    sink(x.sourceIfDanger());\n  }\n\n  void testG_Bad(G x) {\n    sink(x.sourceIfDanger());\n  }\n\n  void testH_Bad(H x) {\n    sink(x.sourceIfDanger());\n  }\n\n  static void sink(Object _x) {}\n}\n\nclass A {\n  Object sourceUnlessSafe() {\n    return new Object();\n  }\n}\n\nclass B {\n  @Safe\n  Object sourceUnlessSafe() {\n    return new Object();\n  }\n}\n\n@Safe\nclass C {\n  Object sourceUnlessSafe() {\n    return new Object();\n  }\n}\n\n@Safe\nclass Dbase {}\n\nclass D extends Dbase {\n  Object sourceUnlessSafe() {\n    return new Object();\n  }\n}\n\nclass E {\n  Object sourceIfDanger() {\n    return new Object();\n  }\n}\n\nclass F {\n  @Danger\n  Object sourceIfDanger() {\n    return new Object();\n  }\n}\n\n@Danger\nclass G {\n  Object sourceIfDanger() {\n    return new Object();\n  }\n}\n\n@Danger\nclass Hbase {}\n\nclass H extends Hbase {\n  Object sourceIfDanger() {\n    return new Object();\n  }\n}\n"
    },
    {
      "testname": "BaosTest.java",
      "testlanguage": "java",
      "expected-problems": 13,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.io.ByteArrayOutputStream;\nimport java.io.DataOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\nimport java.util.zip.GZIPOutputStream;\n\nclass BaosTest {\n  static void aBad() throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream();\n    ObjectOutputStream y = new ObjectOutputStream(x);\n    y.writeObject(1337);\n    byte[] bytes = x.toByteArray(); // This may return partial results.\n  }\n\n  /** Bugfix for aBad. */\n  static void a1Ok() throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream();\n    ObjectOutputStream y = new ObjectOutputStream(x);\n    y.writeObject(1337);\n    y.close();\n    byte[] bytes = x.toByteArray();\n  }\n\n  /** Another bugfix for aBad. */\n  static void a2Ok() throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream();\n    ObjectOutputStream y = new ObjectOutputStream(x);\n    y.writeObject(1337);\n    y.flush();\n    byte[] bytes = x.toByteArray();\n  }\n\n  static void bBad() throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream();\n    ObjectOutputStream y = new ObjectOutputStream(x);\n    y.writeObject(1337);\n    byte[] bytes = x.toByteArray();\n    y.close();\n  }\n\n  static void cBad() throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream();\n    DataOutputStream y = new DataOutputStream(x);\n    y.writeLong(1337);\n    byte[] bytes = x.toByteArray();\n  }\n\n  /**\n   * This false positive is caused by the property being imprecise. However, it is also an example\n   * where, arguably, GZIPOutputStream breaks the behavioral contract on OutputStream: it may be\n   * surprising that finish() sends data to the underlying stream but flush() may not.\n   */\n  static byte[] FP_dOk(final byte[] src) throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream(src.length);\n    GZIPOutputStream y = new GZIPOutputStream(x);\n    y.write(src);\n    y.finish();\n    return x.toByteArray();\n  }\n\n  static byte[] FP_eOk(final byte[] src) throws IOException {\n    ByteArrayOutputStream x = new ByteArrayOutputStream(src.length);\n    GZIPOutputStream y = new GZIPOutputStream(x);\n    try {\n      y.write(src);\n      y.finish();\n    } catch (Exception e) {\n    }\n    return x.toByteArray();\n  }\n}\n"
    },
    {
      "testname": "CompareArgs.java",
      "testlanguage": "java",
      "expected-problems": 23,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass CompareArgs {\n  static int max(int[] a, int i, int k) {\n    int m = a[i];\n    for (int j = i + 1; j < k; ++j) {\n      m = Math.max(m, a[j]);\n    }\n    return m;\n  }\n\n  static void aBad() {\n    int[] a = new int[10];\n    int x = max(a, 2, 2);\n  }\n\n  static void bOk() {\n    int[] a = new int[10];\n    int x = max(a, 2, 3);\n  }\n\n  static void cBad() {\n    int[] a = new int[10];\n    int x = max(a, 2, 1);\n  }\n}\n"
    },
    {
      "testname": "FlowTypes.java",
      "testlanguage": "java",
      "expected-problems": 16,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// We want to find flows from source() to sink() that satisfy two conditions:\n// (1) some intermediate value has type String; and\n// (2) no intermediate value has type Boolean or Enum (including subtypes).\nabstract class FlowTypes {\n\n  // TODO: Topl considers the case in which the result of eofA is the same (or points to) the\n  // result of source. It doesn't realize that this can't happen. But it also can't prove that it\n  // happens. So it decides to wait, in the hope it will prove it at the callsite, resulting in a\n  // latent issue being reported here. Of course, it won't be able to show it. Can we get rid of\n  // such latent issues that can't gain anything from more info at the callsite?\n  void fpl_faOk() {\n    sink(stringOfE(eOfA(source())));\n  }\n\n  // TODO: Same problem as above.\n  void fpl_fbOk() {\n    sink(eOfString(stringOfA(source())));\n  }\n\n  void fcBad() {\n    sink(stringOfA(source()));\n  }\n\n  void fdBad() {\n    sink(stringOfB(bOfA(source())));\n  }\n\n  void feBad() {\n    sink(aOfString(stringOfB(bOfA(source()))));\n  }\n\n  void ffBad() {\n    A x = source();\n    E y = eOfA(x);\n    String z = stringOfE(y);\n    String u = stringOfA(x);\n    sink(z); // OK\n    sink(u); // NOK\n  }\n\n  void fgOk() {\n    sink(sanitizer(source()));\n  }\n\n  // like faOk, but with Boolean as intermediary instead of E\n  void fpl_fhOk() {\n    sink(stringOfBoolean(booleanOfA(source())));\n  }\n\n  // like faOk, but with primitive boolean as intermediary instead of E\n  void fpl_fiOk() {\n    sink(stringOfBool(boolOfA(source())));\n  }\n\n  abstract void sink(Object x);\n\n  abstract A source();\n\n  abstract A aOfString(String x);\n\n  abstract B bOfA(A x);\n\n  abstract Boolean booleanOfA(A x);\n\n  abstract E eOfA(A x);\n\n  abstract E eOfString(String x);\n\n  abstract String sanitizer(A x);\n\n  abstract String stringOfA(A x);\n\n  abstract String stringOfB(B x);\n\n  abstract String stringOfBool(boolean x);\n\n  abstract String stringOfBoolean(Boolean x);\n\n  abstract String stringOfE(E x);\n\n  abstract boolean boolOfA(A x);\n}\n\nclass A {}\n\nclass B {}\n\nenum E {}\n"
    },
    {
      "testname": "Iterators.java",
      "testlanguage": "java",
      "expected-problems": 7,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.util.*;\n\nclass Iterators {\n  void hasNextOk(List<Integer> xs) {\n    Iterator<Integer> i = xs.iterator();\n    if (i.hasNext()) i.next();\n  }\n\n  void hasNextBad(List<Integer> xs) {\n    Iterator<Integer> i = xs.iterator();\n    i.next();\n  }\n\n  /** Check that errors don't bubble up the call chain. */\n  void hasNextNotTooBadOk(List<Integer> xs) {\n    hasNextBad(xs);\n  }\n\n  void hasNextInterproceduralBad(List<Integer> xs) {\n    getSingleElementOk(xs.iterator());\n  }\n\n  void hasNextInterproceduralOk(List<Integer> xs) {\n    Iterator<Integer> i = xs.iterator();\n    if (i.hasNext()) {\n      getSingleElementOk(i);\n    }\n  }\n\n  void getSingleElementOk(Iterator<Integer> i) {\n    i.next();\n  }\n}\n"
    },
    {
      "testname": "ManyLoops.java",
      "testlanguage": "java",
      "expected-problems": 3,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.util.*;\n\nclass ManyLoops {\n\n  /** Test for performance. */\n  void fOk() {\n    Set<String> xs = new HashSet<String>();\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n    go(xs);\n  }\n\n  void go(Set<String> xs) {\n    for (String x : xs) {\n      System.out.println(x);\n    }\n  }\n}\n"
    },
    {
      "testname": "ManyNops.java",
      "testlanguage": "java",
      "expected-problems": 3,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass ManyNops {\n  /** Let's check that nothing happens quickly. */\n  void fOk() {\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n    nop();\n  }\n\n  void nop() {}\n}\n"
    },
    {
      "testname": "ScannerFail.java",
      "testlanguage": "java",
      "expected-problems": 3,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.util.Scanner;\n\nabstract class ScannerFail {\n  void readOk() {\n    Scanner scan = getScanner();\n    while (scan.hasNext()) {\n      scan.next();\n    }\n    scan.close();\n  }\n\n  void readBad() {\n    Scanner scan = getScanner();\n    scan.next();\n    scan.close();\n  }\n\n  Scanner getScanner() {\n    return new Scanner(System.in);\n  }\n}\n"
    },
    {
      "testname": "ImmutableArray.java",
      "testlanguage": "java",
      "expected-problems": 16,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass ImmutableArray {\n\n  final int[] testArray = new int[] {0, 1, 2, 4};\n\n  int[] getTestArray() {\n    return testArray;\n  }\n\n  void badA() {\n    int[] array = getTestArray();\n    array[2] = 7;\n  }\n\n  void badB() {\n    int[] array = getTestArray();\n    int[] otherArray = array;\n    otherArray[2] = 7;\n  }\n\n  void badC() {\n    int[] array = getTestArray();\n    otherMutateArray(array);\n  }\n\n  void badABC() {\n    int[] array = getTestArray();\n    array[2] = 7;\n    int[] otherArray = array;\n    otherArray[2] = 7;\n    otherMutateArray(array);\n  }\n\n  void otherMutateArray(int[] array) {\n    array[2] = 7;\n  }\n}\n"
    },
    {
      "testname": "ManyArrays.java",
      "testlanguage": "java",
      "expected-problems": 3,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport java.util.*;\n\nclass ManyArrays {\n  static Map<String, String[]> someMap = new HashMap<>();\n\n  static {\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n    someMap.put(\"foo\", new String[]{\"bar\"});\n  }\n}\n"
    },
    {
      "testname": "ManyWrites.java",
      "testlanguage": "java",
      "expected-problems": 5,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\npublic class ManyWrites {\n  public static int[][] someInts = {\n    {0, 1},\n    {2, 3},\n    {4, 5},\n    {6, 7},\n    {8, 9},\n    {10, 11},\n    {12, 13},\n    {14, 15},\n    {16, 17},\n    {18, 19},\n    {20, 21},\n    {22, 23},\n    {24, 25},\n    {26, 27},\n    {28, 29},\n    {30, 31},\n    {32, 33},\n    {34, 35},\n    {36, 37},\n    {38, 39},\n    {40, 41},\n    {42, 43},\n    {44, 45},\n    {46, 47},\n    {48, 49},\n    {50, 51},\n    {52, 53},\n    {54, 55},\n    {56, 57},\n    {58, 59},\n    {60, 61},\n    {62, 63},\n    {64, 65},\n    {66, 67},\n    {68, 69},\n    {70, 71},\n    {72, 73},\n    {74, 75},\n    {76, 77},\n    {78, 79},\n    {80, 81},\n    {82, 83},\n    {84, 85},\n    {86, 87},\n    {88, 89},\n    {90, 91},\n    {92, 93},\n    {94, 95},\n    {96, 97},\n    {98, 99},\n    {100, 101},\n    {102, 103},\n    {104, 105},\n    {106, 107},\n    {108, 109},\n    {110, 111},\n    {112, 113},\n    {114, 115},\n    {116, 117},\n    {118, 119},\n    {120, 121},\n    {122, 123},\n    {124, 125},\n    {126, 127},\n    {128, 129},\n    {130, 131},\n    {132, 133},\n    {134, 135},\n    {136, 137},\n    {138, 139},\n    {140, 141},\n    {142, 143},\n    {144, 145},\n    {146, 147},\n    {148, 149},\n    {150, 151},\n    {152, 153},\n    {154, 155},\n    {156, 157},\n    {158, 159},\n    {160, 161},\n    {162, 163},\n    {164, 165},\n    {166, 167},\n    {168, 169},\n    {170, 171},\n    {172, 173},\n    {174, 175},\n    {176, 177},\n    {178, 179},\n    {180, 181},\n    {182, 183},\n    {184, 185},\n    {186, 187},\n    {188, 189},\n    {190, 191},\n    {192, 193},\n    {194, 195},\n    {196, 197},\n    {198, 199},\n    {200, 201},\n    {202, 203},\n    {204, 205},\n    {206, 207},\n    {208, 209},\n    {210, 211},\n    {212, 213},\n    {214, 215},\n    {216, 217},\n    {218, 219},\n    {220, 221},\n    {222, 223},\n    {224, 225},\n    {226, 227},\n    {228, 229},\n    {230, 231},\n    {232, 233},\n    {234, 235},\n    {236, 237},\n    {238, 239},\n    {240, 241},\n    {242, 243},\n    {244, 245},\n    {246, 247},\n    {248, 249},\n    {250, 251},\n    {252, 253},\n    {254, 255},\n    {256, 257},\n    {258, 259},\n    {260, 261},\n    {262, 263},\n    {264, 265},\n    {266, 267},\n    {268, 269},\n    {270, 271},\n    {272, 273},\n    {274, 275},\n    {276, 277},\n    {278, 279},\n    {280, 281},\n    {282, 283},\n    {284, 285},\n    {286, 287},\n    {288, 289},\n    {290, 291},\n    {292, 293},\n    {294, 295},\n    {296, 297},\n    {298, 299},\n    {300, 301},\n    {302, 303},\n    {304, 305},\n    {306, 307},\n    {308, 309},\n    {310, 311},\n    {312, 313},\n    {314, 315},\n    {316, 317},\n    {318, 319},\n    {320, 321},\n    {322, 323},\n    {324, 325},\n    {326, 327},\n    {328, 329},\n    {330, 331},\n    {332, 333},\n    {334, 335},\n    {336, 337},\n    {338, 339},\n    {340, 341},\n    {342, 343},\n    {344, 345},\n    {346, 347},\n    {348, 349},\n    {350, 351},\n    {352, 353},\n    {354, 355},\n    {356, 357},\n    {358, 359},\n    {360, 361},\n    {362, 363},\n    {364, 365},\n    {366, 367},\n    {368, 369},\n    {370, 371},\n    {372, 373},\n    {374, 375},\n    {376, 377},\n    {378, 379},\n    {380, 381},\n    {382, 383},\n    {384, 385},\n    {386, 387},\n    {388, 389},\n    {390, 391},\n    {392, 393},\n    {394, 395},\n    {396, 397},\n    {398, 399},\n    {400, 401},\n    {402, 403},\n    {404, 405},\n    {406, 407},\n    {408, 409},\n    {410, 411},\n    {412, 413},\n    {414, 415},\n    {416, 417},\n    {418, 419},\n    {420, 421},\n    {422, 423},\n    {424, 425},\n    {426, 427},\n    {428, 429},\n    {430, 431},\n    {432, 433},\n    {434, 435},\n    {436, 437},\n    {438, 439},\n    {440, 441},\n    {442, 443},\n    {444, 445},\n    {446, 447},\n    {448, 449},\n    {450, 451},\n    {452, 453},\n    {454, 455},\n    {456, 457},\n    {458, 459},\n    {460, 461},\n    {462, 463},\n    {464, 465},\n    {466, 467},\n    {468, 469},\n    {470, 471},\n    {472, 473},\n    {474, 475},\n    {476, 477},\n    {478, 479},\n    {480, 481},\n    {482, 483},\n    {484, 485},\n    {486, 487},\n    {488, 489},\n    {490, 491},\n    {492, 493},\n    {494, 495},\n    {496, 497},\n    {498, 499},\n    {500, 501},\n    {502, 503},\n    {504, 505},\n    {506, 507},\n    {508, 509},\n    {510, 511},\n    {512, 513},\n    {514, 515},\n    {516, 517},\n    {518, 519},\n    {520, 521},\n    {522, 523},\n    {524, 525},\n    {526, 527},\n    {528, 529},\n    {530, 531},\n    {532, 533},\n    {534, 535},\n    {536, 537},\n    {538, 539},\n    {540, 541},\n    {542, 543},\n    {544, 545},\n    {546, 547},\n    {548, 549},\n    {550, 551},\n    {552, 553},\n    {554, 555},\n    {556, 557},\n    {558, 559},\n    {560, 561},\n    {562, 563},\n    {564, 565},\n    {566, 567},\n    {568, 569},\n    {570, 571},\n    {572, 573},\n    {574, 575},\n    {576, 577},\n    {578, 579},\n    {580, 581},\n    {582, 583},\n    {584, 585},\n    {586, 587},\n    {588, 589},\n    {590, 591},\n    {592, 593},\n    {594, 595},\n    {596, 597},\n    {598, 599},\n    {600, 601},\n    {602, 603},\n    {604, 605},\n    {606, 607},\n    {608, 609},\n    {610, 611},\n    {612, 613},\n    {614, 615},\n    {616, 617},\n    {618, 619},\n    {620, 621},\n    {622, 623},\n    {624, 625},\n    {626, 627},\n    {628, 629},\n    {630, 631},\n    {632, 633},\n    {634, 635},\n    {636, 637},\n    {638, 639},\n    {640, 641},\n    {642, 643},\n    {644, 645},\n    {646, 647},\n    {648, 649},\n    {650, 651},\n    {652, 653},\n    {654, 655},\n    {656, 657},\n    {658, 659},\n    {660, 661},\n    {662, 663},\n    {664, 665},\n    {666, 667},\n    {668, 669},\n    {670, 671},\n    {672, 673},\n    {674, 675},\n    {676, 677},\n    {678, 679},\n    {680, 681},\n    {682, 683},\n    {684, 685},\n    {686, 687},\n    {688, 689},\n    {690, 691},\n    {692, 693},\n    {694, 695},\n    {696, 697},\n    {698, 699},\n    {700, 701},\n    {702, 703},\n    {704, 705},\n    {706, 707},\n    {708, 709},\n    {710, 711},\n    {712, 713},\n    {714, 715},\n    {716, 717},\n    {718, 719},\n    {720, 721},\n    {722, 723},\n    {724, 725},\n    {726, 727},\n    {728, 729},\n    {730, 731},\n    {732, 733},\n    {734, 735},\n    {736, 737},\n    {738, 739},\n    {740, 741},\n    {742, 743},\n    {744, 745},\n    {746, 747},\n    {748, 749},\n    {750, 751},\n    {752, 753},\n    {754, 755},\n    {756, 757},\n    {758, 759},\n    {760, 761},\n    {762, 763},\n    {764, 765},\n    {766, 767},\n    {768, 769},\n    {770, 771},\n    {772, 773},\n    {774, 775},\n    {776, 777},\n    {778, 779},\n    {780, 781},\n    {782, 783},\n    {784, 785},\n    {786, 787},\n    {788, 789},\n    {790, 791},\n    {792, 793},\n    {794, 795},\n    {796, 797},\n    {798, 799},\n    {800, 801},\n    {802, 803},\n    {804, 805},\n    {806, 807},\n    {808, 809},\n    {810, 811},\n    {812, 813},\n    {814, 815},\n    {816, 817},\n    {818, 819},\n    {820, 821},\n    {822, 823},\n    {824, 825},\n    {826, 827},\n    {828, 829},\n    {830, 831},\n    {832, 833},\n    {834, 835},\n    {836, 837},\n    {838, 839},\n    {840, 841},\n    {842, 843},\n    {844, 845},\n    {846, 847},\n    {848, 849},\n    {850, 851},\n    {852, 853},\n    {854, 855},\n    {856, 857},\n    {858, 859},\n    {860, 861},\n    {862, 863},\n    {864, 865},\n    {866, 867},\n    {868, 869},\n    {870, 871},\n    {872, 873},\n    {874, 875},\n    {876, 877},\n    {878, 879},\n    {880, 881},\n    {882, 883},\n    {884, 885},\n    {886, 887},\n    {888, 889},\n    {890, 891},\n    {892, 893},\n    {894, 895},\n    {896, 897},\n    {898, 899},\n    {900, 901},\n    {902, 903},\n    {904, 905},\n    {906, 907},\n    {908, 909},\n    {910, 911},\n    {912, 913},\n    {914, 915},\n    {916, 917},\n    {918, 919},\n    {920, 921},\n    {922, 923},\n    {924, 925},\n    {926, 927},\n    {928, 929},\n    {930, 931},\n    {932, 933},\n    {934, 935},\n    {936, 937},\n    {938, 939},\n    {940, 941},\n    {942, 943},\n    {944, 945},\n    {946, 947},\n    {948, 949},\n    {950, 951},\n    {952, 953},\n    {954, 955},\n    {956, 957},\n    {958, 959},\n    {960, 961},\n    {962, 963},\n    {964, 965},\n    {966, 967},\n    {968, 969},\n    {970, 971},\n    {972, 973},\n    {974, 975},\n    {976, 977},\n    {978, 979},\n    {980, 981},\n    {982, 983},\n    {984, 985},\n    {986, 987},\n    {988, 989},\n    {990, 991},\n    {992, 993},\n    {994, 995},\n    {996, 997},\n    {998, 999},\n    {1000, 1001},\n    {1002, 1003},\n    {1004, 1005},\n    {1006, 1007},\n    {1008, 1009},\n    {1010, 1011},\n    {1012, 1013},\n    {1014, 1015},\n    {1016, 1017},\n    {1018, 1019},\n    {1020, 1021},\n    {1022, 1023},\n    {1024, 1025},\n    {1026, 1027},\n    {1028, 1029},\n    {1030, 1031},\n    {1032, 1033},\n    {1034, 1035},\n    {1036, 1037},\n    {1038, 1039},\n    {1040, 1041},\n    {1042, 1043},\n    {1044, 1045},\n    {1046, 1047},\n    {1048, 1049},\n    {1050, 1051},\n    {1052, 1053},\n    {1054, 1055},\n    {1056, 1057},\n    {1058, 1059},\n    {1060, 1061},\n    {1062, 1063},\n    {1064, 1065},\n    {1066, 1067},\n    {1068, 1069},\n    {1070, 1071},\n    {1072, 1073},\n    {1074, 1075},\n    {1076, 1077},\n    {1078, 1079},\n    {1080, 1081},\n    {1082, 1083},\n    {1084, 1085},\n    {1086, 1087},\n    {1088, 1089},\n    {1090, 1091},\n    {1092, 1093},\n    {1094, 1095},\n    {1096, 1097},\n    {1098, 1099},\n    {1100, 1101},\n    {1102, 1103},\n    {1104, 1105},\n    {1106, 1107},\n    {1108, 1109},\n    {1110, 1111},\n    {1112, 1113},\n    {1114, 1115},\n    {1116, 1117},\n    {1118, 1119},\n    {1120, 1121},\n    {1122, 1123},\n    {1124, 1125},\n    {1126, 1127},\n    {1128, 1129},\n    {1130, 1131},\n    {1132, 1133},\n    {1134, 1135},\n    {1136, 1137},\n    {1138, 1139},\n    {1140, 1141},\n    {1142, 1143},\n    {1144, 1145},\n    {1146, 1147},\n    {1148, 1149},\n    {1150, 1151},\n    {1152, 1153},\n    {1154, 1155},\n    {1156, 1157},\n    {1158, 1159},\n    {1160, 1161},\n    {1162, 1163},\n    {1164, 1165},\n    {1166, 1167},\n    {1168, 1169},\n    {1170, 1171},\n    {1172, 1173},\n    {1174, 1175},\n    {1176, 1177},\n    {1178, 1179},\n    {1180, 1181},\n    {1182, 1183},\n    {1184, 1185},\n    {1186, 1187},\n    {1188, 1189},\n    {1190, 1191},\n    {1192, 1193},\n    {1194, 1195},\n    {1196, 1197},\n    {1198, 1199},\n    {1200, 1201},\n    {1202, 1203},\n    {1204, 1205},\n    {1206, 1207},\n    {1208, 1209},\n    {1210, 1211},\n    {1212, 1213},\n    {1214, 1215},\n    {1216, 1217},\n    {1218, 1219},\n    {1220, 1221},\n    {1222, 1223},\n    {1224, 1225},\n    {1226, 1227},\n    {1228, 1229},\n    {1230, 1231},\n    {1232, 1233},\n    {1234, 1235},\n    {1236, 1237},\n    {1238, 1239},\n    {1240, 1241},\n    {1242, 1243},\n    {1244, 1245},\n    {1246, 1247},\n    {1248, 1249},\n    {1250, 1251},\n    {1252, 1253},\n    {1254, 1255},\n    {1256, 1257},\n    {1258, 1259},\n    {1260, 1261},\n    {1262, 1263},\n    {1264, 1265},\n    {1266, 1267},\n    {1268, 1269},\n    {1270, 1271},\n    {1272, 1273},\n    {1274, 1275},\n    {1276, 1277},\n    {1278, 1279},\n    {1280, 1281},\n    {1282, 1283},\n    {1284, 1285},\n    {1286, 1287},\n    {1288, 1289},\n    {1290, 1291},\n    {1292, 1293},\n    {1294, 1295},\n    {1296, 1297},\n    {1298, 1299},\n    {1300, 1301},\n    {1302, 1303},\n    {1304, 1305},\n    {1306, 1307},\n    {1308, 1309},\n    {1310, 1311},\n    {1312, 1313},\n    {1314, 1315},\n    {1316, 1317},\n    {1318, 1319},\n    {1320, 1321},\n    {1322, 1323},\n    {1324, 1325},\n    {1326, 1327},\n    {1328, 1329},\n    {1330, 1331},\n    {1332, 1333},\n    {1334, 1335},\n    {1336, 1337},\n    {1338, 1339},\n    {1340, 1341},\n    {1342, 1343},\n    {1344, 1345},\n    {1346, 1347},\n    {1348, 1349},\n    {1350, 1351},\n    {1352, 1353},\n    {1354, 1355},\n    {1356, 1357},\n    {1358, 1359},\n    {1360, 1361},\n    {1362, 1363},\n    {1364, 1365},\n    {1366, 1367},\n    {1368, 1369},\n    {1370, 1371},\n    {1372, 1373},\n    {1374, 1375},\n    {1376, 1377},\n    {1378, 1379},\n    {1380, 1381},\n    {1382, 1383},\n    {1384, 1385},\n    {1386, 1387},\n    {1388, 1389},\n    {1390, 1391},\n    {1392, 1393},\n    {1394, 1395},\n    {1396, 1397},\n    {1398, 1399},\n    {1400, 1401},\n    {1402, 1403},\n    {1404, 1405},\n    {1406, 1407},\n    {1408, 1409},\n    {1410, 1411},\n    {1412, 1413},\n    {1414, 1415},\n    {1416, 1417},\n    {1418, 1419},\n    {1420, 1421},\n    {1422, 1423},\n    {1424, 1425},\n    {1426, 1427},\n    {1428, 1429},\n    {1430, 1431},\n    {1432, 1433},\n    {1434, 1435},\n    {1436, 1437},\n    {1438, 1439},\n    {1440, 1441},\n    {1442, 1443},\n    {1444, 1445},\n    {1446, 1447},\n    {1448, 1449},\n    {1450, 1451},\n    {1452, 1453},\n    {1454, 1455},\n    {1456, 1457},\n    {1458, 1459},\n    {1460, 1461},\n    {1462, 1463},\n    {1464, 1465},\n    {1466, 1467},\n    {1468, 1469},\n    {1470, 1471},\n    {1472, 1473},\n    {1474, 1475},\n    {1476, 1477},\n    {1478, 1479},\n    {1480, 1481},\n    {1482, 1483},\n    {1484, 1485},\n    {1486, 1487},\n    {1488, 1489},\n    {1490, 1491},\n    {1492, 1493},\n    {1494, 1495},\n    {1496, 1497},\n    {1498, 1499},\n    {1500, 1501},\n    {1502, 1503},\n    {1504, 1505},\n    {1506, 1507},\n    {1508, 1509},\n    {1510, 1511},\n    {1512, 1513},\n    {1514, 1515},\n    {1516, 1517},\n    {1518, 1519},\n    {1520, 1521},\n    {1522, 1523},\n    {1524, 1525},\n    {1526, 1527},\n    {1528, 1529},\n    {1530, 1531},\n    {1532, 1533},\n    {1534, 1535},\n    {1536, 1537},\n    {1538, 1539},\n    {1540, 1541},\n    {1542, 1543},\n    {1544, 1545},\n    {1546, 1547},\n    {1548, 1549},\n    {1550, 1551},\n    {1552, 1553},\n    {1554, 1555},\n    {1556, 1557},\n    {1558, 1559},\n    {1560, 1561},\n    {1562, 1563},\n    {1564, 1565},\n    {1566, 1567},\n    {1568, 1569},\n    {1570, 1571},\n    {1572, 1573},\n    {1574, 1575},\n    {1576, 1577},\n    {1578, 1579},\n    {1580, 1581},\n    {1582, 1583},\n    {1584, 1585},\n    {1586, 1587},\n    {1588, 1589},\n    {1590, 1591},\n    {1592, 1593},\n    {1594, 1595},\n    {1596, 1597},\n    {1598, 1599},\n    {1600, 1601},\n    {1602, 1603},\n    {1604, 1605},\n    {1606, 1607},\n    {1608, 1609},\n    {1610, 1611},\n    {1612, 1613},\n    {1614, 1615},\n    {1616, 1617},\n    {1618, 1619},\n    {1620, 1621},\n    {1622, 1623},\n    {1624, 1625},\n    {1626, 1627},\n    {1628, 1629},\n    {1630, 1631},\n    {1632, 1633},\n    {1634, 1635},\n    {1636, 1637},\n    {1638, 1639},\n    {1640, 1641},\n    {1642, 1643},\n    {1644, 1645},\n    {1646, 1647},\n    {1648, 1649},\n    {1650, 1651},\n    {1652, 1653},\n    {1654, 1655},\n    {1656, 1657},\n    {1658, 1659},\n    {1660, 1661},\n    {1662, 1663},\n    {1664, 1665},\n    {1666, 1667},\n    {1668, 1669},\n    {1670, 1671},\n    {1672, 1673},\n    {1674, 1675},\n    {1676, 1677},\n    {1678, 1679},\n    {1680, 1681},\n    {1682, 1683},\n    {1684, 1685},\n    {1686, 1687},\n    {1688, 1689},\n    {1690, 1691},\n    {1692, 1693},\n    {1694, 1695},\n    {1696, 1697},\n    {1698, 1699},\n    {1700, 1701},\n    {1702, 1703},\n    {1704, 1705},\n    {1706, 1707},\n    {1708, 1709},\n    {1710, 1711},\n    {1712, 1713},\n    {1714, 1715},\n    {1716, 1717},\n    {1718, 1719},\n    {1720, 1721},\n    {1722, 1723},\n    {1724, 1725},\n    {1726, 1727},\n    {1728, 1729},\n    {1730, 1731},\n    {1732, 1733},\n    {1734, 1735},\n    {1736, 1737},\n    {1738, 1739},\n    {1740, 1741},\n    {1742, 1743},\n    {1744, 1745},\n    {1746, 1747},\n    {1748, 1749},\n    {1750, 1751},\n    {1752, 1753},\n    {1754, 1755},\n    {1756, 1757},\n    {1758, 1759},\n    {1760, 1761},\n    {1762, 1763},\n    {1764, 1765},\n    {1766, 1767},\n    {1768, 1769},\n    {1770, 1771},\n    {1772, 1773},\n    {1774, 1775},\n    {1776, 1777},\n    {1778, 1779},\n    {1780, 1781},\n    {1782, 1783},\n    {1784, 1785},\n    {1786, 1787},\n    {1788, 1789},\n    {1790, 1791},\n    {1792, 1793},\n    {1794, 1795},\n    {1796, 1797},\n    {1798, 1799},\n    {1800, 1801},\n    {1802, 1803},\n    {1804, 1805},\n    {1806, 1807},\n    {1808, 1809},\n    {1810, 1811},\n    {1812, 1813},\n    {1814, 1815},\n    {1816, 1817},\n    {1818, 1819},\n    {1820, 1821},\n    {1822, 1823},\n    {1824, 1825},\n    {1826, 1827},\n    {1828, 1829},\n    {1830, 1831},\n    {1832, 1833},\n    {1834, 1835},\n    {1836, 1837},\n    {1838, 1839},\n    {1840, 1841},\n    {1842, 1843},\n    {1844, 1845},\n    {1846, 1847},\n    {1848, 1849},\n    {1850, 1851},\n    {1852, 1853},\n    {1854, 1855},\n    {1856, 1857},\n    {1858, 1859},\n    {1860, 1861},\n    {1862, 1863},\n    {1864, 1865},\n    {1866, 1867},\n    {1868, 1869},\n    {1870, 1871},\n    {1872, 1873},\n    {1874, 1875},\n    {1876, 1877},\n    {1878, 1879},\n    {1880, 1881},\n    {1882, 1883},\n    {1884, 1885},\n    {1886, 1887},\n    {1888, 1889},\n    {1890, 1891},\n    {1892, 1893},\n    {1894, 1895},\n    {1896, 1897},\n    {1898, 1899},\n    {1900, 1901},\n    {1902, 1903},\n    {1904, 1905},\n    {1906, 1907},\n    {1908, 1909},\n    {1910, 1911},\n    {1912, 1913},\n    {1914, 1915},\n    {1916, 1917},\n    {1918, 1919},\n    {1920, 1921},\n    {1922, 1923},\n    {1924, 1925},\n    {1926, 1927},\n    {1928, 1929},\n    {1930, 1931},\n    {1932, 1933},\n    {1934, 1935},\n    {1936, 1937},\n    {1938, 1939},\n    {1940, 1941},\n    {1942, 1943},\n    {1944, 1945},\n    {1946, 1947},\n    {1948, 1949},\n    {1950, 1951},\n    {1952, 1953},\n    {1954, 1955},\n    {1956, 1957},\n    {1958, 1959},\n    {1960, 1961},\n    {1962, 1963},\n    {1964, 1965},\n    {1966, 1967},\n    {1968, 1969},\n    {1970, 1971},\n    {1972, 1973},\n    {1974, 1975},\n    {1976, 1977},\n    {1978, 1979},\n    {1980, 1981},\n    {1982, 1983},\n    {1984, 1985},\n    {1986, 1987},\n    {1988, 1989},\n    {1990, 1991},\n    {1992, 1993},\n    {1994, 1995},\n    {1996, 1997},\n    {1998, 1999},\n    {2000, 2001},\n    {2002, 2003},\n    {2004, 2005},\n    {2006, 2007},\n    {2008, 2009},\n    {2010, 2011},\n    {2012, 2013},\n    {2014, 2015},\n    {2016, 2017},\n    {2018, 2019},\n    {2020, 2021},\n    {2022, 2023},\n    {2024, 2025},\n    {2026, 2027},\n    {2028, 2029},\n    {2030, 2031},\n    {2032, 2033},\n    {2034, 2035},\n    {2036, 2037},\n    {2038, 2039},\n    {2040, 2041},\n    {2042, 2043},\n    {2044, 2045},\n    {2046, 2047},\n    {2048, 2049},\n    {2050, 2051},\n    {2052, 2053},\n    {2054, 2055},\n    {2056, 2057},\n    {2058, 2059},\n    {2060, 2061},\n    {2062, 2063},\n    {2064, 2065},\n    {2066, 2067},\n    {2068, 2069},\n    {2070, 2071},\n    {2072, 2073},\n    {2074, 2075},\n    {2076, 2077},\n    {2078, 2079},\n    {2080, 2081},\n    {2082, 2083},\n    {2084, 2085},\n    {2086, 2087},\n    {2088, 2089},\n    {2090, 2091},\n    {2092, 2093},\n    {2094, 2095},\n    {2096, 2097},\n    {2098, 2099},\n    {2100, 2101},\n    {2102, 2103},\n    {2104, 2105},\n    {2106, 2107},\n    {2108, 2109},\n    {2110, 2111},\n    {2112, 2113},\n    {2114, 2115},\n    {2116, 2117},\n    {2118, 2119},\n    {2120, 2121},\n    {2122, 2123},\n    {2124, 2125},\n    {2126, 2127},\n    {2128, 2129},\n    {2130, 2131},\n    {2132, 2133},\n    {2134, 2135},\n    {2136, 2137},\n    {2138, 2139},\n    {2140, 2141},\n    {2142, 2143},\n    {2144, 2145},\n    {2146, 2147},\n    {2148, 2149},\n    {2150, 2151},\n    {2152, 2153},\n    {2154, 2155},\n    {2156, 2157},\n    {2158, 2159},\n    {2160, 2161},\n    {2162, 2163},\n    {2164, 2165},\n    {2166, 2167},\n    {2168, 2169},\n    {2170, 2171},\n    {2172, 2173},\n    {2174, 2175},\n    {2176, 2177},\n    {2178, 2179},\n    {2180, 2181},\n    {2182, 2183},\n    {2184, 2185},\n    {2186, 2187},\n    {2188, 2189},\n    {2190, 2191},\n    {2192, 2193},\n    {2194, 2195},\n    {2196, 2197},\n    {2198, 2199},\n    {2200, 2201},\n    {2202, 2203},\n    {2204, 2205},\n    {2206, 2207},\n    {2208, 2209},\n    {2210, 2211},\n    {2212, 2213},\n    {2214, 2215},\n    {2216, 2217},\n    {2218, 2219},\n    {2220, 2221},\n    {2222, 2223},\n    {2224, 2225},\n    {2226, 2227},\n    {2228, 2229},\n    {2230, 2231},\n    {2232, 2233},\n    {2234, 2235},\n    {2236, 2237},\n    {2238, 2239},\n    {2240, 2241},\n    {2242, 2243},\n    {2244, 2245},\n    {2246, 2247},\n    {2248, 2249},\n    {2250, 2251},\n    {2252, 2253},\n    {2254, 2255},\n    {2256, 2257},\n    {2258, 2259},\n    {2260, 2261},\n    {2262, 2263},\n    {2264, 2265},\n    {2266, 2267},\n    {2268, 2269},\n    {2270, 2271},\n    {2272, 2273},\n    {2274, 2275},\n    {2276, 2277},\n    {2278, 2279},\n    {2280, 2281},\n    {2282, 2283},\n    {2284, 2285},\n    {2286, 2287},\n    {2288, 2289},\n    {2290, 2291},\n    {2292, 2293},\n    {2294, 2295},\n    {2296, 2297},\n    {2298, 2299},\n    {2300, 2301},\n    {2302, 2303},\n    {2304, 2305},\n    {2306, 2307},\n    {2308, 2309},\n    {2310, 2311},\n    {2312, 2313},\n    {2314, 2315},\n    {2316, 2317},\n    {2318, 2319},\n    {2320, 2321},\n    {2322, 2323},\n    {2324, 2325},\n    {2326, 2327},\n    {2328, 2329},\n    {2330, 2331},\n    {2332, 2333},\n    {2334, 2335},\n    {2336, 2337},\n    {2338, 2339},\n    {2340, 2341},\n    {2342, 2343},\n    {2344, 2345},\n    {2346, 2347},\n    {2348, 2349},\n    {2350, 2351},\n    {2352, 2353},\n    {2354, 2355},\n    {2356, 2357},\n    {2358, 2359},\n    {2360, 2361},\n    {2362, 2363},\n    {2364, 2365},\n    {2366, 2367},\n    {2368, 2369},\n    {2370, 2371},\n    {2372, 2373},\n    {2374, 2375},\n    {2376, 2377},\n    {2378, 2379},\n    {2380, 2381},\n    {2382, 2383},\n    {2384, 2385},\n    {2386, 2387},\n    {2388, 2389},\n    {2390, 2391},\n    {2392, 2393},\n    {2394, 2395},\n    {2396, 2397},\n    {2398, 2399},\n    {2400, 2401},\n    {2402, 2403},\n    {2404, 2405},\n    {2406, 2407},\n    {2408, 2409},\n    {2410, 2411},\n    {2412, 2413},\n    {2414, 2415},\n    {2416, 2417},\n    {2418, 2419},\n    {2420, 2421},\n    {2422, 2423},\n    {2424, 2425},\n    {2426, 2427},\n    {2428, 2429},\n    {2430, 2431},\n    {2432, 2433},\n    {2434, 2435},\n    {2436, 2437},\n    {2438, 2439},\n    {2440, 2441},\n    {2442, 2443},\n    {2444, 2445},\n    {2446, 2447},\n    {2448, 2449},\n    {2450, 2451},\n    {2452, 2453},\n    {2454, 2455},\n    {2456, 2457},\n    {2458, 2459},\n    {2460, 2461},\n    {2462, 2463},\n    {2464, 2465},\n    {2466, 2467},\n    {2468, 2469},\n    {2470, 2471},\n    {2472, 2473},\n    {2474, 2475},\n    {2476, 2477},\n    {2478, 2479},\n    {2480, 2481},\n    {2482, 2483},\n    {2484, 2485},\n    {2486, 2487},\n    {2488, 2489},\n    {2490, 2491},\n    {2492, 2493},\n    {2494, 2495},\n    {2496, 2497},\n    {2498, 2499},\n    {2500, 2501},\n    {2502, 2503},\n    {2504, 2505},\n    {2506, 2507},\n    {2508, 2509},\n    {2510, 2511},\n    {2512, 2513},\n    {2514, 2515},\n    {2516, 2517},\n    {2518, 2519},\n    {2520, 2521},\n    {2522, 2523},\n    {2524, 2525},\n    {2526, 2527},\n    {2528, 2529},\n    {2530, 2531},\n    {2532, 2533},\n    {2534, 2535},\n    {2536, 2537},\n    {2538, 2539},\n    {2540, 2541},\n    {2542, 2543},\n    {2544, 2545},\n    {2546, 2547},\n    {2548, 2549},\n    {2550, 2551},\n    {2552, 2553},\n    {2554, 2555},\n    {2556, 2557},\n    {2558, 2559},\n    {2560, 2561},\n    {2562, 2563},\n    {2564, 2565},\n    {2566, 2567},\n    {2568, 2569},\n    {2570, 2571},\n    {2572, 2573},\n    {2574, 2575},\n    {2576, 2577},\n    {2578, 2579},\n    {2580, 2581},\n    {2582, 2583},\n    {2584, 2585},\n    {2586, 2587},\n    {2588, 2589},\n    {2590, 2591},\n    {2592, 2593},\n    {2594, 2595},\n    {2596, 2597},\n    {2598, 2599},\n    {2600, 2601},\n    {2602, 2603},\n    {2604, 2605},\n    {2606, 2607},\n    {2608, 2609},\n    {2610, 2611},\n    {2612, 2613},\n    {2614, 2615},\n    {2616, 2617},\n    {2618, 2619},\n    {2620, 2621},\n    {2622, 2623},\n    {2624, 2625},\n    {2626, 2627},\n    {2628, 2629},\n    {2630, 2631},\n    {2632, 2633},\n    {2634, 2635},\n    {2636, 2637},\n    {2638, 2639},\n    {2640, 2641},\n    {2642, 2643},\n    {2644, 2645},\n    {2646, 2647},\n    {2648, 2649},\n    {2650, 2651},\n    {2652, 2653},\n    {2654, 2655},\n    {2656, 2657},\n    {2658, 2659},\n    {2660, 2661},\n    {2662, 2663},\n    {2664, 2665},\n    {2666, 2667},\n    {2668, 2669},\n    {2670, 2671},\n    {2672, 2673},\n    {2674, 2675},\n    {2676, 2677},\n    {2678, 2679},\n    {2680, 2681},\n    {2682, 2683},\n    {2684, 2685},\n    {2686, 2687},\n    {2688, 2689},\n    {2690, 2691},\n    {2692, 2693},\n    {2694, 2695},\n    {2696, 2697},\n    {2698, 2699},\n    {2700, 2701},\n    {2702, 2703},\n    {2704, 2705},\n    {2706, 2707},\n    {2708, 2709},\n    {2710, 2711},\n    {2712, 2713},\n    {2714, 2715},\n    {2716, 2717},\n    {2718, 2719},\n    {2720, 2721},\n    {2722, 2723},\n    {2724, 2725},\n    {2726, 2727},\n    {2728, 2729},\n    {2730, 2731},\n    {2732, 2733},\n    {2734, 2735},\n    {2736, 2737},\n    {2738, 2739},\n    {2740, 2741},\n    {2742, 2743},\n    {2744, 2745},\n    {2746, 2747},\n    {2748, 2749},\n    {2750, 2751},\n    {2752, 2753},\n    {2754, 2755},\n    {2756, 2757},\n    {2758, 2759},\n    {2760, 2761},\n    {2762, 2763},\n    {2764, 2765},\n    {2766, 2767},\n    {2768, 2769},\n    {2770, 2771},\n    {2772, 2773},\n    {2774, 2775},\n    {2776, 2777},\n    {2778, 2779},\n    {2780, 2781},\n    {2782, 2783},\n    {2784, 2785},\n    {2786, 2787},\n    {2788, 2789},\n    {2790, 2791},\n    {2792, 2793},\n    {2794, 2795},\n    {2796, 2797},\n    {2798, 2799},\n    {2800, 2801},\n    {2802, 2803},\n    {2804, 2805},\n    {2806, 2807},\n    {2808, 2809},\n    {2810, 2811},\n    {2812, 2813},\n    {2814, 2815},\n    {2816, 2817},\n    {2818, 2819},\n    {2820, 2821},\n    {2822, 2823},\n    {2824, 2825},\n    {2826, 2827},\n    {2828, 2829},\n    {2830, 2831},\n    {2832, 2833},\n    {2834, 2835},\n    {2836, 2837},\n    {2838, 2839},\n    {2840, 2841},\n    {2842, 2843},\n    {2844, 2845},\n    {2846, 2847},\n    {2848, 2849},\n    {2850, 2851},\n    {2852, 2853},\n    {2854, 2855},\n    {2856, 2857},\n    {2858, 2859},\n    {2860, 2861},\n    {2862, 2863},\n    {2864, 2865},\n    {2866, 2867},\n    {2868, 2869},\n    {2870, 2871},\n    {2872, 2873},\n    {2874, 2875},\n    {2876, 2877},\n    {2878, 2879},\n    {2880, 2881},\n    {2882, 2883},\n    {2884, 2885},\n    {2886, 2887},\n    {2888, 2889},\n    {2890, 2891},\n    {2892, 2893},\n    {2894, 2895},\n    {2896, 2897},\n    {2898, 2899},\n    {2900, 2901},\n    {2902, 2903},\n    {2904, 2905},\n    {2906, 2907},\n    {2908, 2909},\n    {2910, 2911},\n    {2912, 2913},\n    {2914, 2915},\n    {2916, 2917},\n    {2918, 2919},\n    {2920, 2921},\n    {2922, 2923},\n    {2924, 2925},\n    {2926, 2927},\n    {2928, 2929},\n    {2930, 2931},\n    {2932, 2933},\n    {2934, 2935},\n    {2936, 2937},\n    {2938, 2939},\n    {2940, 2941},\n    {2942, 2943},\n    {2944, 2945},\n    {2946, 2947},\n    {2948, 2949},\n    {2950, 2951},\n    {2952, 2953},\n    {2954, 2955},\n    {2956, 2957},\n    {2958, 2959},\n    {2960, 2961},\n    {2962, 2963},\n    {2964, 2965},\n    {2966, 2967},\n    {2968, 2969},\n    {2970, 2971},\n    {2972, 2973},\n    {2974, 2975},\n    {2976, 2977},\n    {2978, 2979},\n    {2980, 2981},\n    {2982, 2983},\n    {2984, 2985},\n    {2986, 2987},\n    {2988, 2989},\n    {2990, 2991},\n    {2992, 2993},\n    {2994, 2995},\n    {2996, 2997},\n    {2998, 2999},\n    {3000, 3001},\n    {3002, 3003},\n    {3004, 3005},\n    {3006, 3007},\n    {3008, 3009},\n    {3010, 3011},\n    {3012, 3013},\n    {3014, 3015},\n    {3016, 3017},\n    {3018, 3019},\n    {3020, 3021},\n    {3022, 3023},\n    {3024, 3025},\n    {3026, 3027},\n    {3028, 3029},\n    {3030, 3031},\n    {3032, 3033},\n    {3034, 3035},\n    {3036, 3037},\n    {3038, 3039},\n    {3040, 3041},\n    {3042, 3043},\n    {3044, 3045},\n    {3046, 3047},\n    {3048, 3049},\n    {3050, 3051},\n    {3052, 3053},\n    {3054, 3055},\n    {3056, 3057},\n    {3058, 3059},\n    {3060, 3061},\n    {3062, 3063},\n    {3064, 3065},\n    {3066, 3067},\n    {3068, 3069},\n    {3070, 3071},\n    {3072, 3073},\n    {3074, 3075},\n    {3076, 3077},\n    {3078, 3079},\n    {3080, 3081},\n    {3082, 3083},\n    {3084, 3085},\n    {3086, 3087},\n    {3088, 3089},\n    {3090, 3091},\n    {3092, 3093},\n    {3094, 3095},\n    {3096, 3097},\n    {3098, 3099},\n    {3100, 3101},\n    {3102, 3103},\n    {3104, 3105},\n    {3106, 3107},\n    {3108, 3109},\n    {3110, 3111},\n    {3112, 3113},\n    {3114, 3115},\n    {3116, 3117},\n    {3118, 3119},\n    {3120, 3121},\n    {3122, 3123},\n    {3124, 3125},\n    {3126, 3127},\n    {3128, 3129},\n    {3130, 3131},\n    {3132, 3133},\n    {3134, 3135},\n    {3136, 3137},\n    {3138, 3139},\n    {3140, 3141},\n    {3142, 3143},\n    {3144, 3145},\n    {3146, 3147},\n    {3148, 3149},\n    {3150, 3151},\n    {3152, 3153},\n    {3154, 3155},\n    {3156, 3157},\n    {3158, 3159},\n    {3160, 3161},\n    {3162, 3163},\n    {3164, 3165},\n    {3166, 3167},\n    {3168, 3169},\n    {3170, 3171},\n    {3172, 3173},\n    {3174, 3175},\n    {3176, 3177},\n    {3178, 3179},\n    {3180, 3181},\n    {3182, 3183},\n    {3184, 3185},\n    {3186, 3187},\n    {3188, 3189},\n    {3190, 3191},\n    {3192, 3193},\n    {3194, 3195},\n    {3196, 3197},\n    {3198, 3199},\n    {3200, 3201},\n    {3202, 3203},\n    {3204, 3205},\n    {3206, 3207},\n    {3208, 3209},\n    {3210, 3211},\n    {3212, 3213},\n    {3214, 3215},\n    {3216, 3217},\n    {3218, 3219},\n    {3220, 3221},\n    {3222, 3223},\n    {3224, 3225},\n    {3226, 3227},\n    {3228, 3229},\n    {3230, 3231},\n    {3232, 3233},\n    {3234, 3235},\n    {3236, 3237},\n    {3238, 3239},\n    {3240, 3241},\n    {3242, 3243},\n    {3244, 3245},\n    {3246, 3247},\n    {3248, 3249},\n    {3250, 3251},\n    {3252, 3253},\n    {3254, 3255},\n    {3256, 3257},\n    {3258, 3259},\n    {3260, 3261},\n    {3262, 3263},\n    {3264, 3265},\n    {3266, 3267},\n    {3268, 3269},\n    {3270, 3271},\n    {3272, 3273},\n    {3274, 3275},\n    {3276, 3277},\n    {3278, 3279},\n    {3280, 3281},\n    {3282, 3283},\n    {3284, 3285},\n    {3286, 3287},\n    {3288, 3289},\n    {3290, 3291},\n    {3292, 3293},\n    {3294, 3295},\n    {3296, 3297},\n    {3298, 3299},\n    {3300, 3301},\n    {3302, 3303},\n    {3304, 3305},\n    {3306, 3307},\n    {3308, 3309},\n    {3310, 3311},\n    {3312, 3313},\n    {3314, 3315},\n    {3316, 3317},\n    {3318, 3319},\n    {3320, 3321},\n    {3322, 3323},\n    {3324, 3325},\n    {3326, 3327},\n    {3328, 3329},\n    {3330, 3331},\n    {3332, 3333},\n    {3334, 3335},\n    {3336, 3337},\n    {3338, 3339},\n    {3340, 3341},\n    {3342, 3343},\n    {3344, 3345},\n    {3346, 3347},\n    {3348, 3349},\n    {3350, 3351},\n    {3352, 3353},\n    {3354, 3355},\n    {3356, 3357},\n    {3358, 3359},\n    {3360, 3361},\n    {3362, 3363},\n    {3364, 3365},\n    {3366, 3367},\n    {3368, 3369},\n    {3370, 3371},\n    {3372, 3373},\n    {3374, 3375},\n    {3376, 3377},\n    {3378, 3379},\n    {3380, 3381},\n    {3382, 3383},\n    {3384, 3385},\n    {3386, 3387},\n    {3388, 3389},\n    {3390, 3391},\n    {3392, 3393},\n    {3394, 3395},\n    {3396, 3397},\n    {3398, 3399},\n    {3400, 3401},\n    {3402, 3403},\n    {3404, 3405},\n    {3406, 3407},\n    {3408, 3409},\n    {3410, 3411},\n    {3412, 3413},\n    {3414, 3415},\n    {3416, 3417},\n    {3418, 3419},\n    {3420, 3421},\n    {3422, 3423},\n    {3424, 3425},\n    {3426, 3427},\n    {3428, 3429},\n    {3430, 3431},\n    {3432, 3433},\n    {3434, 3435},\n    {3436, 3437},\n    {3438, 3439},\n    {3440, 3441},\n    {3442, 3443},\n    {3444, 3445},\n    {3446, 3447},\n    {3448, 3449},\n    {3450, 3451},\n    {3452, 3453},\n    {3454, 3455},\n    {3456, 3457},\n    {3458, 3459},\n    {3460, 3461},\n    {3462, 3463},\n    {3464, 3465},\n    {3466, 3467},\n    {3468, 3469},\n    {3470, 3471},\n    {3472, 3473},\n    {3474, 3475},\n    {3476, 3477},\n    {3478, 3479},\n    {3480, 3481},\n    {3482, 3483},\n    {3484, 3485},\n    {3486, 3487},\n    {3488, 3489},\n    {3490, 3491},\n    {3492, 3493},\n    {3494, 3495},\n    {3496, 3497},\n    {3498, 3499},\n    {3500, 3501},\n    {3502, 3503},\n    {3504, 3505},\n    {3506, 3507},\n    {3508, 3509},\n    {3510, 3511},\n    {3512, 3513},\n    {3514, 3515},\n    {3516, 3517},\n    {3518, 3519},\n    {3520, 3521},\n    {3522, 3523},\n    {3524, 3525},\n    {3526, 3527},\n    {3528, 3529},\n    {3530, 3531},\n    {3532, 3533},\n    {3534, 3535},\n    {3536, 3537},\n    {3538, 3539},\n    {3540, 3541},\n    {3542, 3543},\n    {3544, 3545},\n    {3546, 3547},\n    {3548, 3549},\n    {3550, 3551},\n    {3552, 3553},\n    {3554, 3555},\n    {3556, 3557},\n    {3558, 3559},\n    {3560, 3561},\n    {3562, 3563},\n    {3564, 3565},\n    {3566, 3567},\n    {3568, 3569},\n    {3570, 3571},\n    {3572, 3573},\n    {3574, 3575},\n    {3576, 3577},\n    {3578, 3579},\n    {3580, 3581},\n    {3582, 3583},\n    {3584, 3585},\n    {3586, 3587},\n    {3588, 3589},\n    {3590, 3591},\n    {3592, 3593},\n    {3594, 3595},\n    {3596, 3597},\n    {3598, 3599},\n    {3600, 3601},\n    {3602, 3603},\n    {3604, 3605},\n    {3606, 3607},\n    {3608, 3609},\n    {3610, 3611},\n    {3612, 3613},\n    {3614, 3615},\n    {3616, 3617},\n    {3618, 3619},\n    {3620, 3621},\n    {3622, 3623},\n    {3624, 3625},\n    {3626, 3627},\n    {3628, 3629},\n    {3630, 3631},\n    {3632, 3633},\n    {3634, 3635},\n    {3636, 3637},\n    {3638, 3639},\n    {3640, 3641},\n    {3642, 3643},\n    {3644, 3645},\n    {3646, 3647},\n    {3648, 3649},\n    {3650, 3651},\n    {3652, 3653},\n    {3654, 3655},\n    {3656, 3657},\n    {3658, 3659},\n    {3660, 3661},\n    {3662, 3663},\n    {3664, 3665},\n    {3666, 3667},\n    {3668, 3669},\n    {3670, 3671},\n    {3672, 3673},\n    {3674, 3675},\n    {3676, 3677},\n    {3678, 3679},\n    {3680, 3681},\n    {3682, 3683},\n    {3684, 3685},\n    {3686, 3687},\n    {3688, 3689},\n    {3690, 3691},\n    {3692, 3693},\n    {3694, 3695},\n    {3696, 3697},\n    {3698, 3699},\n    {3700, 3701},\n    {3702, 3703},\n    {3704, 3705},\n    {3706, 3707},\n    {3708, 3709},\n    {3710, 3711},\n    {3712, 3713},\n    {3714, 3715},\n    {3716, 3717},\n    {3718, 3719},\n    {3720, 3721},\n    {3722, 3723},\n    {3724, 3725},\n    {3726, 3727},\n    {3728, 3729},\n    {3730, 3731},\n    {3732, 3733},\n    {3734, 3735},\n    {3736, 3737},\n    {3738, 3739},\n    {3740, 3741},\n    {3742, 3743},\n    {3744, 3745},\n    {3746, 3747},\n    {3748, 3749},\n    {3750, 3751},\n    {3752, 3753},\n    {3754, 3755},\n    {3756, 3757},\n    {3758, 3759},\n    {3760, 3761},\n    {3762, 3763},\n    {3764, 3765},\n    {3766, 3767},\n    {3768, 3769},\n    {3770, 3771},\n    {3772, 3773},\n    {3774, 3775},\n    {3776, 3777},\n    {3778, 3779},\n    {3780, 3781},\n    {3782, 3783},\n    {3784, 3785},\n    {3786, 3787},\n    {3788, 3789},\n    {3790, 3791},\n    {3792, 3793},\n    {3794, 3795},\n    {3796, 3797},\n    {3798, 3799},\n    {3800, 3801},\n    {3802, 3803},\n    {3804, 3805},\n    {3806, 3807},\n    {3808, 3809},\n    {3810, 3811},\n    {3812, 3813},\n    {3814, 3815},\n    {3816, 3817},\n    {3818, 3819},\n    {3820, 3821},\n    {3822, 3823},\n    {3824, 3825},\n    {3826, 3827},\n    {3828, 3829},\n    {3830, 3831},\n    {3832, 3833},\n    {3834, 3835},\n    {3836, 3837},\n    {3838, 3839},\n    {3840, 3841},\n    {3842, 3843},\n    {3844, 3845},\n    {3846, 3847},\n    {3848, 3849},\n    {3850, 3851},\n    {3852, 3853},\n    {3854, 3855},\n    {3856, 3857},\n    {3858, 3859},\n    {3860, 3861},\n    {3862, 3863},\n    {3864, 3865},\n    {3866, 3867},\n    {3868, 3869},\n    {3870, 3871},\n    {3872, 3873},\n    {3874, 3875},\n    {3876, 3877},\n    {3878, 3879},\n    {3880, 3881},\n    {3882, 3883},\n    {3884, 3885},\n    {3886, 3887},\n    {3888, 3889},\n    {3890, 3891},\n    {3892, 3893},\n    {3894, 3895},\n    {3896, 3897},\n    {3898, 3899},\n    {3900, 3901},\n    {3902, 3903},\n    {3904, 3905},\n    {3906, 3907},\n    {3908, 3909},\n    {3910, 3911},\n    {3912, 3913},\n    {3914, 3915},\n    {3916, 3917},\n    {3918, 3919},\n    {3920, 3921},\n    {3922, 3923},\n    {3924, 3925},\n    {3926, 3927},\n    {3928, 3929},\n    {3930, 3931},\n    {3932, 3933},\n    {3934, 3935},\n    {3936, 3937},\n    {3938, 3939},\n    {3940, 3941},\n    {3942, 3943},\n    {3944, 3945},\n    {3946, 3947},\n    {3948, 3949},\n    {3950, 3951},\n    {3952, 3953},\n    {3954, 3955},\n    {3956, 3957},\n    {3958, 3959},\n    {3960, 3961},\n    {3962, 3963},\n    {3964, 3965},\n    {3966, 3967},\n    {3968, 3969},\n    {3970, 3971},\n    {3972, 3973},\n    {3974, 3975},\n    {3976, 3977},\n    {3978, 3979},\n    {3980, 3981},\n    {3982, 3983},\n    {3984, 3985},\n    {3986, 3987},\n    {3988, 3989},\n    {3990, 3991},\n    {3992, 3993},\n    {3994, 3995},\n    {3996, 3997},\n    {3998, 3999},\n    {4000, 4001},\n    {4002, 4003},\n    {4004, 4005},\n    {4006, 4007},\n    {4008, 4009},\n    {4010, 4011},\n    {4012, 4013},\n    {4014, 4015},\n    {4016, 4017},\n    {4018, 4019},\n    {4020, 4021},\n    {4022, 4023},\n    {4024, 4025},\n    {4026, 4027},\n    {4028, 4029},\n    {4030, 4031},\n    {4032, 4033},\n    {4034, 4035},\n    {4036, 4037},\n    {4038, 4039},\n    {4040, 4041},\n    {4042, 4043},\n    {4044, 4045},\n    {4046, 4047},\n    {4048, 4049},\n    {4050, 4051},\n    {4052, 4053},\n    {4054, 4055},\n    {4056, 4057},\n    {4058, 4059},\n    {4060, 4061},\n    {4062, 4063},\n    {4064, 4065},\n    {4066, 4067},\n    {4068, 4069},\n    {4070, 4071},\n    {4072, 4073},\n    {4074, 4075},\n    {4076, 4077},\n    {4078, 4079},\n    {4080, 4081},\n    {4082, 4083},\n    {4084, 4085},\n    {4086, 4087},\n    {4088, 4089},\n    {4090, 4091},\n    {4092, 4093},\n    {4094, 4095},\n    {4096, 4097},\n    {4098, 4099},\n    {4100, 4101},\n    {4102, 4103},\n    {4104, 4105},\n    {4106, 4107},\n    {4108, 4109},\n    {4110, 4111},\n    {4112, 4113},\n    {4114, 4115},\n    {4116, 4117},\n    {4118, 4119},\n    {4120, 4121},\n    {4122, 4123},\n    {4124, 4125},\n    {4126, 4127},\n    {4128, 4129},\n    {4130, 4131},\n    {4132, 4133},\n    {4134, 4135},\n    {4136, 4137},\n    {4138, 4139},\n    {4140, 4141},\n    {4142, 4143},\n    {4144, 4145},\n    {4146, 4147},\n    {4148, 4149},\n    {4150, 4151},\n    {4152, 4153},\n    {4154, 4155},\n    {4156, 4157},\n    {4158, 4159},\n    {4160, 4161},\n    {4162, 4163},\n    {4164, 4165},\n    {4166, 4167},\n    {4168, 4169},\n    {4170, 4171},\n    {4172, 4173},\n    {4174, 4175},\n    {4176, 4177},\n    {4178, 4179},\n    {4180, 4181},\n    {4182, 4183},\n    {4184, 4185},\n    {4186, 4187},\n    {4188, 4189},\n    {4190, 4191},\n    {4192, 4193},\n    {4194, 4195},\n    {4196, 4197},\n    {4198, 4199},\n    {4200, 4201},\n    {4202, 4203},\n    {4204, 4205},\n    {4206, 4207},\n    {4208, 4209},\n    {4210, 4211},\n    {4212, 4213},\n    {4214, 4215},\n    {4216, 4217},\n    {4218, 4219},\n    {4220, 4221},\n    {4222, 4223},\n    {4224, 4225},\n    {4226, 4227},\n    {4228, 4229},\n    {4230, 4231},\n    {4232, 4233},\n    {4234, 4235},\n    {4236, 4237},\n    {4238, 4239},\n    {4240, 4241},\n    {4242, 4243},\n    {4244, 4245},\n    {4246, 4247},\n    {4248, 4249},\n    {4250, 4251},\n    {4252, 4253},\n    {4254, 4255},\n    {4256, 4257},\n    {4258, 4259},\n    {4260, 4261},\n    {4262, 4263},\n    {4264, 4265},\n    {4266, 4267},\n    {4268, 4269},\n    {4270, 4271},\n    {4272, 4273},\n    {4274, 4275},\n    {4276, 4277},\n    {4278, 4279},\n    {4280, 4281},\n    {4282, 4283},\n    {4284, 4285},\n    {4286, 4287},\n    {4288, 4289},\n    {4290, 4291},\n    {4292, 4293},\n    {4294, 4295},\n    {4296, 4297},\n    {4298, 4299},\n    {4300, 4301},\n    {4302, 4303},\n    {4304, 4305},\n    {4306, 4307},\n    {4308, 4309},\n    {4310, 4311},\n    {4312, 4313},\n    {4314, 4315},\n    {4316, 4317},\n    {4318, 4319},\n    {4320, 4321},\n    {4322, 4323},\n    {4324, 4325},\n    {4326, 4327},\n    {4328, 4329},\n    {4330, 4331},\n    {4332, 4333},\n    {4334, 4335},\n    {4336, 4337},\n    {4338, 4339},\n    {4340, 4341},\n    {4342, 4343},\n    {4344, 4345},\n    {4346, 4347},\n    {4348, 4349},\n    {4350, 4351},\n    {4352, 4353},\n    {4354, 4355},\n    {4356, 4357},\n    {4358, 4359},\n    {4360, 4361},\n    {4362, 4363},\n    {4364, 4365},\n    {4366, 4367},\n    {4368, 4369},\n    {4370, 4371},\n    {4372, 4373},\n    {4374, 4375},\n    {4376, 4377},\n    {4378, 4379},\n    {4380, 4381},\n    {4382, 4383},\n    {4384, 4385},\n    {4386, 4387},\n    {4388, 4389},\n    {4390, 4391},\n    {4392, 4393},\n    {4394, 4395},\n    {4396, 4397},\n    {4398, 4399},\n    {4400, 4401},\n    {4402, 4403},\n    {4404, 4405},\n    {4406, 4407},\n    {4408, 4409},\n    {4410, 4411},\n    {4412, 4413},\n    {4414, 4415},\n    {4416, 4417},\n    {4418, 4419},\n    {4420, 4421},\n    {4422, 4423},\n    {4424, 4425},\n    {4426, 4427},\n    {4428, 4429},\n    {4430, 4431},\n    {4432, 4433},\n    {4434, 4435},\n    {4436, 4437},\n    {4438, 4439},\n    {4440, 4441},\n    {4442, 4443},\n    {4444, 4445},\n    {4446, 4447},\n    {4448, 4449},\n    {4450, 4451},\n    {4452, 4453},\n    {4454, 4455},\n    {4456, 4457},\n    {4458, 4459},\n    {4460, 4461},\n    {4462, 4463},\n    {4464, 4465},\n    {4466, 4467},\n    {4468, 4469},\n    {4470, 4471},\n    {4472, 4473},\n    {4474, 4475},\n    {4476, 4477},\n    {4478, 4479},\n    {4480, 4481},\n    {4482, 4483},\n    {4484, 4485},\n    {4486, 4487},\n    {4488, 4489},\n    {4490, 4491},\n    {4492, 4493},\n    {4494, 4495},\n    {4496, 4497},\n    {4498, 4499},\n    {4500, 4501},\n    {4502, 4503},\n    {4504, 4505},\n    {4506, 4507},\n    {4508, 4509},\n    {4510, 4511},\n    {4512, 4513},\n    {4514, 4515},\n    {4516, 4517},\n    {4518, 4519},\n    {4520, 4521},\n    {4522, 4523},\n    {4524, 4525},\n    {4526, 4527},\n    {4528, 4529},\n    {4530, 4531},\n    {4532, 4533},\n    {4534, 4535},\n    {4536, 4537},\n    {4538, 4539},\n    {4540, 4541},\n    {4542, 4543},\n    {4544, 4545},\n    {4546, 4547},\n    {4548, 4549},\n    {4550, 4551},\n    {4552, 4553},\n    {4554, 4555},\n    {4556, 4557},\n    {4558, 4559},\n    {4560, 4561},\n    {4562, 4563},\n    {4564, 4565},\n    {4566, 4567},\n    {4568, 4569},\n    {4570, 4571},\n    {4572, 4573},\n    {4574, 4575},\n    {4576, 4577},\n    {4578, 4579},\n    {4580, 4581},\n    {4582, 4583},\n    {4584, 4585},\n    {4586, 4587},\n    {4588, 4589},\n    {4590, 4591},\n    {4592, 4593},\n    {4594, 4595},\n    {4596, 4597},\n    {4598, 4599},\n    {4600, 4601},\n    {4602, 4603},\n    {4604, 4605},\n    {4606, 4607},\n    {4608, 4609},\n    {4610, 4611},\n    {4612, 4613},\n    {4614, 4615},\n    {4616, 4617},\n    {4618, 4619},\n    {4620, 4621},\n    {4622, 4623},\n    {4624, 4625},\n    {4626, 4627},\n    {4628, 4629},\n    {4630, 4631},\n    {4632, 4633},\n    {4634, 4635},\n    {4636, 4637},\n    {4638, 4639},\n    {4640, 4641},\n    {4642, 4643},\n    {4644, 4645},\n    {4646, 4647},\n    {4648, 4649},\n    {4650, 4651},\n    {4652, 4653},\n    {4654, 4655},\n    {4656, 4657},\n    {4658, 4659},\n    {4660, 4661},\n    {4662, 4663},\n    {4664, 4665},\n    {4666, 4667},\n    {4668, 4669},\n    {4670, 4671},\n    {4672, 4673},\n    {4674, 4675},\n    {4676, 4677},\n    {4678, 4679},\n    {4680, 4681},\n    {4682, 4683},\n    {4684, 4685},\n    {4686, 4687},\n    {4688, 4689},\n    {4690, 4691},\n    {4692, 4693},\n    {4694, 4695},\n    {4696, 4697},\n    {4698, 4699},\n    {4700, 4701},\n    {4702, 4703},\n    {4704, 4705},\n    {4706, 4707},\n    {4708, 4709},\n    {4710, 4711},\n    {4712, 4713},\n    {4714, 4715},\n    {4716, 4717},\n    {4718, 4719},\n    {4720, 4721},\n    {4722, 4723},\n    {4724, 4725},\n    {4726, 4727},\n    {4728, 4729},\n    {4730, 4731},\n    {4732, 4733},\n    {4734, 4735},\n    {4736, 4737},\n    {4738, 4739},\n    {4740, 4741},\n    {4742, 4743},\n    {4744, 4745},\n    {4746, 4747},\n    {4748, 4749},\n    {4750, 4751},\n    {4752, 4753},\n    {4754, 4755},\n    {4756, 4757},\n    {4758, 4759},\n    {4760, 4761},\n    {4762, 4763},\n    {4764, 4765},\n    {4766, 4767},\n    {4768, 4769},\n    {4770, 4771},\n    {4772, 4773},\n    {4774, 4775},\n    {4776, 4777},\n    {4778, 4779},\n    {4780, 4781},\n    {4782, 4783},\n    {4784, 4785},\n    {4786, 4787},\n    {4788, 4789},\n    {4790, 4791},\n    {4792, 4793},\n    {4794, 4795},\n    {4796, 4797},\n    {4798, 4799},\n    {4800, 4801},\n    {4802, 4803},\n    {4804, 4805},\n    {4806, 4807},\n    {4808, 4809},\n    {4810, 4811},\n    {4812, 4813},\n    {4814, 4815},\n    {4816, 4817},\n    {4818, 4819},\n    {4820, 4821},\n    {4822, 4823},\n    {4824, 4825},\n    {4826, 4827},\n    {4828, 4829},\n    {4830, 4831},\n    {4832, 4833},\n    {4834, 4835},\n    {4836, 4837},\n    {4838, 4839},\n    {4840, 4841},\n    {4842, 4843},\n    {4844, 4845},\n    {4846, 4847},\n    {4848, 4849},\n    {4850, 4851},\n    {4852, 4853},\n    {4854, 4855},\n    {4856, 4857},\n    {4858, 4859},\n    {4860, 4861},\n    {4862, 4863},\n    {4864, 4865},\n    {4866, 4867},\n    {4868, 4869},\n    {4870, 4871},\n    {4872, 4873},\n    {4874, 4875},\n    {4876, 4877},\n    {4878, 4879},\n    {4880, 4881},\n    {4882, 4883},\n    {4884, 4885},\n    {4886, 4887},\n    {4888, 4889},\n    {4890, 4891},\n    {4892, 4893},\n    {4894, 4895},\n    {4896, 4897},\n    {4898, 4899},\n    {4900, 4901},\n    {4902, 4903},\n    {4904, 4905},\n    {4906, 4907},\n    {4908, 4909},\n    {4910, 4911},\n    {4912, 4913},\n    {4914, 4915},\n    {4916, 4917},\n    {4918, 4919},\n    {4920, 4921},\n    {4922, 4923},\n    {4924, 4925},\n    {4926, 4927},\n    {4928, 4929},\n    {4930, 4931},\n    {4932, 4933},\n    {4934, 4935},\n    {4936, 4937},\n    {4938, 4939},\n    {4940, 4941},\n    {4942, 4943},\n    {4944, 4945},\n    {4946, 4947},\n    {4948, 4949},\n    {4950, 4951},\n    {4952, 4953},\n    {4954, 4955},\n    {4956, 4957},\n    {4958, 4959},\n    {4960, 4961},\n    {4962, 4963},\n    {4964, 4965},\n    {4966, 4967},\n    {4968, 4969},\n    {4970, 4971},\n    {4972, 4973},\n    {4974, 4975},\n    {4976, 4977},\n    {4978, 4979},\n    {4980, 4981},\n    {4982, 4983},\n    {4984, 4985},\n    {4986, 4987},\n    {4988, 4989},\n    {4990, 4991},\n    {4992, 4993},\n    {4994, 4995},\n    {4996, 4997},\n    {4998, 4999},\n  };\n}\n"
    },
    {
      "testname": "Latent.java",
      "testlanguage": "java",
      "expected-problems": 12,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\npublic class Latent {\n  // Without --topl-filter-unsure, this should be a latent issue marked as PULSE_MANIFEST\n  static void test_Ok(int x) {\n    g(x);\n  }\n\n  // Without --topl-filter-unsure, this should remain a latent issue, marked as TOPL_MANIFEST\n  static void test_Latent(N p) {\n    N old_p = p;\n    while (p != null) {\n      p = p.next;\n      if (old_p == p) {\n        g(42);\n        break;\n      }\n    }\n  }\n\n  static void g(int _x) {}\n}\n\nclass N {\n  int data;\n  N next;\n}\n"
    },
    {
      "testname": "Latent.java",
      "testlanguage": "java",
      "expected-problems": 5,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\npublic abstract class Latent {\n\n  // This is a latent issue because it depends on the caller whether x is null\n  void test_Latent(Object x) {\n    f(x);\n  }\n\n  // Found only if --topl-nonnull-soft given.\n  void test_Bad() {\n    g();\n  }\n\n  abstract void f(Object _x);\n\n  abstract Object g();\n}\n"
    },
    {
      "testname": "Flows.java",
      "testlanguage": "java",
      "expected-problems": 11,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\npublic class Flows {\n  static void test(int x) {\n    bar(get(x));\n  }\n\n  static Object get(int x) {\n    if (x < 0) return foo1();\n    else return foo2();\n  }\n\n  static Object foo1() {\n    return new Object();\n  }\n\n  static Object foo2() {\n    return new Object();\n  }\n\n  static void bar(Object x) {}\n}\n"
    },
    {
      "testname": "ServletTests.java",
      "testlanguage": "java",
      "expected-problems": 5,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\n\nclass ServletTests {\n  void aBad(ServletResponse response) throws IOException {\n    PrintWriter w = response.getWriter();\n    ServletOutputStream s = response.getOutputStream();\n  }\n\n  void bBad(ServletResponse response) throws IOException {\n    ServletOutputStream s = response.getOutputStream();\n    PrintWriter w = response.getWriter();\n  }\n\n  void cBad(ServletRequest request, ServletResponse response, RequestDispatcher dispatcher)\n      throws IOException, ServletException {\n    PrintWriter w = response.getWriter();\n    dispatcher.forward(request, response);\n  }\n\n  // A bugfix for cBad.\n  void cOk(ServletRequest request, ServletResponse response, RequestDispatcher dispatcher)\n      throws IOException, ServletException {\n    PrintWriter w = response.getWriter();\n    w.flush();\n    dispatcher.forward(request, response);\n  }\n}\n"
    },
    {
      "testname": "IndexSkip.java",
      "testlanguage": "java",
      "expected-problems": 9,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.util.*;\n\npublic class IndexSkip {\n  public static void main(String[] args) {\n    foo(new ArrayList<>(Arrays.asList(1, 2, 3, 4)));\n  }\n\n  static void foo(ArrayList<Integer> xs) {\n    for (int i = 0; i < xs.size(); ++i) {\n      int x = xs.get(i);\n      if (x % 2 == 0) xs.remove(i);\n    }\n  }\n}\n"
    },
    {
      "testname": "IndirectSkip.java",
      "testlanguage": "java",
      "expected-problems": 10,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport java.util.ArrayList;\n\nclass Holder {\n  void doSomething() {}\n}\n\nclass MultiHolder {\n  ArrayList<Holder> holders = new ArrayList<>();\n\n  void remove(int i) {\n    Holder h = holders.get(i);\n    h.doSomething();\n    holders.remove(i);\n  }\n\n  int size() {\n    return holders.size();\n  }\n}\n\nclass View {\n  MultiHolder mh = new MultiHolder();\n\n  void setCapacityBad(int n) {\n    for (int i = n; i < mh.size(); ++i) {\n      mh.remove(i);\n    }\n  }\n}\n"
    },
    {
      "testname": "SlowIterTests.java",
      "testlanguage": "java",
      "expected-problems": 9,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport java.util.Map;\n\nclass SlowIterTests {\n  static <K, V> void aBad(Map<K, V> m) {\n    for (K k : m.keySet()) {\n      System.out.printf(\"%s -> %s\\n\", k, m.get(k));\n    }\n  }\n\n  static <K, V> void aOk(Map<K, V> m) {\n    for (Map.Entry<K, V> e : m.entrySet()) {\n      System.out.printf(\"%s -> %s\\n\", e.getKey(), e.getValue());\n    }\n  }\n\n  // Inter-procedural variant of aBad.\n  static <K, V> void bBad(Map<K, V> m) {\n    for (K k : m.keySet()) {\n      print(k, m);\n    }\n  }\n\n  static <K, V> void print(K k, Map<K, V> m) {\n    System.out.printf(\"%s -> %s\\n\", k, m.get(k));\n  }\n}\n"
    },
    {
      "testname": "StringLiteral.java",
      "testlanguage": "java",
      "expected-problems": 8,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nabstract class StringLiteral {\n  abstract String source(String type);\n\n  abstract void sink(String s);\n\n  void fOk() {\n    sink(\"ok\");\n  }\n\n  void fBad() {\n    sink(\"bad\");\n  }\n\n  void gBad() {\n    gLatent(\"bad\");\n  }\n\n  void gLatent(String s) {\n    sink(s);\n  }\n\n  void hOk() {\n    sink(source(\"ok\"));\n  }\n\n  void hBad() {\n    sink(source(\"bad\"));\n  }\n}\n"
    },
    {
      "testname": "Taint.java",
      "testlanguage": "java",
      "expected-problems": 4,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nabstract class Taint {\n  abstract String badString();\n\n  abstract void sendToDb(String arg);\n\n  void fOk() {\n    String s0 = badString();\n    String s1 = \"foo\";\n    if (s0 == s1) return; // Hint for Pulse.\n    sendToDb(s1);\n  }\n\n  void FN_fBad() {\n    String s0 = badString();\n    if (s0 == null) return;\n    String s1 = \"foo\" + s0 + \"bar\";\n    if (s1 == s0) return;\n    String s2 = \"oops\" + s1;\n    if (s2 == s1 || s2 == s0) return;\n    String s3 = s1 + s1;\n    if (s3 == s0 || s3 == s1 || s3 == s2) return;\n    sendToDb(s2);\n  }\n}\n"
    },
    {
      "testname": "TypeFilter.java",
      "testlanguage": "java",
      "expected-problems": 30,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass A {}\n\n// TypeFilter.topl says this is bad, as is everything that extends it.\nclass B {}\n\nclass C extends B {}\n\nclass D extends C {}\n\nclass E extends A {}\n\nclass LongBadName {}\n\npublic class TypeFilter {\n  static void f(Object x) {}\n\n  static void aOk(A x) {\n    f(x);\n  }\n\n  static void bBad(B x) {\n    f(x);\n  }\n\n  static void cBad(C x) {\n    f(x);\n  }\n\n  static void dBad(D x) {\n    f(x);\n  }\n\n  static void eOk(E x) {\n    f(x);\n  }\n\n  static void longArgBad(LongBadName x) {\n    f(x);\n  }\n\n  static void longLocalBad() {\n    f(new B());\n  }\n\n  // Should fail ReturnB and ReturnNotC\n  // TODO: Tests do not record which TOPL property fails.\n  static void fBad() {\n    mk_b();\n  }\n\n  // Should fail ReturnB and ReturnC\n  static void gBad() {\n    mk_c();\n  }\n\n  // helper\n  static B mk_b() {\n    return new B();\n  }\n\n  // helper\n  static C mk_c() {\n    return new C();\n  }\n}\n"
    },
    {
      "testname": "Valid.java",
      "testlanguage": "java",
      "expected-problems": 16,
      "code": "/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass Valid {\n  public static boolean is_valid_vn(int i) {\n    return i >= 1 && i <= 10;\n  }\n\n  public static void id_to_vn(int i) {}\n\n  public static void safe_call(int id) {\n    if (is_valid_vn(id)) {\n      id_to_vn(id);\n    }\n  }\n\n  public static void FP_testOk() {\n    safe_call(1);\n  }\n}\n"
    }
  ]
}