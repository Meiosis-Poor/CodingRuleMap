{
  "name": "AvoidCapturingLambdaCoroutines",
  "language": "cpp",
  "description": ".. title:: clang-tidy - cppcoreguidelines-avoid-capturing-lambda-coroutines",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 45,
  "branches": 1,
  "apis": 15,
  "test": [
    {
      "description": null,
      "expected-problems": 7,
      "expected-linenumbers": [
        9,
        11,
        13,
        15,
        17,
        19,
        25
      ],
      "code": "\n// RUN: %check_clang_tidy -std=c++20-or-later %s cppcoreguidelines-avoid-capturing-lambda-coroutines %t -- -- -isystem %S/Inputs/system\n\n#include <coroutines.h>\n\nvoid Caught() {\n    int v;\n\n    [&] () -> task { int y = v; co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    [=] () -> task { int y = v; co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    [v] () -> task { co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    [&v] () -> task { co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    [y=v] () -> task { co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    [y{v}] () -> task { co_return; };\n    // CHECK-MESSAGES: [[@LINE-1]]:5: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n}\n\nstruct S {\n    void m() {\n        [this] () -> task { co_return; };\n        // CHECK-MESSAGES: [[@LINE-1]]:9: warning: coroutine lambda may cause use-after-free, avoid captures or ensure lambda closure object has guaranteed lifetime [cppcoreguidelines-avoid-capturing-lambda-coroutines]\n    }\n};\n\nvoid Safe() {\n    int v;\n    [] () -> task { co_return; };\n    [&] () -> task { co_return; };\n    [=] () -> task { co_return; };\n\n    [&v]{++v;}();\n}"
    }
  ]
}