{
  "name": "DeprecatedIosBaseAliases",
  "language": "cpp",
  "description": "modernize-deprecated-ios-base-aliases",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 72,
  "branches": 6,
  "apis": 34,
  "test": [
    {
      "description": null,
      "expected-problems": 39,
      "expected-linenumbers": [
        21,
        26,
        29,
        35,
        39,
        45,
        51,
        57,
        62,
        67,
        68,
        72,
        77,
        83,
        88,
        93,
        96,
        99,
        104,
        108,
        109,
        114,
        119,
        123,
        126,
        134,
        141,
        145,
        150,
        153,
        164,
        169,
        194,
        196,
        208,
        214,
        218,
        230,
        237
      ],
      "code": "\n// RUN: %check_clang_tidy %s modernize-deprecated-ios-base-aliases %t\n\nnamespace std {\nclass ios_base {\npublic:\n  typedef int io_state;\n  typedef int open_mode;\n  typedef int seek_dir;\n\n  typedef int streampos;\n  typedef int streamoff;\n};\n\ntemplate <class CharT>\nclass basic_ios : public ios_base {\n};\n} // namespace std\n\n// Test function return values (declaration)\nstd::ios_base::io_state f_5();\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: 'std::ios_base::io_state' is deprecated; use 'std::ios_base::iostate' instead [modernize-deprecated-ios-base-aliases]\n// CHECK-FIXES: std::ios_base::iostate f_5();\n\n// Test function parameters.\nvoid f_6(std::ios_base::open_mode);\n// CHECK-MESSAGES: :[[@LINE-1]]:25: warning: 'std::ios_base::open_mode' is deprecated\n// CHECK-FIXES: void f_6(std::ios_base::openmode);\nvoid f_7(const std::ios_base::seek_dir &);\n// CHECK-MESSAGES: :[[@LINE-1]]:31: warning: 'std::ios_base::seek_dir' is deprecated\n// CHECK-FIXES: void f_7(const std::ios_base::seekdir &);\n\n// Test on record type fields.\nstruct A {\n  std::ios_base::io_state field;\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate field;\n\n  typedef std::ios_base::io_state int_ptr_type;\n  // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: typedef std::ios_base::iostate int_ptr_type;\n};\n\nstruct B : public std::ios_base {\n  io_state a;\n  // CHECK-MESSAGES: :[[@LINE-1]]:3: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: iostate a;\n};\n\nstruct C : public std::basic_ios<char> {\n  io_state a;\n  // CHECK-MESSAGES: :[[@LINE-1]]:3: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: iostate a;\n};\n\nvoid f_1() {\n  std::ios_base::io_state a;\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate a;\n\n  // Check that spaces aren't modified unnecessarily.\n  std :: ios_base :: io_state b;\n  // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std :: ios_base :: iostate b;\n\n  // Test construction from a temporary.\n  std::ios_base::io_state c = std::ios_base::io_state{};\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-MESSAGES: :[[@LINE-2]]:46: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate c = std::ios_base::iostate{};\n\n  typedef std::ios_base::io_state alias1;\n  // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: typedef std::ios_base::iostate alias1;\n  alias1 d(a);\n\n  using alias2 = std::ios_base::io_state;\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: using alias2 = std::ios_base::iostate;\n  alias2 e;\n\n  // Test pointers.\n  std::ios_base::io_state *f;\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate *f;\n\n  // Test 'static' declarations.\n  static std::ios_base::io_state g;\n  // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: static std::ios_base::iostate g;\n\n  // Test with cv-qualifiers.\n  const std::ios_base::io_state h(0);\n  // CHECK-MESSAGES: :[[@LINE-1]]:24: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: const std::ios_base::iostate h(0);\n  volatile std::ios_base::io_state i;\n  // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: volatile std::ios_base::iostate i;\n  const volatile std::ios_base::io_state j(0);\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: const volatile std::ios_base::iostate j(0);\n\n  // Test auto and initializer-list.\n  auto k = std::ios_base::io_state{};\n  // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: auto k = std::ios_base::iostate{};\n\n  std::ios_base::io_state l{std::ios_base::io_state()};\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-MESSAGES: :[[@LINE-2]]:44: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate l{std::ios_base::iostate()};\n\n  // Test temporaries.\n  std::ios_base::io_state();\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::ios_base::iostate();\n\n  // Test inherited type usage\n  std::basic_ios<char>::io_state m;\n  // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: std::basic_ios<char>::iostate m;\n\n  std::ios_base::streampos n;\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::streampos' is deprecated [modernize-deprecated-ios-base-aliases]\n\n  std::ios_base::streamoff o;\n  // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: 'std::ios_base::streamoff' is deprecated [modernize-deprecated-ios-base-aliases]\n}\n\n// Test without the nested name specifiers.\nvoid f_2() {\n  using namespace std;\n\n  ios_base::io_state a;\n  // CHECK-MESSAGES: :[[@LINE-1]]:13: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: ios_base::iostate a;\n}\n\n// Test messing-up with macros.\nvoid f_4() {\n#define MACRO_1 std::ios_base::io_state\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: 'std::ios_base::io_state' is deprecated\n  MACRO_1 a;\n\n#define MACRO_2 io_state\n  // CHECK-MESSAGES: :[[@LINE-1]]:17: warning: 'std::ios_base::io_state' is deprecated\n  std::ios_base::MACRO_2 b;\n\n#define MACRO_3 std::ios_base\n  MACRO_3::io_state c;\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: 'std::ios_base::io_state' is deprecated\n\n#define MACRO_4(type) type::io_state\n  // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: 'std::ios_base::io_state' is deprecated\n  MACRO_4(std::ios_base) d;\n\n#undef MACRO_1\n#undef MACRO_2\n#undef MACRO_3\n#undef MACRO_4\n}\n\n// Test function return values (definition).\nstd::ios_base::io_state f_5()\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: 'std::ios_base::io_state' is deprecated\n// CHECK-FIXES: std::ios_base::iostate f_5()\n{\n  // Test constructor.\n  return std::ios_base::io_state(0);\n  // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: return std::ios_base::iostate(0);\n}\n\n// Test that other aliases with same name aren't replaced\nstruct my_ios_base {\n  typedef int io_state;\n};\n\nnamespace ns_1 {\nstruct my_ios_base2 {\n  typedef int io_state;\n};\n} // namespace ns_1\n\nvoid f_8() {\n  my_ios_base::io_state a;\n\n  ns_1::my_ios_base2::io_state b;\n}\n\n// Test templates\ntemplate <typename X>\nvoid f_9() {\n  typename std::basic_ios<X>::io_state p;\n  // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: 'std::ios_base::io_state' is deprecated\n  typename std::ios_base::io_state q;\n  // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: typename std::ios_base::iostate q;\n}\n\ntemplate <typename T>\nvoid f_10(T arg) {\n  T x(arg);\n}\n\ntemplate <typename T>\nvoid f_11() {\n  typename T::io_state x{};\n  // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: 'std::ios_base::io_state' is deprecated\n}\n\ntemplate <typename T>\nstruct D : std::ios_base {\n  io_state a;\n  // CHECK-MESSAGES: :[[@LINE-1]]:3: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: iostate a;\n\n  typename std::basic_ios<T>::io_state b;\n  // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: 'std::ios_base::io_state' is deprecated\n};\n\ntemplate <typename T>\nstruct E {\n  T t;\n};\n\nvoid f_12() {\n  f_9<char>();\n\n  f_10<std::ios_base::io_state>(0);\n  // CHECK-MESSAGES: :[[@LINE-1]]:23: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: f_10<std::ios_base::iostate>(0);\n\n  f_11<std::ios_base>();\n  D<char> d;\n\n  E<std::ios_base::io_state> e;\n  // CHECK-MESSAGES: :[[@LINE-1]]:20: warning: 'std::ios_base::io_state' is deprecated\n  // CHECK-FIXES: E<std::ios_base::iostate> e;\n}"
    }
  ]
}