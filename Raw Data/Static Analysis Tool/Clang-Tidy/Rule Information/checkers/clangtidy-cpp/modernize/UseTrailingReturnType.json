{
  "name": "UseTrailingReturnType",
  "language": "cpp",
  "description": ".. title:: clang-tidy - modernize-use-trailing-return-type",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 641,
  "branches": 86,
  "apis": 412,
  "test": [
    {
      "description": null,
      "expected-problems": 132,
      "expected-linenumbers": [
        29,
        32,
        35,
        38,
        41,
        44,
        47,
        55,
        60,
        66,
        69,
        72,
        80,
        88,
        92,
        101,
        104,
        107,
        110,
        113,
        116,
        119,
        122,
        125,
        128,
        131,
        134,
        137,
        140,
        144,
        147,
        150,
        153,
        157,
        168,
        171,
        178,
        182,
        185,
        188,
        196,
        199,
        202,
        205,
        208,
        211,
        214,
        217,
        220,
        228,
        231,
        235,
        240,
        244,
        248,
        252,
        261,
        265,
        269,
        273,
        277,
        281,
        285,
        289,
        293,
        297,
        302,
        307,
        311,
        315,
        319,
        323,
        327,
        336,
        339,
        342,
        345,
        347,
        349,
        356,
        364,
        374,
        379,
        383,
        388,
        392,
        395,
        398,
        401,
        405,
        409,
        412,
        415,
        418,
        424,
        430,
        435,
        439,
        442,
        445,
        449,
        453,
        455,
        458,
        462,
        464,
        467,
        469,
        472,
        476,
        480,
        484,
        487,
        496,
        499,
        502,
        505,
        508,
        511,
        514,
        517,
        520,
        523,
        527,
        531,
        534,
        538,
        544,
        548,
        552,
        556,
        566
      ],
      "code": "\n// RUN: %check_clang_tidy -std=c++14-or-later %s modernize-use-trailing-return-type %t -- -- -fdeclspec -fexceptions -DCOMMAND_LINE_INT=int\n\nnamespace std {\n    template <typename T>\n    class vector;\n\n    template <typename T, int N>\n    class array;\n\n    class string;\n\n    template <typename T>\n    class basic_ostream;\n\n    using ostream = basic_ostream<char>;\n\n    template <typename T>\n    auto declval() -> T;\n\n    template <typename... Ts>\n    class tuple;\n}\n\n//\n// Functions\n//\n\nint f();\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto f() -> int;{{$}}\nint ((f))();\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto ((f))() -> int;{{$}}\nint f(int);\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto f(int) -> int;{{$}}\nint f(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto f(int arg) -> int;{{$}}\nint f(int arg1, int arg2, int arg3);\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto f(int arg1, int arg2, int arg3) -> int;{{$}}\nint f(int arg1, int arg2, int arg3, ...);\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto f(int arg1, int arg2, int arg3, ...) -> int;{{$}}\ntemplate <typename T> int f(T t);\n// CHECK-MESSAGES: :[[@LINE-1]]:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}template <typename T> auto f(T t) -> int;{{$}}\n\n//\n// Functions with formatting\n//\n\nint a1() { return 42; }\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a1() -> int { return 42; }{{$}}\nint a2() {\n    return 42;\n}\n// CHECK-MESSAGES: :[[@LINE-3]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a2() -> int {{{$}}\nint a3()\n{\n    return 42;\n}\n// CHECK-MESSAGES: :[[@LINE-4]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a3() -> int{{$}}\nint a4(int   arg   )   ;\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a4(int   arg   ) -> int   ;{{$}}\nint a5\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a5{{$}}\n(int arg);\n// CHECK-FIXES: {{^}}(int arg) -> int;{{$}}\nconst\nint\n*\na7\n// CHECK-MESSAGES: :[[@LINE-1]]:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n()\n// CHECK-FIXES: {{^}}() -> const{{$}}\n// CHECK-FIXES: {{^}}int{{$}}\n// CHECK-FIXES: {{^}}*{{$}}\n;\n\nint*a7(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a7(int arg) -> int*;{{$}}\ntemplate<template <typename> class C>\nC<int>a8(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto a8(int arg) -> C<int>;{{$}}\n\n\n//\n// Functions with qualifiers and specifiers\n//\n\ninline int d1(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto d1(int arg) -> int;{{$}}\nextern \"C\" int d2(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}extern \"C\" auto d2(int arg) -> int;{{$}}\ninline int d3(int arg) noexcept(true);\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto d3(int arg) noexcept(true) -> int;{{$}}\ninline int d4(int arg) try { return 0; } catch(...) { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto d4(int arg) -> int try { return 0; } catch(...) { return 0; }{{$}}\nint d5(int arg) throw();\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto d5(int arg) throw() -> int;{{$}}\nstatic int d6(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto d6(int arg) -> int;{{$}}\nint static d6(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto static d6(int arg) -> int;{{$}}\nunsigned static int d7(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto d7(int arg) -> unsigned int;{{$}}\nconst long static int volatile constexpr unsigned inline long d8(int arg);\n// CHECK-MESSAGES: :[[@LINE-1]]:63: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static constexpr inline auto d8(int arg) -> const long int volatile unsigned long;{{$}}\nint constexpr d9();\n// CHECK-MESSAGES: :[[@LINE-1]]:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto constexpr d9() -> int;{{$}}\ninline int constexpr d10();\n// CHECK-MESSAGES: :[[@LINE-1]]:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto constexpr d10() -> int;{{$}}\nunsigned constexpr int d11();\n// CHECK-MESSAGES: :[[@LINE-1]]:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}constexpr auto d11() -> unsigned int;{{$}}\nunsigned extern int d13();\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}extern auto d13() -> unsigned int;{{$}}\nint static& d14();\n// CHECK-MESSAGES: :[[@LINE-1]]:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto d14() -> int &;{{$}}\nclass DDD {\n    int friend unsigned m1();\n// CHECK-MESSAGES: :[[@LINE-1]]:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    friend auto m1() -> int unsigned;{{$}}\n    int friend unsigned m1() { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    friend auto m1() -> int unsigned { return 0; }{{$}}\n    const long int friend volatile constexpr unsigned inline long m2();\n// CHECK-MESSAGES: :[[@LINE-1]]:67: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    friend constexpr inline auto m2() -> const long int volatile unsigned long;{{$}}\n    int virtual unsigned m3();\n// CHECK-MESSAGES: :[[@LINE-1]]:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto m3() -> int unsigned;{{$}}\n    template <typename T>\n    int friend unsigned m4();\n// CHECK-MESSAGES: :[[@LINE-1]]:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    friend auto m4() -> int unsigned;{{$}}\n};\n\n//\n// Functions in namespaces\n//\n\nnamespace N {\n    int e1();\n}\n// CHECK-MESSAGES: :[[@LINE-2]]:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto e1() -> int;{{$}}\nint N::e1() { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto N::e1() -> int { return 0; }{{$}}\n\n//\n// Functions with unsupported return types\n//\nint (*e3())(double);\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}int (*e3())(double);{{$}}\nstruct A;\nint A::* e5();\n// CHECK-MESSAGES: :[[@LINE-1]]:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}int A::* e5();{{$}}\nint std::vector<std::string>::* e6();\n// CHECK-MESSAGES: :[[@LINE-1]]:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}int std::vector<std::string>::* e6();{{$}}\nint (std::vector<std::string>::*e7())(double);\n// CHECK-MESSAGES: :[[@LINE-1]]:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}int (std::vector<std::string>::*e7())(double);{{$}}\n\n//\n// Functions with complex return types\n//\n\ninline volatile const std::vector<std::string> e2();\n// CHECK-MESSAGES: :[[@LINE-1]]:48: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto e2() -> volatile const std::vector<std::string>;{{$}}\ninline const std::vector<std::string> volatile e2();\n// CHECK-MESSAGES: :[[@LINE-1]]:48: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto e2() -> const std::vector<std::string> volatile;{{$}}\ninline std::vector<std::string> const volatile e2();\n// CHECK-MESSAGES: :[[@LINE-1]]:48: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}inline auto e2() -> std::vector<std::string> const volatile;{{$}}\nint* e8();\n// CHECK-MESSAGES: :[[@LINE-1]]:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto e8() -> int*;{{$}}\nstatic const char* e9(void* user_data);\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto e9(void* user_data) -> const char*;{{$}}\nstatic const char* const e10(void* user_data);\n// CHECK-MESSAGES: :[[@LINE-1]]:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto e10(void* user_data) -> const char* const;{{$}}\nstatic const char** volatile * const & e11(void* user_data);\n// CHECK-MESSAGES: :[[@LINE-1]]:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto e11(void* user_data) -> const char** volatile * const &;{{$}}\nstatic const char* const * const * const e12(void* user_data);\n// CHECK-MESSAGES: :[[@LINE-1]]:42: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}static auto e12(void* user_data) -> const char* const * const * const;{{$}}\nstruct A e13();\n// CHECK-MESSAGES: :[[@LINE-1]]:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto e13() -> struct A;{{$}}\n\n//\n// deduced return types\n//\n\nconst auto ded1();\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto ded1() -> const auto;{{$}}\nconst auto& ded2();\n// CHECK-MESSAGES: :[[@LINE-1]]:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto ded2() -> const auto&;{{$}}\n\ndecltype(auto) ded3();\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto ded3() -> decltype(auto);{{$}}\n\n\ndecltype(1 + 2) dec1() { return 1 + 2; }\n// CHECK-MESSAGES: :[[@LINE-1]]:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto dec1() -> decltype(1 + 2) { return 1 + 2; }{{$}}\ntemplate <typename F, typename T>\ndecltype(std::declval<F>(std::declval<T>)) dec2(F f, T t) { return f(t); }\n// CHECK-MESSAGES: :[[@LINE-1]]:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto dec2(F f, T t) -> decltype(std::declval<F>(std::declval<T>)) { return f(t); }{{$}}\ntemplate <typename T>\ntypename decltype(std::declval<T>())::value_type dec3();\n// CHECK-MESSAGES: :[[@LINE-1]]:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto dec3() -> typename decltype(std::declval<T>())::value_type;{{$}}\ntemplate <typename T>\ndecltype(std::declval<T>())* dec4();\n// CHECK-MESSAGES: :[[@LINE-1]]:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto dec4() -> decltype(std::declval<T>())*;{{$}}\n\n//\n// Methods\n//\n\nstruct B {\n    B& operator=(const B&);\n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto operator=(const B&) -> B&;{{$}}\n\n    double base1(int, bool b);\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base1(int, bool b) -> double;{{$}}\n\n    virtual double base2(int, bool b) { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base2(int, bool b) -> double { return 0; }{{$}}\n\n    virtual float base3() const = 0;\n// CHECK-MESSAGES: :[[@LINE-1]]:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base3() const -> float = 0;{{$}}\n\n    virtual float base4() volatile = 0;\n// CHECK-MESSAGES: :[[@LINE-1]]:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base4() volatile -> float = 0;{{$}}\n\n    double base5(int, bool b) &&;\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base5(int, bool b) && -> double;{{$}}\n\n    double base6(int, bool b) const &&;\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base6(int, bool b) const && -> double;{{$}}\n\n    double base7(int, bool b) const & = delete;\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base7(int, bool b) const & -> double = delete;{{$}}\n\n    double base8(int, bool b) const volatile & = delete;\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base8(int, bool b) const volatile & -> double = delete;{{$}}\n\n    virtual const char * base9() const noexcept { return \"\"; }\n// CHECK-MESSAGES: :[[@LINE-1]]:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base9() const noexcept -> const char * { return \"\"; }{{$}}\n};\n\ndouble B::base1(int, bool b) { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto B::base1(int, bool b) -> double { return 0; }{{$}}\n\nstruct D : B {\n    virtual double f1(int, bool b) final;\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto f1(int, bool b) -> double final;{{$}}\n\n    virtual double base2(int, bool b) override;\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base2(int, bool b) -> double override;{{$}}\n\n    virtual float base3() const override final { return 0; }\n// CHECK-MESSAGES: :[[@LINE-1]]:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    virtual auto base3() const -> float override final { return 0; }{{$}}\n\n    const char * base9() const noexcept override { return \"\"; }\n// CHECK-MESSAGES: :[[@LINE-1]]:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto base9() const noexcept -> const char * override { return \"\"; }{{$}}\n\n    int f2() __restrict;\n// CHECK-MESSAGES: :[[@LINE-1]]:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto f2() __restrict -> int;{{$}}\n\n    volatile int* __restrict f3() const __restrict noexcept;\n// CHECK-MESSAGES: :[[@LINE-1]]:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto f3() const __restrict noexcept -> volatile int* __restrict;{{$}}\n};\n\n//\n// Functions with attributes\n//\n\nint g1() [[asdf]];\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto g1() -> int {{[[][[]}}asdf{{[]][]]}};{{$}}\n[[noreturn]] int g2();\n// CHECK-MESSAGES: :[[@LINE-1]]:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}{{[[][[]}}noreturn{{[]][]]}} auto g2() -> int;{{$}}\nint g2 [[noreturn]] ();\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto g2 {{[[][[]}}noreturn{{[]][]]}} () -> int;{{$}}\nint unsigned g3() __attribute__((cdecl)); // FunctionTypeLoc is null.\n// CHECK-MESSAGES: :[[@LINE-1]]:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\nint unsigned __attribute__((cdecl)) g3() ; // FunctionTypeLoc is null.\n// CHECK-MESSAGES: :[[@LINE-1]]:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n__attribute__((cdecl)) int unsigned g3() ; // FunctionTypeLoc is null.\n// CHECK-MESSAGES: :[[@LINE-1]]:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n\n//\n// Templates\n//\ntemplate <typename Container>\n[[maybe_unused]] typename Container::value_type const volatile&& t1(Container& C) noexcept;\n// CHECK-MESSAGES: :[[@LINE-1]]:66: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}{{[[][[]}}maybe_unused{{[]][]]}} auto t1(Container& C) noexcept -> typename Container::value_type const volatile&&;{{$}}\ntemplate <typename T>\nclass BB {\n    using type = int;\n\n    template <typename U>\n    typename BB<U>::type m1();\n// CHECK-MESSAGES: :[[@LINE-1]]:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto m1() -> typename BB<U>::type;{{$}}\n};\n\n//\n// Macros\n//\n\n#define DWORD unsigned int\nDWORD h1();\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h1() -> DWORD;{{$}}\n#define INT int\n#define UNSIGNED unsigned\nUNSIGNED INT h2();\n// CHECK-MESSAGES: :[[@LINE-1]]:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h2() -> UNSIGNED INT;{{$}}\n#define CONST const\nCONST int h3();\n// CHECK-MESSAGES: :[[@LINE-1]]:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h3() -> CONST int;{{$}}\n#define ALWAYS_INLINE inline\n#define DLL_EXPORT __declspec(dllexport)\nALWAYS_INLINE DLL_EXPORT int h4();\n// CHECK-MESSAGES: :[[@LINE-1]]:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}ALWAYS_INLINE DLL_EXPORT auto h4() -> int;{{$}}\n#define DEPRECATED __attribute__((deprecated))\nint h5() DEPRECATED;\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h5() -> int DEPRECATED;{{$}}\nint DEPRECATED h5();\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto DEPRECATED h5() -> int;{{$}}\nDEPRECATED int h5();\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}DEPRECATED auto h5() -> int;{{$}}\n[[noreturn]] [[nodiscard]] DEPRECATED DLL_EXPORT int h6 [[deprecated]] ();\n// CHECK-MESSAGES: :[[@LINE-1]]:54: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}{{[[][[]}}noreturn{{[]][]]}} {{[[][[]}}nodiscard{{[]][]]}} DEPRECATED DLL_EXPORT auto h6 {{[[][[]}}deprecated{{[]][]]}} () -> int;{{$}}\n#define FUNCTION_NAME(a, b) a##b\nint FUNCTION_NAME(foo, bar)();\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto FUNCTION_NAME(foo, bar)() -> int;{{$}}\n#define DEFINE_FUNCTION_1(a, b) int a##b()\nDEFINE_FUNCTION_1(foo, bar);\n// CHECK-MESSAGES: :[[@LINE-1]]:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define DEFINE_FUNCTION_2 int foo(int arg);\nDEFINE_FUNCTION_2\n// CHECK-MESSAGES: :[[@LINE-1]]:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define DLL_EXPORT_const __declspec(dllexport) const\nDLL_EXPORT_const int h7();\n// CHECK-MESSAGES: :[[@LINE-1]]:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define DLL_EXPORT_CONST __declspec(dllexport) CONST\nDLL_EXPORT_CONST int h7();\n// CHECK-MESSAGES: :[[@LINE-1]]:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n\ntemplate <typename T>\nusing Real = T;\n#define PRECISION float\nReal<PRECISION> h8() { return 0.; }\n// CHECK-MESSAGES: :[[@LINE-1]]:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h8() -> Real<PRECISION> { return 0.; }{{$}}\n\n#define MAYBE_UNUSED_MACRO [[maybe_unused]]\ntemplate <typename Container>\nMAYBE_UNUSED_MACRO typename Container::value_type const volatile** const h9(Container& C) noexcept;\n// CHECK-MESSAGES: :[[@LINE-1]]:74: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}MAYBE_UNUSED_MACRO auto h9(Container& C) noexcept -> typename Container::value_type const volatile** const;{{$}}\n\n#define NOEXCEPT noexcept\nint h9(int arg) NOEXCEPT;\n// CHECK-MESSAGES: :[[@LINE-1]]:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h9(int arg) NOEXCEPT -> int;{{$}}\n#define STATIC_INT static int\nSTATIC_INT h10();\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define UNSIGNED_STATIC_INT unsigned static int\nUNSIGNED_STATIC_INT h11();\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define STATIC static\nunsigned STATIC int h11();\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}STATIC auto h11() -> unsigned int;{{$}}\n#define STATIC_CONSTEXPR static constexpr\nunsigned STATIC_CONSTEXPR int h12();\n// CHECK-MESSAGES: :[[@LINE-1]]:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}STATIC_CONSTEXPR auto h12() -> unsigned int;{{$}}\n#define STATIC_CONSTEXPR_LONG static constexpr long\nunsigned STATIC_CONSTEXPR_LONG int h13();\n// CHECK-MESSAGES: :[[@LINE-1]]:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\nDEPRECATED const int& h14();\n// CHECK-MESSAGES: :[[@LINE-1]]:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}DEPRECATED auto h14() -> const int&;{{$}}\nDEPRECATED const long static volatile unsigned& h15();\n// CHECK-MESSAGES: :[[@LINE-1]]:49: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}DEPRECATED static auto h15() -> const long volatile unsigned&;{{$}}\n#define WRAP(x) x\nWRAP(const) int& h16();\n// CHECK-MESSAGES: :[[@LINE-1]]:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\nWRAP(CONST) int& h16();\n// CHECK-MESSAGES: :[[@LINE-1]]:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n#define CONCAT(a, b) a##b\nCONCAT(con, st) int& h16();\n// CHECK-MESSAGES: :[[@LINE-1]]:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\nDEPRECATED const UNSIGNED& h17();\n// CHECK-MESSAGES: :[[@LINE-1]]:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}DEPRECATED auto h17() -> const UNSIGNED&;{{$}}\nDEPRECATED CONST UNSIGNED STATIC& h18();\n// CHECK-MESSAGES: :[[@LINE-1]]:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}DEPRECATED STATIC auto h18() -> CONST UNSIGNED &;{{$}}\n#define CONST_CAT con##st\nCONST_CAT int& h19();\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h19() -> CONST_CAT int&;{{$}}\n#define CONST_F_MACRO WRAP(CONST_CAT)\nCONST_F_MACRO int& h19();\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h19() -> CONST_F_MACRO int&;{{$}}\n// Macro COMMAND_LINE_INT is defined on the command line via: -DCOMMAND_LINE_INT=int\nconst COMMAND_LINE_INT& h20();\n// CHECK-MESSAGES: :[[@LINE-1]]:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h20() -> const COMMAND_LINE_INT&;{{$}}\ndecltype(COMMAND_LINE_INT{}) h21();\n// CHECK-MESSAGES: :[[@LINE-1]]:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto h21() -> decltype(COMMAND_LINE_INT{});{{$}}\n\n//\n// Name collisions\n//\nstruct Object { long long value; };\n\nObject j1(unsigned Object) { return {Object * 2}; }\n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}Object j1(unsigned Object) { return {Object * 2}; }{{$}}\n::Object j1(unsigned Object);\n// CHECK-MESSAGES: :[[@LINE-1]]:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j1(unsigned Object) -> ::Object;{{$}}\nconst Object& j2(unsigned a, int b, char Object, long l);\n// CHECK-MESSAGES: :[[@LINE-1]]:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}const Object& j2(unsigned a, int b, char Object, long l);{{$}}\nconst struct Object& j2(unsigned a, int b, char Object, long l);\n// CHECK-MESSAGES: :[[@LINE-1]]:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j2(unsigned a, int b, char Object, long l) -> const struct Object&;{{$}}\nstd::vector<Object> j3(unsigned Object);\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}std::vector<Object> j3(unsigned Object);{{$}}\nstd::vector<const Object> j7(unsigned Object);\n// CHECK-MESSAGES: :[[@LINE-1]]:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}std::vector<const Object> j7(unsigned Object);{{$}}\nstd::vector<Object> j4(unsigned vector);\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j4(unsigned vector) -> std::vector<Object>;{{$}}\nstd::vector<::Object> j4(unsigned vector);\n// CHECK-MESSAGES: :[[@LINE-1]]:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j4(unsigned vector) -> std::vector<::Object>;{{$}}\nstd::vector<struct Object> j4(unsigned vector);\n// CHECK-MESSAGES: :[[@LINE-1]]:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j4(unsigned vector) -> std::vector<struct Object>;{{$}}\nstd::vector<Object> j4(unsigned Vector);\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto j4(unsigned Vector) -> std::vector<Object>;{{$}}\nusing std::vector;\nvector<Object> j5(unsigned vector);\n// CHECK-MESSAGES: :[[@LINE-1]]:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}vector<Object> j5(unsigned vector);{{$}}\nconstexpr auto Size = 5;\nstd::array<int, Size> j6(unsigned Size);\n// CHECK-MESSAGES: :[[@LINE-1]]:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}std::array<int, Size> j6(unsigned Size);{{$}}\nstd::array<decltype(Size), (Size * 2) + 1> j8(unsigned Size);\n// CHECK-MESSAGES: :[[@LINE-1]]:44: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}std::array<decltype(Size), (Size * 2) + 1> j8(unsigned Size);{{$}}\nusing std::ostream;\nstd::tuple<int, std::string, ostream>& operator<<(ostream& ostream, float i);\n// CHECK-MESSAGES: :[[@LINE-1]]:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}std::tuple<int, std::string, ostream>& operator<<(ostream& ostream, float i);{{$}}\n\nclass CC {\n    int Object;\n    struct Object m();\n// CHECK-MESSAGES: :[[@LINE-1]]:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto m() -> struct Object;{{$}}\n};\nObject CC::m() { return {0}; }\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto CC::m() -> Object { return {0}; }{{$}}\nclass DD : public CC {\n    ::Object g();\n// CHECK-MESSAGES: :[[@LINE-1]]:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}    auto g() -> ::Object;{{$}}\n};\nObject DD::g() {\n// CHECK-MESSAGES: :[[@LINE-1]]:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}auto DD::g() -> Object {{{$}}\n    return {0};\n}\n\n//\n// bug 44206, no rewrite should happen due to collision with parameter name\n//\n\nostream& operator<<(ostream& ostream, int i);\n// CHECK-MESSAGES: :[[@LINE-1]]:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]\n// CHECK-FIXES: {{^}}ostream& operator<<(ostream& ostream, int i);{{$}}\n\n//\n// Samples which do not trigger the check\n//\n\nauto f() -> int;\nauto f(int) -> int;\nauto f(int arg) -> int;\nauto f(int arg1, int arg2, int arg3) -> int;\nauto f(int arg1, int arg2, int arg3, ...) -> int;\ntemplate <typename T> auto f(T t) -> int;\n\nauto ff();\n\nvoid c();\nvoid c(int arg);\nvoid c(int arg) { return; }\n\nstruct D2 : B {\n    D2();\n    virtual ~D2();\n\n    virtual auto f1(int, bool b) -> double final;\n    virtual auto base2(int, bool b) -> double override;\n    virtual auto base3() const -> float override final { return 0;  }\n\n    operator double();\n};\n"
    }
  ]
}