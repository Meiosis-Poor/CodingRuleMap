{
  "name": "StringviewNullptr",
  "language": "cpp",
  "description": ".. title:: clang-tidy - bugprone-stringview-nullptr",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 300,
  "branches": 1,
  "apis": 268,
  "test": [
    {
      "description": null,
      "expected-problems": 314,
      "expected-linenumbers": [
        136,
        140,
        144,
        148,
        152,
        159,
        163,
        167,
        171,
        175,
        182,
        186,
        190,
        194,
        198,
        202,
        206,
        210,
        214,
        218,
        222,
        226,
        230,
        234,
        241,
        245,
        249,
        253,
        262,
        266,
        270,
        274,
        281,
        285,
        289,
        293,
        297,
        304,
        308,
        312,
        316,
        320,
        324,
        328,
        332,
        336,
        340,
        347,
        351,
        355,
        359,
        363,
        370,
        374,
        378,
        382,
        386,
        390,
        394,
        398,
        402,
        406,
        413,
        417,
        421,
        425,
        429,
        436,
        440,
        444,
        448,
        452,
        456,
        460,
        464,
        468,
        472,
        479,
        483,
        487,
        491,
        495,
        505,
        509,
        513,
        517,
        523,
        527,
        531,
        535,
        539,
        545,
        549,
        553,
        557,
        561,
        565,
        569,
        573,
        577,
        581,
        587,
        591,
        595,
        599,
        603,
        609,
        613,
        617,
        621,
        625,
        629,
        633,
        637,
        641,
        645,
        651,
        655,
        659,
        663,
        667,
        682,
        686,
        690,
        694,
        698,
        712,
        716,
        720,
        724,
        728,
        742,
        746,
        750,
        754,
        758,
        772,
        776,
        780,
        784,
        788,
        798,
        802,
        806,
        810,
        817,
        821,
        825,
        829,
        833,
        840,
        844,
        848,
        852,
        856,
        860,
        864,
        868,
        872,
        876,
        883,
        887,
        891,
        895,
        899,
        908,
        912,
        916,
        920,
        924,
        928,
        932,
        936,
        940,
        944,
        951,
        955,
        959,
        963,
        967,
        974,
        978,
        982,
        986,
        990,
        994,
        998,
        1002,
        1006,
        1010,
        1017,
        1021,
        1025,
        1029,
        1033,
        1042,
        1046,
        1050,
        1054,
        1058,
        1065,
        1069,
        1073,
        1077,
        1081,
        1090,
        1094,
        1098,
        1102,
        1106,
        1113,
        1117,
        1121,
        1125,
        1129,
        1138,
        1142,
        1146,
        1150,
        1154,
        1161,
        1165,
        1169,
        1173,
        1177,
        1186,
        1190,
        1194,
        1198,
        1205,
        1209,
        1213,
        1217,
        1226,
        1230,
        1234,
        1238,
        1245,
        1249,
        1253,
        1257,
        1266,
        1270,
        1274,
        1278,
        1285,
        1289,
        1293,
        1297,
        1306,
        1310,
        1314,
        1318,
        1325,
        1329,
        1333,
        1337,
        1344,
        1348,
        1352,
        1356,
        1360,
        1368,
        1372,
        1376,
        1380,
        1387,
        1391,
        1395,
        1399,
        1406,
        1410,
        1414,
        1418,
        1425,
        1429,
        1433,
        1437,
        1446,
        1450,
        1454,
        1458,
        1465,
        1469,
        1473,
        1477,
        1484,
        1488,
        1492,
        1496,
        1503,
        1507,
        1511,
        1515,
        1522,
        1526,
        1530,
        1534,
        1538,
        1546,
        1550,
        1554,
        1558,
        1562,
        1566,
        1570,
        1577,
        1581,
        1585,
        1589,
        1593,
        1602,
        1606,
        1610
      ],
      "code": "\n// RUN: %check_clang_tidy --match-partial-fixes %s bugprone-stringview-nullptr -std=c++17 %t\n\nnamespace std {\n\nusing size_t = long long;\nusing nullptr_t = decltype(nullptr);\n\ntemplate <typename T>\nT &&declval();\n\ntemplate <typename T>\nstruct type_identity { using type = T; };\ntemplate <typename T>\nusing type_identity_t = typename type_identity<T>::type;\n\ntemplate <typename CharT>\nclass basic_string_view {\npublic:\n  constexpr basic_string_view() {}\n\n  constexpr basic_string_view(const CharT *) {}\n\n  // Not present in C++17 and C++20:\n  // constexpr basic_string_view(std::nullptr_t) {}\n\n  constexpr basic_string_view(const CharT *, size_t) {}\n\n  constexpr basic_string_view(const basic_string_view &) {}\n\n  constexpr basic_string_view &operator=(const basic_string_view &) { return *this; }\n};\n\ntemplate <typename CharT>\nconstexpr bool operator<(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator<(type_identity_t<basic_string_view<CharT>>,\n                         basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator<(basic_string_view<CharT>,\n                         type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\ntemplate <typename CharT>\nconstexpr bool operator<=(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator<=(type_identity_t<basic_string_view<CharT>>,\n                          basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator<=(basic_string_view<CharT>,\n                          type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\ntemplate <typename CharT>\nconstexpr bool operator>(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator>(type_identity_t<basic_string_view<CharT>>,\n                         basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator>(basic_string_view<CharT>,\n                         type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\ntemplate <typename CharT>\nconstexpr bool operator>=(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator>=(type_identity_t<basic_string_view<CharT>>,\n                          basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator>=(basic_string_view<CharT>,\n                          type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\ntemplate <typename CharT>\nconstexpr bool operator==(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator==(type_identity_t<basic_string_view<CharT>>,\n                          basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator==(basic_string_view<CharT>,\n                          type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\ntemplate <typename CharT>\nconstexpr bool operator!=(basic_string_view<CharT>, basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator!=(type_identity_t<basic_string_view<CharT>>,\n                          basic_string_view<CharT>) {\n  return {};\n}\ntemplate <typename CharT>\nconstexpr bool operator!=(basic_string_view<CharT>,\n                          type_identity_t<basic_string_view<CharT>>) {\n  return {};\n}\n\nusing string_view = basic_string_view<char>;\n\n} // namespace std\n\nusing SV = std::string_view; // Used in some places for shorter line length\n\nvoid function(std::string_view);\nvoid function(std::string_view, std::string_view);\n\nvoid temporary_construction() /* a */ {\n  // Functional Cast\n  {\n    (void)(std::string_view(nullptr)) /* a1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing basic_string_view from null is undefined; replace with the default constructor\n    // CHECK-FIXES: {{^}}    (void)(std::string_view()) /* a1 */;\n\n    (void)(std::string_view((nullptr))) /* a2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view()) /* a2 */;\n\n    (void)(std::string_view({nullptr})) /* a3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view()) /* a3 */;\n\n    (void)(std::string_view({(nullptr)})) /* a4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view()) /* a4 */;\n\n    (void)(std::string_view({})) /* a5 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view()) /* a5 */;\n  }\n\n  // Temporary Object\n  {\n    (void)(std::string_view{nullptr}) /* a6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view{}) /* a6 */;\n\n    (void)(std::string_view{(nullptr)}) /* a7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view{}) /* a7 */;\n\n    (void)(std::string_view{{nullptr}}) /* a8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view{}) /* a8 */;\n\n    (void)(std::string_view{{(nullptr)}}) /* a9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view{}) /* a9 */;\n\n    (void)(std::string_view{{}}) /* a10 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(std::string_view{}) /* a10 */;\n  }\n\n  // C-Style Cast && Compound Literal\n  {\n    (void)((std::string_view) nullptr) /* a11 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view) {}) /* a11 */;\n\n    (void)((std::string_view)(nullptr)) /* a12 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:30: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a12 */;\n\n    (void)((std::string_view){nullptr}) /* a13 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a13 */;\n\n    (void)((std::string_view){(nullptr)}) /* a14 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a14 */;\n\n    (void)((std::string_view){{nullptr}}) /* a15 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a15 */;\n\n    (void)((std::string_view){{(nullptr)}}) /* a16 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a16 */;\n\n    (void)((std::string_view){{}}) /* a17 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((std::string_view){}) /* a17 */;\n\n    (void)((const std::string_view) nullptr) /* a18 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view) {}) /* a18 */;\n\n    (void)((const std::string_view)(nullptr)) /* a19 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:36: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a19 */;\n\n    (void)((const std::string_view){nullptr}) /* a20 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a20 */;\n\n    (void)((const std::string_view){(nullptr)}) /* a21 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a21 */;\n\n    (void)((const std::string_view){{nullptr}}) /* a22 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a22 */;\n\n    (void)((const std::string_view){{(nullptr)}}) /* a23 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a23 */;\n\n    (void)((const std::string_view){{}}) /* a24 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)((const std::string_view){}) /* a24 */;\n  }\n\n  // Static Cast\n  {\n    (void)(static_cast<std::string_view>(nullptr)) /* a25 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:42: warning: casting to basic_string_view from null is undefined; replace with the empty string\n    // CHECK-FIXES: {{^}}    (void)(static_cast<std::string_view>(\"\")) /* a25 */;\n\n    (void)(static_cast<std::string_view>((nullptr))) /* a26 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:42: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(static_cast<std::string_view>(\"\")) /* a26 */;\n\n    (void)(static_cast<const std::string_view>(nullptr)) /* a27 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(static_cast<const std::string_view>(\"\")) /* a27 */;\n\n    (void)(static_cast<const std::string_view>((nullptr))) /* a28 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(static_cast<const std::string_view>(\"\")) /* a28 */;\n  }\n}\n\nvoid stack_construction() /* b */ {\n  // Copy Initialization\n  {\n    std::string_view b1 = nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b1 = {};\n\n    std::string_view b2 = (nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b2 = {};\n\n    const std::string_view b3 = nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b3 = {};\n\n    const std::string_view b4 = (nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b4 = {};\n  }\n\n  // Copy Initialization With Temporary\n  {\n    std::string_view b5 = std::string_view(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:44: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b5 = std::string_view();\n\n    std::string_view b6 = std::string_view{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:44: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b6 = std::string_view{};\n\n    std::string_view b7 = (std::string_view) nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b7 = (std::string_view) {};\n\n    std::string_view b8 = (std::string_view){nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b8 = (std::string_view){};\n\n    std::string_view b9 = static_cast<SV>(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view b9 = static_cast<SV>(\"\");\n  }\n\n  // Copy List Initialization\n  {\n    std::string_view b10 = {nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b10 = {};\n\n    std::string_view b11 = {(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b11 = {};\n\n    std::string_view b12 = {{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b12 = {};\n\n    std::string_view b13 = {{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b13 = {};\n\n    std::string_view b14 = {{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b14 = {};\n\n    const std::string_view b15 = {nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b15 = {};\n\n    const std::string_view b16 = {(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b16 = {};\n\n    const std::string_view b17 = {{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b17 = {};\n\n    const std::string_view b18 = {{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b18 = {};\n\n    const std::string_view b19 = {{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b19 = {};\n  }\n\n  // Copy List Initialization With Temporary\n  {\n    std::string_view b20 = {std::string_view(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b20 = {std::string_view()};\n\n    std::string_view b21 = {std::string_view{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b21 = {std::string_view{}};\n\n    std::string_view b22 = {(std::string_view) nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b22 = {(std::string_view) {}};\n\n    std::string_view b23 = {(std::string_view){nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b23 = {(std::string_view){}};\n\n    std::string_view b24 = {static_cast<SV>(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view b24 = {static_cast<SV>(\"\")};\n  }\n\n  // Direct Initialization\n  {\n    std::string_view b25(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b25;\n\n    std::string_view b26((nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b26;\n\n    std::string_view b27({nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b27;\n\n    std::string_view b28({(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b28;\n\n    std::string_view b29({}); // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b29;\n\n    const std::string_view b30(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b30;\n\n    const std::string_view b31((nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b31;\n\n    const std::string_view b32({nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b32;\n\n    const std::string_view b33({(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b33;\n\n    const std::string_view b34({}); // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b34;\n  }\n\n  // Direct Initialization With Temporary\n  {\n    std::string_view b35(std::string_view(nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b35(std::string_view());\n\n    std::string_view b36(std::string_view{nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b36(std::string_view{});\n\n    std::string_view b37((std::string_view) nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b37((std::string_view) {});\n\n    std::string_view b38((std::string_view){nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b38((std::string_view){});\n\n    std::string_view b39(static_cast<SV>(nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:42: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view b39(static_cast<SV>(\"\"));\n  }\n\n  // Direct List Initialization\n  {\n    std::string_view b40{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b40{};\n\n    std::string_view b41{(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b41{};\n\n    std::string_view b42{{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b42{};\n\n    std::string_view b43{{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b43{};\n\n    std::string_view b44{{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b44{};\n\n    const std::string_view b45{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b45{};\n\n    const std::string_view b46{(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b46{};\n\n    const std::string_view b47{{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b47{};\n\n    const std::string_view b48{{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b48{};\n\n    const std::string_view b49{{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view b49{};\n  }\n\n  // Direct List Initialization With Temporary\n  {\n    std::string_view b50{std::string_view(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b50{std::string_view()};\n\n    std::string_view b51{std::string_view{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b51{std::string_view{}};\n\n    std::string_view b52{(std::string_view) nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b52{(std::string_view) {}};\n\n    std::string_view b53{(std::string_view){nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view b53{(std::string_view){}};\n\n    std::string_view b54{static_cast<SV>(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:42: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view b54{static_cast<SV>(\"\")};\n  }\n}\n\nvoid field_construction() /* c */ {\n  // Default Member Initializaers\n\n  struct DMICopyInitialization {\n    std::string_view c1 = nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c1 = {};\n\n    std::string_view c2 = (nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c2 = {};\n\n    const std::string_view c3 = nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c3 = {};\n\n    const std::string_view c4 = (nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c4 = {};\n  };\n\n  struct DMICopyInitializationWithTemporary {\n    std::string_view c5 = std::string_view(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:44: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c5 = std::string_view();\n\n    std::string_view c6 = std::string_view{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:44: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c6 = std::string_view{};\n\n    std::string_view c7 = (std::string_view) nullptr;\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c7 = (std::string_view) {};\n\n    std::string_view c8 = (std::string_view){nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c8 = (std::string_view){};\n\n    std::string_view c9 = static_cast<SV>(nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view c9 = static_cast<SV>(\"\");\n  };\n\n  struct DMICopyListInitialization {\n    std::string_view c10 = {nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c10 = {};\n\n    std::string_view c11 = {(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c11 = {};\n\n    std::string_view c12 = {{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c12 = {};\n\n    std::string_view c13 = {{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c13 = {};\n\n    std::string_view c14 = {{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c14 = {};\n\n    const std::string_view c15 = {nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c15 = {};\n\n    const std::string_view c16 = {(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c16 = {};\n\n    const std::string_view c17 = {{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c17 = {};\n\n    const std::string_view c18 = {{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c18 = {};\n\n    const std::string_view c19 = {{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c19 = {};\n  };\n\n  struct DMICopyListInitializationWithTemporary {\n    std::string_view c20 = {std::string_view(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c20 = {std::string_view()};\n\n    std::string_view c21 = {std::string_view{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c21 = {std::string_view{}};\n\n    std::string_view c22 = {(std::string_view) nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c22 = {(std::string_view) {}};\n\n    std::string_view c23 = {(std::string_view){nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:48: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c23 = {(std::string_view){}};\n\n    std::string_view c24 = {static_cast<SV>(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view c24 = {static_cast<SV>(\"\")};\n  };\n\n  struct DMIDirectListInitialization {\n    std::string_view c25{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c25{};\n\n    std::string_view c26{(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c26{};\n\n    std::string_view c27{{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c27{};\n\n    std::string_view c28{{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c28{};\n\n    std::string_view c29{{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c29{};\n\n    const std::string_view c30{nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c30{};\n\n    const std::string_view c31{(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c31{};\n\n    const std::string_view c32{{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c32{};\n\n    const std::string_view c33{{(nullptr)}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c33{};\n\n    const std::string_view c34{{}}; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    const std::string_view c34{};\n  };\n\n  struct DMIDirectListInitializationWithTemporary {\n    std::string_view c35{std::string_view(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c35{std::string_view()};\n\n    std::string_view c36{std::string_view{nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c36{std::string_view{}};\n\n    std::string_view c37{(std::string_view) nullptr};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c37{(std::string_view) {}};\n\n    std::string_view c38{(std::string_view){nullptr}};\n    // CHECK-MESSAGES: :[[@LINE-1]]:45: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    std::string_view c38{(std::string_view){}};\n\n    std::string_view c39{static_cast<SV>(nullptr)};\n    // CHECK-MESSAGES: :[[@LINE-1]]:42: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    std::string_view c39{static_cast<SV>(\"\")};\n  };\n\n  // Constructor Initializers\n\n  class CIDirectInitialization {\n    std::string_view c40;\n    std::string_view c41;\n    std::string_view c42;\n    std::string_view c43;\n    std::string_view c44;\n\n    CIDirectInitialization()\n        : c40(nullptr),\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}        : c40(),\n\n          c41((nullptr)),\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c41(),\n\n          c42({nullptr}),\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c42(),\n\n          c43({(nullptr)}),\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c43(),\n\n          c44({}) { // Default `const CharT*`\n      // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n      // CHECK-FIXES: {{^}}          c44() {\n    }\n  };\n\n  class CIDirectInitializationWithTemporary {\n    std::string_view c45;\n    std::string_view c46;\n    std::string_view c47;\n    std::string_view c48;\n    std::string_view c49;\n\n    CIDirectInitializationWithTemporary()\n        : c45(std::string_view(nullptr)),\n          // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}        : c45(std::string_view()),\n\n          c46(std::string_view{nullptr}),\n          // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c46(std::string_view{}),\n\n          c47((std::string_view) nullptr),\n          // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c47((std::string_view) {}),\n\n          c48((std::string_view){nullptr}),\n          // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c48((std::string_view){}),\n\n          c49(static_cast<SV>(nullptr)) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: casting{{.*}}empty string\n      // CHECK-FIXES: {{^}}          c49(static_cast<SV>(\"\")) {\n    }\n  };\n\n  class CIDirectListInitialization {\n    std::string_view c50;\n    std::string_view c51;\n    std::string_view c52;\n    std::string_view c53;\n    std::string_view c54;\n\n    CIDirectListInitialization()\n        : c50{nullptr},\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}        : c50{},\n\n          c51{(nullptr)},\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c51{},\n\n          c52{{nullptr}},\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c52{},\n\n          c53{{(nullptr)}},\n          // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c53{},\n\n          c54{{}} { // Default `const CharT*`\n      // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: constructing{{.*}}default\n      // CHECK-FIXES: {{^}}          c54{} {\n    }\n  };\n\n  class CIDirectListInitializationWithTemporary {\n    std::string_view c55;\n    std::string_view c56;\n    std::string_view c57;\n    std::string_view c58;\n    std::string_view c59;\n\n    CIDirectListInitializationWithTemporary()\n        : c55{std::string_view(nullptr)},\n          // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}        : c55{std::string_view()},\n\n          c56{std::string_view{nullptr}},\n          // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c56{std::string_view{}},\n\n          c57{(std::string_view) nullptr},\n          // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c57{(std::string_view) {}},\n\n          c58{(std::string_view){nullptr}},\n          // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n          // CHECK-FIXES: {{^}}          c58{(std::string_view){}},\n\n          c59{static_cast<SV>(nullptr)} {\n      // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: casting{{.*}}empty string\n      // CHECK-FIXES: {{^}}          c59{static_cast<SV>(\"\")} {\n    }\n  };\n}\n\nvoid default_argument_construction() /* d */ {\n  // Copy Initialization\n  {\n    void d1(std::string_view sv = nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d1(std::string_view sv = {});\n\n    void d2(std::string_view sv = (nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d2(std::string_view sv = {});\n\n    void d3(const std::string_view sv = nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:41: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d3(const std::string_view sv = {});\n\n    void d4(const std::string_view sv = (nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:41: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d4(const std::string_view sv = {});\n  }\n\n  // Copy Initialization With Temporary\n  {\n    void d5(std::string_view sv = std::string_view(nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d5(std::string_view sv = std::string_view());\n\n    void d6(std::string_view sv = std::string_view{nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d6(std::string_view sv = std::string_view{});\n\n    void d7(std::string_view sv = (std::string_view) nullptr);\n    // CHECK-MESSAGES: :[[@LINE-1]]:54: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d7(std::string_view sv = (std::string_view) {});\n\n    void d8(std::string_view sv = (std::string_view){nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:54: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d8(std::string_view sv = (std::string_view){});\n\n    void d9(std::string_view sv = static_cast<SV>(nullptr));\n    // CHECK-MESSAGES: :[[@LINE-1]]:51: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    void d9(std::string_view sv = static_cast<SV>(\"\"));\n  }\n\n  // Copy List Initialization\n  {\n    void d10(std::string_view sv = {nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d10(std::string_view sv = {});\n\n    void d11(std::string_view sv = {(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d11(std::string_view sv = {});\n\n    void d12(std::string_view sv = {{nullptr}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d12(std::string_view sv = {});\n\n    void d13(std::string_view sv = {{(nullptr)}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d13(std::string_view sv = {});\n\n    void d14(std::string_view sv = {{}}); // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:37: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d14(std::string_view sv = {});\n\n    void d15(const std::string_view sv = {nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d15(const std::string_view sv = {});\n\n    void d16(const std::string_view sv = {(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d16(const std::string_view sv = {});\n\n    void d17(const std::string_view sv = {{nullptr}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d17(const std::string_view sv = {});\n\n    void d18(const std::string_view sv = {{(nullptr)}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d18(const std::string_view sv = {});\n\n    void d19(const std::string_view sv = {{}}); // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:43: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d19(const std::string_view sv = {});\n  }\n\n  // Copy List Initialization With Temporary\n  {\n    void d20(std::string_view sv = {std::string_view(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:54: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d20(std::string_view sv = {std::string_view()});\n\n    void d21(std::string_view sv = {std::string_view{nullptr}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:54: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d21(std::string_view sv = {std::string_view{}});\n\n    void d22(std::string_view sv = {(std::string_view) nullptr});\n    // CHECK-MESSAGES: :[[@LINE-1]]:56: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d22(std::string_view sv = {(std::string_view) {}});\n\n    void d23(std::string_view sv = {(std::string_view){nullptr}});\n    // CHECK-MESSAGES: :[[@LINE-1]]:56: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    void d23(std::string_view sv = {(std::string_view){}});\n\n    void d24(std::string_view sv = {static_cast<SV>(nullptr)});\n    // CHECK-MESSAGES: :[[@LINE-1]]:53: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    void d24(std::string_view sv = {static_cast<SV>(\"\")});\n  }\n}\n\nvoid heap_construction() /* e */ {\n  // Direct Initialization\n  {\n    (void)(new std::string_view(nullptr)) /* e1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view()) /* e1 */;\n\n    (void)(new std::string_view((nullptr))) /* e2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view()) /* e2 */;\n\n    (void)(new std::string_view({nullptr})) /* e3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view()) /* e3 */;\n\n    (void)(new std::string_view({(nullptr)})) /* e4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view()) /* e4 */;\n\n    (void)(new std::string_view({})) /* e5 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view()) /* e5 */;\n\n    (void)(new const std::string_view(nullptr)) /* e6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view()) /* e6 */;\n\n    (void)(new const std::string_view((nullptr))) /* e7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view()) /* e7 */;\n\n    (void)(new const std::string_view({nullptr})) /* e8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view()) /* e8 */;\n\n    (void)(new const std::string_view({(nullptr)})) /* e9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view()) /* e9 */;\n\n    (void)(new const std::string_view({})) /* e10 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view()) /* e10 */;\n  }\n\n  // Direct Initialization With Temporary\n  {\n    (void)(new std::string_view(std::string_view(nullptr))) /* e11 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:50: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view(std::string_view())) /* e11 */;\n\n    (void)(new std::string_view(std::string_view{nullptr})) /* e12 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:50: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view(std::string_view{})) /* e12 */;\n\n    (void)(new std::string_view((std::string_view) nullptr)) /* e13 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view((std::string_view) {})) /* e13 */;\n\n    (void)(new std::string_view((std::string_view){nullptr})) /* e14 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view((std::string_view){})) /* e14 */;\n\n    (void)(new std::string_view(static_cast<SV>(nullptr))) /* e15 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:49: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view(static_cast<SV>(\"\"))) /* e15 */;\n  }\n\n  // Direct List Initialization\n  {\n    (void)(new std::string_view{nullptr}) /* e16 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{}) /* e16 */;\n\n    (void)(new std::string_view{(nullptr)}) /* e17 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{}) /* e17 */;\n\n    (void)(new std::string_view{{nullptr}}) /* e18 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{}) /* e18 */;\n\n    (void)(new std::string_view{{(nullptr)}}) /* e19 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{}) /* e19 */;\n\n    (void)(new std::string_view{{}}) /* e20 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{}) /* e20 */;\n\n    (void)(new const std::string_view{nullptr}) /* e21 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view{}) /* e21 */;\n\n    (void)(new const std::string_view{(nullptr)}) /* e22 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view{}) /* e22 */;\n\n    (void)(new const std::string_view{{nullptr}}) /* e23 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view{}) /* e23 */;\n\n    (void)(new const std::string_view{{(nullptr)}}) /* e24 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view{}) /* e24 */;\n\n    (void)(new const std::string_view{{}}) /* e25 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:39: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new const std::string_view{}) /* e25 */;\n  }\n\n  // Direct List Initialization With Temporary\n  {\n    (void)(new std::string_view{std::string_view(nullptr)}) /* e26 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:50: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{std::string_view()}) /* e26 */;\n\n    (void)(new std::string_view{std::string_view{nullptr}}) /* e27 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:50: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{std::string_view{}}) /* e27 */;\n\n    (void)(new std::string_view{(std::string_view) nullptr}) /* e28 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{(std::string_view) {}}) /* e28 */;\n\n    (void)(new std::string_view{(std::string_view){nullptr}}) /* e29 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:52: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{(std::string_view){}}) /* e29 */;\n\n    (void)(new std::string_view{static_cast<SV>(nullptr)}) /* e30 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:49: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(new std::string_view{static_cast<SV>(\"\")}) /* e30 */;\n  }\n}\n\nvoid function_argument_initialization() /* f */ {\n  // Function Argument Initialization\n  {\n    function(nullptr) /* f1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:14: warning: passing null as basic_string_view is undefined; replace with the empty string\n    // CHECK-FIXES: {{^}}    function(\"\") /* f1 */;\n\n    function((nullptr)) /* f2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:14: warning: passing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    function(\"\") /* f2 */;\n\n    function({nullptr}) /* f3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:14: warning: passing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    function(\"\") /* f3 */;\n\n    function({(nullptr)}) /* f4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:14: warning: passing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    function(\"\") /* f4 */;\n\n    function({{}}) /* f5 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:14: warning: passing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    function(\"\") /* f5 */;\n  }\n\n  // Function Argument Initialization With Temporary\n  {\n    function(std::string_view(nullptr)) /* f6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    function(std::string_view()) /* f6 */;\n\n    function(std::string_view{nullptr}) /* f7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    function(std::string_view{}) /* f7 */;\n\n    function((std::string_view) nullptr) /* f8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    function((std::string_view) {}) /* f8 */;\n\n    function((std::string_view){nullptr}) /* f9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    function((std::string_view){}) /* f9 */;\n\n    function(static_cast<SV>(nullptr)) /* f10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:30: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    function(static_cast<SV>(\"\")) /* f10 */;\n  }\n}\n\nvoid assignment(std::string_view sv) /* g */ {\n  // Assignment\n  {\n    sv = nullptr /* g1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:10: warning: assignment to basic_string_view from null is undefined; replace with the default constructor\n    // CHECK-FIXES: {{^}}    sv = {} /* g1 */;\n\n    sv = (nullptr) /* g2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:10: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = {} /* g2 */;\n\n    sv = {nullptr} /* g3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:10: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = {} /* g3 */;\n\n    sv = {(nullptr)} /* g4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:10: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = {} /* g4 */;\n\n    sv = {{}} /* g5 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:10: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = {} /* g5 */;\n  }\n\n  // Assignment With Temporary\n  {\n    sv = std::string_view(nullptr) /* g6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = std::string_view() /* g6 */;\n\n    sv = std::string_view{nullptr} /* g7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:27: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = std::string_view{} /* g7 */;\n\n    sv = (std::string_view) nullptr /* g8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = (std::string_view) {} /* g8 */;\n\n    sv = (std::string_view){nullptr} /* g9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:29: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    sv = (std::string_view){} /* g9 */;\n\n    sv = static_cast<SV>(nullptr) /* g10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:26: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    sv = static_cast<SV>(\"\") /* g10 */;\n  }\n}\n\nvoid pointer_assignment(std::string_view *sv_ptr) /* h */ {\n  // Assignment\n  {\n    *sv_ptr = nullptr /* h1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = {} /* h1 */;\n\n    *sv_ptr = (nullptr) /* h2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = {} /* h2 */;\n\n    *sv_ptr = {nullptr} /* h3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = {} /* h3 */;\n\n    *sv_ptr = {(nullptr)} /* h4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = {} /* h4 */;\n\n    *sv_ptr = {{}} /* h5 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:15: warning: assignment{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = {} /* h5 */;\n  }\n\n  // Assignment With Temporary\n  {\n    *sv_ptr = std::string_view(nullptr) /* h6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = std::string_view() /* h6 */;\n\n    *sv_ptr = std::string_view{nullptr} /* h7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = std::string_view{} /* h7 */;\n\n    *sv_ptr = (std::string_view) nullptr /* h8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = (std::string_view) {} /* h8 */;\n\n    *sv_ptr = (std::string_view){nullptr} /* h9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    *sv_ptr = (std::string_view){} /* h9 */;\n\n    *sv_ptr = static_cast<SV>(nullptr) /* h10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    *sv_ptr = static_cast<SV>(\"\") /* h10 */;\n  }\n}\n\nvoid lesser_comparison(std::string_view sv) /* i */ {\n  // Without Equality\n  {\n    (void)(sv < nullptr) /* i1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:17: warning: comparing basic_string_view to null is undefined; replace with the empty string\n    // CHECK-FIXES: {{^}}    (void)(sv < \"\") /* i1 */;\n\n    (void)(sv < (nullptr)) /* i2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:17: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv < \"\") /* i2 */;\n\n    (void)(nullptr < sv) /* i3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" < sv) /* i3 */;\n\n    (void)((nullptr) < sv) /* i4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" < sv) /* i4 */;\n  }\n\n  // With Equality\n  {\n    (void)(sv <= nullptr) /* i5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv <= \"\") /* i5 */;\n\n    (void)(sv <= (nullptr)) /* i6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv <= \"\") /* i6 */;\n\n    (void)(nullptr <= sv) /* i7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" <= sv) /* i7 */;\n\n    (void)((nullptr) <= sv) /* i8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" <= sv) /* i8 */;\n  }\n}\n\nvoid pointer_lesser_comparison(std::string_view *sv_ptr) /* j */ {\n  // Without Equality\n  {\n    (void)(*sv_ptr < nullptr) /* j1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr < \"\") /* j1 */;\n\n    (void)(*sv_ptr < (nullptr)) /* j2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr < \"\") /* j2 */;\n\n    (void)(nullptr < *sv_ptr) /* j3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" < *sv_ptr) /* j3 */;\n\n    (void)((nullptr) < *sv_ptr) /* j4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" < *sv_ptr) /* j4 */;\n  }\n\n  // With Equality\n  {\n    (void)(*sv_ptr <= nullptr) /* j5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:23: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr <= \"\") /* j5 */;\n\n    (void)(*sv_ptr <= (nullptr)) /* j6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:23: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr <= \"\") /* j6 */;\n\n    (void)(nullptr <= *sv_ptr) /* j7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" <= *sv_ptr) /* j7 */;\n\n    (void)((nullptr) <= *sv_ptr) /* j8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" <= *sv_ptr) /* j8 */;\n  }\n}\n\nvoid greater_comparison(std::string_view sv) /* k */ {\n  // Without Equality\n  {\n    (void)(sv > nullptr) /* k1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:17: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv > \"\") /* k1 */;\n\n    (void)(sv > (nullptr)) /* k2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:17: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv > \"\") /* k2 */;\n\n    (void)(nullptr > sv) /* k3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" > sv) /* k3 */;\n\n    (void)((nullptr) > sv) /* k4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" > sv) /* k4 */;\n  }\n\n  // With Equality\n  {\n    (void)(sv >= nullptr) /* k5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv >= \"\") /* k5 */;\n\n    (void)(sv >= (nullptr)) /* k6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:18: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(sv >= \"\") /* k6 */;\n\n    (void)(nullptr >= sv) /* k7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" >= sv) /* k7 */;\n\n    (void)((nullptr) >= sv) /* k8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" >= sv) /* k8 */;\n  }\n}\n\nvoid pointer_greater_comparison(std::string_view *sv_ptr) /* l */ {\n  // Without Equality\n  {\n    (void)(*sv_ptr > nullptr) /* l1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr > \"\") /* l1 */;\n\n    (void)(*sv_ptr > (nullptr)) /* l2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:22: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr > \"\") /* l2 */;\n\n    (void)(nullptr > *sv_ptr) /* l3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" > *sv_ptr) /* l3 */;\n\n    (void)((nullptr) > *sv_ptr) /* l4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" > *sv_ptr) /* l4 */;\n  }\n\n  // With Equality\n  {\n    (void)(*sv_ptr >= nullptr) /* l5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:23: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr >= \"\") /* l5 */;\n\n    (void)(*sv_ptr >= (nullptr)) /* l6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:23: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(*sv_ptr >= \"\") /* l6 */;\n\n    (void)(nullptr >= *sv_ptr) /* l7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" >= *sv_ptr) /* l7 */;\n\n    (void)((nullptr) >= *sv_ptr) /* l8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}empty string\n    // CHECK-FIXES: {{^}}    (void)(\"\" >= *sv_ptr) /* l8 */;\n  }\n}\n\nvoid relative_comparison_with_temporary(std::string_view sv) /* m */ {\n  (void)(sv < std::string_view(nullptr)) /* m1 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv < std::string_view()) /* m1 */;\n\n  (void)(sv < std::string_view{nullptr}) /* m2 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv < std::string_view{}) /* m2 */;\n\n  (void)(sv < (std::string_view) nullptr) /* m3 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv < (std::string_view) {}) /* m3 */;\n\n  (void)(sv < (std::string_view){nullptr}) /* m4 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:34: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv < (std::string_view){}) /* m4 */;\n\n  (void)(sv < static_cast<SV>(nullptr)) /* m5 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:31: warning: casting{{.*}}empty string\n  // CHECK-FIXES: {{^}}  (void)(sv < static_cast<SV>(\"\")) /* m5 */;\n}\n\nvoid equality_comparison(std::string_view sv) /* n */ {\n  // Empty Without Parens\n  {\n    (void)(sv == nullptr) /* n1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing basic_string_view to null is undefined; replace with the emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n1 */;\n\n    (void)(sv == (nullptr)) /* n2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n2 */;\n\n    (void)(nullptr == sv) /* n3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n3 */;\n\n    (void)((nullptr) == sv) /* n4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n4 */;\n  }\n\n  // Empty With Parens\n  {\n    (void)((sv) == nullptr) /* n5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing basic_string_view to null is undefined; replace with the emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n5 */;\n\n    (void)((sv) == (nullptr)) /* n6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n6 */;\n\n    (void)(nullptr == (sv)) /* n7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n7 */;\n\n    (void)((nullptr) == (sv)) /* n8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv.empty()) /* n8 */;\n  }\n\n  // Non-Empty Without Parens\n  {\n    (void)((sv) != nullptr) /* n9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n9 */;\n\n    (void)((sv) != (nullptr)) /* n10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n10 */;\n\n    (void)(nullptr != (sv)) /* n11 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n11 */;\n\n    (void)((nullptr) != (sv)) /* n12 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n12 */;\n  }\n\n  // Non-Empty With Parens\n  {\n    (void)((sv) != nullptr) /* n13 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n13 */;\n\n    (void)((sv) != (nullptr)) /* n14 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n14 */;\n\n    (void)(nullptr != (sv)) /* n15 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n15 */;\n\n    (void)((nullptr) != (sv)) /* n16 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv.empty()) /* n16 */;\n  }\n}\n\nvoid pointer_equality_comparison(std::string_view *sv_ptr) /* o */ {\n  // Empty Without Parens\n  {\n    (void)(*sv_ptr == nullptr) /* o1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o1 */;\n\n    (void)(*sv_ptr == (nullptr)) /* o2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o2 */;\n\n    (void)(nullptr == *sv_ptr) /* o3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o3 */;\n\n    (void)((nullptr) == *sv_ptr) /* o4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o4 */;\n  }\n\n  // Empty With Parens\n  {\n    (void)((*sv_ptr) == nullptr) /* o5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o5 */;\n\n    (void)((*sv_ptr) == (nullptr)) /* o6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o6 */;\n\n    (void)(nullptr == (*sv_ptr)) /* o7 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o7 */;\n\n    (void)((nullptr) == (*sv_ptr)) /* o8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(sv_ptr->empty()) /* o8 */;\n  }\n\n  // Non-Empty With Parens\n  {\n    (void)((*sv_ptr) != nullptr) /* o9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o9 */;\n\n    (void)((*sv_ptr) != (nullptr)) /* o10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o10 */;\n\n    (void)(nullptr != (*sv_ptr)) /* o11 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o11 */;\n\n    (void)((nullptr) != (*sv_ptr)) /* o12 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o12 */;\n  }\n\n  // Non-Empty Without Parens\n  {\n    (void)((*sv_ptr) != nullptr) /* o13 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o13 */;\n\n    (void)((*sv_ptr) != (nullptr)) /* o14 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o14 */;\n\n    (void)(nullptr != (*sv_ptr)) /* o15 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o15 */;\n\n    (void)((nullptr) != (*sv_ptr)) /* o16 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: comparing{{.*}}emptiness query\n    // CHECK-FIXES: {{^}}    (void)(!sv_ptr->empty()) /* o16 */;\n  }\n}\n\nvoid equality_comparison_with_temporary(std::string_view sv) /* p */ {\n  (void)(sv == std::string_view(nullptr)) /* p1 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv == std::string_view()) /* p1 */;\n\n  (void)(sv == std::string_view{nullptr}) /* p2 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv == std::string_view{}) /* p2 */;\n\n  (void)(sv == (std::string_view) nullptr) /* p3 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv == (std::string_view) {}) /* p3 */;\n\n  (void)(sv == (std::string_view){nullptr}) /* p4 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:35: warning: constructing{{.*}}default\n  // CHECK-FIXES: {{^}}  (void)(sv == (std::string_view){}) /* p4 */;\n\n  (void)(sv == static_cast<SV>(nullptr)) /* p5 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning: casting{{.*}}empty string\n  // CHECK-FIXES: {{^}}  (void)(sv == static_cast<SV>(\"\")) /* p5 */;\n}\n\nvoid return_statement() /* q */ {\n  // Return Statement\n  {\n    []() -> SV { return nullptr; } /* q1 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q1 */;\n\n    []() -> SV { return (nullptr); } /* q2 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q2 */;\n\n    []() -> SV { return {nullptr}; } /* q3 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q3 */;\n\n    []() -> SV { return {(nullptr)}; } /* q4 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q4 */;\n\n    []() -> SV { return {{nullptr}}; } /* q5 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q5 */;\n\n    []() -> SV { return {{(nullptr)}}; } /* q6 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q6 */;\n\n    []() -> SV { return {{}}; } /* q7 */; // Default `const CharT*`\n    // CHECK-MESSAGES: :[[@LINE-1]]:25: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return {}; } /* q7 */;\n  }\n\n  // Return Statement With Temporary\n  {\n    []() -> SV { return SV(nullptr); } /* q8 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return SV(); } /* q8 */;\n\n    []() -> SV { return SV{nullptr}; } /* q9 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:28: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return SV{}; } /* q9 */;\n\n    []() -> SV { return (SV) nullptr; } /* q10 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:30: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return (SV) {}; } /* q10 */;\n\n    []() -> SV { return (SV){nullptr}; } /* q11 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:30: warning: constructing{{.*}}default\n    // CHECK-FIXES: {{^}}    []() -> SV { return (SV){}; } /* q11 */;\n\n    []() -> SV { return static_cast<SV>(nullptr); } /* q12 */;\n    // CHECK-MESSAGES: :[[@LINE-1]]:41: warning: casting{{.*}}empty string\n    // CHECK-FIXES: {{^}}    []() -> SV { return static_cast<SV>(\"\"); } /* q12 */;\n  }\n}\n\nvoid constructor_invocation() /* r */ {\n  struct AcceptsSV {\n    explicit AcceptsSV(std::string_view) {}\n  } r1(nullptr);\n  // CHECK-MESSAGES: :[[@LINE-1]]:8: warning: passing{{.*}}empty string\n  // CHECK-FIXES: {{^}}  } r1(\"\");\n\n  (void)(AcceptsSV{nullptr}) /* r2 */;\n  // CHECK-MESSAGES: :[[@LINE-1]]:20: warning: passing{{.*}}empty string\n  // CHECK-FIXES: {{^}}  (void)(AcceptsSV{\"\"}) /* r2 */;\n\n  AcceptsSV r3{nullptr};\n  // CHECK-MESSAGES: :[[@LINE-1]]:16: warning: passing{{.*}}empty string\n  // CHECK-FIXES: {{^}}  AcceptsSV r3{\"\"};\n}"
    }
  ]
}