{
  "name": "SuspiciousStringCompare",
  "language": "cpp",
  "description": ".. title:: clang-tidy - bugprone-suspicious-string-compare",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 207,
  "branches": 12,
  "apis": 130,
  "test": [
    {
      "description": null,
      "expected-problems": 48,
      "expected-linenumbers": [
        64,
        70,
        75,
        79,
        83,
        87,
        91,
        119,
        124,
        129,
        134,
        139,
        144,
        149,
        154,
        159,
        164,
        169,
        174,
        179,
        184,
        189,
        194,
        199,
        204,
        209,
        214,
        219,
        224,
        229,
        234,
        239,
        244,
        249,
        254,
        259,
        264,
        269,
        274,
        279,
        284,
        289,
        294,
        299,
        324,
        328,
        332,
        336
      ],
      "code": "\n// RUN: %check_clang_tidy --match-partial-fixes %s bugprone-suspicious-string-compare %t -- \\\n// RUN: -config='{CheckOptions: \\\n// RUN:  {bugprone-suspicious-string-compare.WarnOnImplicitComparison: true, \\\n// RUN:   bugprone-suspicious-string-compare.WarnOnLogicalNotComparison: true}}' \\\n// RUN: --\n\ntypedef __SIZE_TYPE__ size;\n\nstruct locale_t {\n  void* dummy;\n} locale;\n\nstatic const char A[] = \"abc\";\nstatic const unsigned char U[] = \"abc\";\nstatic const unsigned char V[] = \"xyz\";\nstatic const wchar_t W[] = L\"abc\";\n\nint strlen(const char *);\n\nint memcmp(const void *, const void *, size);\nint wmemcmp(const wchar_t *, const wchar_t *, size);\nint memicmp(const void *, const void *, size);\nint _memicmp(const void *, const void *, size);\nint _memicmp_l(const void *, const void *, size, locale_t);\n\nint strcmp(const char *, const char *);\nint strncmp(const char *, const char *, size);\nint strcasecmp(const char *, const char *);\nint strncasecmp(const char *, const char *, size);\nint stricmp(const char *, const char *);\nint strcmpi(const char *, const char *);\nint strnicmp(const char *, const char *, size);\nint _stricmp(const char *, const char * );\nint _strnicmp(const char *, const char *, size);\nint _stricmp_l(const char *, const char *, locale_t);\nint _strnicmp_l(const char *, const char *, size, locale_t);\n\nint wcscmp(const wchar_t *, const wchar_t *);\nint wcsncmp(const wchar_t *, const wchar_t *, size);\nint wcscasecmp(const wchar_t *, const wchar_t *);\nint wcsicmp(const wchar_t *, const wchar_t *);\nint wcsnicmp(const wchar_t *, const wchar_t *, size);\nint _wcsicmp(const wchar_t *, const wchar_t *);\nint _wcsnicmp(const wchar_t *, const wchar_t *, size);\nint _wcsicmp_l(const wchar_t *, const wchar_t *, locale_t);\nint _wcsnicmp_l(const wchar_t *, const wchar_t *, size, locale_t);\n\nint _mbscmp(const unsigned char *, const unsigned char *);\nint _mbsncmp(const unsigned char *, const unsigned char *, size);\nint _mbsnbcmp(const unsigned char *, const unsigned char *, size);\nint _mbsnbicmp(const unsigned char *, const unsigned char *, size);\nint _mbsicmp(const unsigned char *, const unsigned char *);\nint _mbsnicmp(const unsigned char *, const unsigned char *, size);\nint _mbscmp_l(const unsigned char *, const unsigned char *, locale_t);\nint _mbsncmp_l(const unsigned char *, const unsigned char *, size, locale_t);\nint _mbsicmp_l(const unsigned char *, const unsigned char *, locale_t);\nint _mbsnicmp_l(const unsigned char *, const unsigned char *, size, locale_t);\nint _mbsnbcmp_l(const unsigned char *, const unsigned char *, size, locale_t);\nint _mbsnbicmp_l(const unsigned char *, const unsigned char *, size, locale_t);\n\nint test_warning_patterns() {\n  if (strcmp(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is called without explicitly comparing result [bugprone-suspicious-string-compare]\n  // CHECK-FIXES: if (strcmp(A, \"a\") != 0)\n\n  if (strcmp(A, \"a\") == 0 ||\n      strcmp(A, \"b\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is called without explicitly comparing result\n  // CHECK-FIXES: strcmp(A, \"b\") != 0)\n\n  if (strcmp(A, \"a\") == 1)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is compared to a suspicious constant\n\n  if (strcmp(A, \"a\") == -1)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is compared to a suspicious constant\n\n  if (strcmp(A, \"a\") == true)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is compared to a suspicious constant\n\n  if (strcmp(A, \"a\") < '0')\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is compared to a suspicious constant\n\n  if (strcmp(A, \"a\") < 0.)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' has suspicious implicit cast\n\n  return 1;\n}\n\nint test_valid_patterns() {\n  // The following cases are valid.\n  if (strcmp(A, \"a\") < 0)\n    return 0;\n  if (strcmp(A, \"a\") == 0)\n    return 0;\n  if (strcmp(A, \"a\") <= 0)\n    return 0;\n\n  if (wcscmp(W, L\"a\") < 0)\n    return 0;\n  if (wcscmp(W, L\"a\") == 0)\n    return 0;\n  if (wcscmp(W, L\"a\") <= 0)\n    return 0;\n\n  return 1;\n}\n\nint test_implicit_compare_with_functions() {\n\n  if (memcmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'memcmp' is called without explicitly comparing result\n  // CHECK-FIXES: memcmp(A, \"a\", 1) != 0)\n\n  if (wmemcmp(W, L\"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wmemcmp' is called without explicitly comparing result\n  // CHECK-FIXES: wmemcmp(W, L\"a\", 1) != 0)\n\n  if (memicmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'memicmp' is called without explicitly comparing result\n  // CHECK-FIXES: memicmp(A, \"a\", 1) != 0)\n\n  if (_memicmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_memicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _memicmp(A, \"a\", 1) != 0)\n\n  if (_memicmp_l(A, \"a\", 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_memicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _memicmp_l(A, \"a\", 1, locale) != 0)\n\n  if (strcmp(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is called without explicitly comparing result\n  // CHECK-FIXES: strcmp(A, \"a\") != 0)\n\n  if (strncmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strncmp' is called without explicitly comparing result\n  // CHECK-FIXES: strncmp(A, \"a\", 1) != 0)\n\n  if (strcasecmp(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcasecmp' is called without explicitly comparing result\n  // CHECK-FIXES: strcasecmp(A, \"a\") != 0)\n\n  if (strncasecmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strncasecmp' is called without explicitly comparing result\n  // CHECK-FIXES: strncasecmp(A, \"a\", 1) != 0)\n\n  if (stricmp(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'stricmp' is called without explicitly comparing result\n  // CHECK-FIXES: stricmp(A, \"a\") != 0)\n\n  if (strcmpi(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmpi' is called without explicitly comparing result\n  // CHECK-FIXES: strcmpi(A, \"a\") != 0)\n\n  if (_stricmp(A, \"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_stricmp' is called without explicitly comparing result\n  // CHECK-FIXES: _stricmp(A, \"a\") != 0)\n\n  if (strnicmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strnicmp' is called without explicitly comparing result\n  // CHECK-FIXES: strnicmp(A, \"a\", 1) != 0)\n\n  if (_strnicmp(A, \"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_strnicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _strnicmp(A, \"a\", 1) != 0)\n\n  if (_stricmp_l(A, \"a\", locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_stricmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _stricmp_l(A, \"a\", locale) != 0)\n\n  if (_strnicmp_l(A, \"a\", 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_strnicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _strnicmp_l(A, \"a\", 1, locale) != 0)\n\n  if (wcscmp(W, L\"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wcscmp' is called without explicitly comparing result\n  // CHECK-FIXES: wcscmp(W, L\"a\") != 0)\n\n  if (wcsncmp(W, L\"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wcsncmp' is called without explicitly comparing result\n  // CHECK-FIXES: wcsncmp(W, L\"a\", 1) != 0)\n\n  if (wcscasecmp(W, L\"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wcscasecmp' is called without explicitly comparing result\n  // CHECK-FIXES: wcscasecmp(W, L\"a\") != 0)\n\n  if (wcsicmp(W, L\"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wcsicmp' is called without explicitly comparing result\n  // CHECK-FIXES: wcsicmp(W, L\"a\") != 0)\n\n  if (_wcsicmp(W, L\"a\"))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_wcsicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _wcsicmp(W, L\"a\") != 0)\n\n  if (_wcsicmp_l(W, L\"a\", locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_wcsicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _wcsicmp_l(W, L\"a\", locale) != 0)\n\n  if (wcsnicmp(W, L\"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'wcsnicmp' is called without explicitly comparing result\n  // CHECK-FIXES: wcsnicmp(W, L\"a\", 1) != 0)\n\n  if (_wcsnicmp(W, L\"a\", 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_wcsnicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _wcsnicmp(W, L\"a\", 1) != 0)\n\n  if (_wcsnicmp_l(W, L\"a\", 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_wcsnicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _wcsnicmp_l(W, L\"a\", 1, locale) != 0)\n\n  if (_mbscmp(U, V))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbscmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbscmp(U, V) != 0)\n\n  if (_mbsncmp(U, V, 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsncmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsncmp(U, V, 1) != 0)\n\n  if (_mbsnbcmp(U, V, 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnbcmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnbcmp(U, V, 1) != 0)\n\n  if (_mbsnbicmp(U, V, 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnbicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnbicmp(U, V, 1) != 0)\n\n  if (_mbsicmp(U, V))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsicmp(U, V) != 0)\n\n  if (_mbsnicmp(U, V, 1))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnicmp' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnicmp(U, V, 1) != 0)\n\n  if (_mbscmp_l(U, V, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbscmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbscmp_l(U, V, locale) != 0)\n\n  if (_mbsncmp_l(U, V, 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsncmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsncmp_l(U, V, 1, locale) != 0)\n\n  if (_mbsicmp_l(U, V, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsicmp_l(U, V, locale) != 0)\n\n  if (_mbsnicmp_l(U, V, 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnicmp_l(U, V, 1, locale) != 0)\n\n  if (_mbsnbcmp_l(U, V, 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnbcmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnbcmp_l(U, V, 1, locale) != 0)\n\n  if (_mbsnbicmp_l(U, V, 1, locale))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function '_mbsnbicmp_l' is called without explicitly comparing result\n  // CHECK-FIXES: _mbsnbicmp_l(U, V, 1, locale) != 0)\n\n  return 1;\n}\n\nint strcmp_wrapper1(const char* a, const char* b) {\n  return strcmp(a, b);\n}\n\nint strcmp_wrapper2(const char* a, const char* b) {\n  return (a && b) ? strcmp(a, b) : 0;\n}\n\n#define macro_strncmp(s1, s2, n)                                              \\\n  (__extension__ (__builtin_constant_p (n)                                    \\\n                  && ((__builtin_constant_p (s1)                              \\\n                       && strlen (s1) < ((size) (n)))                         \\\n                      || (__builtin_constant_p (s2)                           \\\n                          && strlen (s2) < ((size) (n))))                     \\\n                  ? strcmp (s1, s2) : strncmp (s1, s2, n)))\n\nint strncmp_macro(const char* a, const char* b) {\n  if (macro_strncmp(a, b, 4))\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is called without explicitly comparing result\n\n  if (macro_strncmp(a, b, 4) == 2)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' is compared to a suspicious constant\n\n  if (macro_strncmp(a, b, 4) <= .0)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: function 'strcmp' has suspicious implicit cast\n\n  if (macro_strncmp(a, b, 4) + 0)\n    return 0;\n  // CHECK-MESSAGES: [[@LINE-2]]:7: warning: results of function 'strcmp' used by operator '+'\n\n  return 1;\n}"
    }
  ]
}