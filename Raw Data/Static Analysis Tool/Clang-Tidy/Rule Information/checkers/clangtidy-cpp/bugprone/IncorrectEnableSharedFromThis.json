{
  "name": "IncorrectEnableSharedFromThis",
  "language": "cpp",
  "description": ".. title:: clang-tidy - bugprone-incorrect-enable-shared-from-this",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 65,
  "branches": 1,
  "apis": 37,
  "test": [
    {
      "description": null,
      "expected-problems": 25,
      "expected-linenumbers": [
        10,
        14,
        18,
        31,
        35,
        39,
        44,
        47,
        53,
        63,
        67,
        73,
        83,
        87,
        93,
        103,
        107,
        113,
        125,
        132,
        145,
        163,
        166,
        173,
        177
      ],
      "code": "\n// RUN: %check_clang_tidy --match-partial-fixes -std=c++11-or-later %s bugprone-incorrect-enable-shared-from-this %t\n\n// NOLINTBEGIN\nnamespace std {\n    template <typename T> class enable_shared_from_this {};\n} //namespace std\n// NOLINTEND\n\nclass BadClassExample : std::enable_shared_from_this<BadClassExample> {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'BadClassExample' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: public std::enable_shared_from_this<BadClassExample>\n\nclass BadClass2Example : private std::enable_shared_from_this<BadClass2Example> {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'BadClass2Example' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: public std::enable_shared_from_this<BadClass2Example>\n\nstruct BadStructExample : private std::enable_shared_from_this<BadStructExample> {};\n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: 'BadStructExample' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: public std::enable_shared_from_this<BadStructExample>\n\nclass GoodClassExample : public std::enable_shared_from_this<GoodClassExample> {};\n\nstruct GoodStructExample : public std::enable_shared_from_this<GoodStructExample> {};\n\nstruct GoodStruct2Example : std::enable_shared_from_this<GoodStruct2Example> {};\n\nclass dummy_class1 {};\nclass dummy_class2 {};\n\nclass BadMultiClassExample : std::enable_shared_from_this<BadMultiClassExample>, dummy_class1 {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'BadMultiClassExample' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: public std::enable_shared_from_this<BadMultiClassExample>, dummy_class1\n\nclass BadMultiClass2Example : dummy_class1, std::enable_shared_from_this<BadMultiClass2Example>, dummy_class2 {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'BadMultiClass2Example' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: dummy_class1, public std::enable_shared_from_this<BadMultiClass2Example>, dummy_class2\n\nclass BadMultiClass3Example : dummy_class1, dummy_class2, std::enable_shared_from_this<BadMultiClass3Example> {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'BadMultiClass3Example' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: dummy_class1, dummy_class2, public std::enable_shared_from_this<BadMultiClass3Example>\n\nclass ClassBase : public std::enable_shared_from_this<ClassBase> {};\nclass PrivateInheritClassBase : private ClassBase {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'PrivateInheritClassBase' is not publicly inheriting from 'ClassBase' which inherits from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\nclass DefaultInheritClassBase : ClassBase {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'DefaultInheritClassBase' is not publicly inheriting from 'ClassBase' which inherits from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\nclass PublicInheritClassBase : public ClassBase {};\n\nstruct StructBase : public std::enable_shared_from_this<StructBase> {};\nstruct PrivateInheritStructBase : private StructBase {};\n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: 'PrivateInheritStructBase' is not publicly inheriting from 'StructBase' which inherits from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\nstruct DefaultInheritStructBase : StructBase {};\n\nstruct PublicInheritStructBase : StructBase {};\n\n//alias the template itself\ntemplate <typename T> using esft_template = std::enable_shared_from_this<T>;\n\nclass PrivateAliasTemplateClassBase : private esft_template<PrivateAliasTemplateClassBase> {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'PrivateAliasTemplateClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class PrivateAliasTemplateClassBase : public esft_template<PrivateAliasTemplateClassBase> {};\n\nclass DefaultAliasTemplateClassBase : esft_template<DefaultAliasTemplateClassBase> {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'DefaultAliasTemplateClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class DefaultAliasTemplateClassBase : public esft_template<DefaultAliasTemplateClassBase> {};\n\nclass PublicAliasTemplateClassBase : public esft_template<PublicAliasTemplateClassBase> {}; \n\nstruct PrivateAliasTemplateStructBase : private esft_template<PrivateAliasTemplateStructBase> {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: 'PrivateAliasTemplateStructBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: struct PrivateAliasTemplateStructBase : public esft_template<PrivateAliasTemplateStructBase> {};\n\nstruct DefaultAliasTemplateStructBase : esft_template<DefaultAliasTemplateStructBase> {}; \n\nstruct PublicAliasTemplateStructBase : public esft_template<PublicAliasTemplateStructBase> {}; \n\n//alias with specific instance\nusing esft = std::enable_shared_from_this<ClassBase>;\nclass PrivateAliasClassBase : private esft {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'PrivateAliasClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class PrivateAliasClassBase : public esft {};\n\nclass DefaultAliasClassBase : esft {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'DefaultAliasClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class DefaultAliasClassBase : public esft {};\n\nclass PublicAliasClassBase : public esft {}; \n\nstruct PrivateAliasStructBase : private esft {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: 'PrivateAliasStructBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: struct PrivateAliasStructBase : public esft {};\n\nstruct DefaultAliasStructBase : esft {}; \n\nstruct PublicAliasStructBase : public esft {}; \n\n//we can only typedef a specific instance of the template\ntypedef std::enable_shared_from_this<ClassBase> EnableSharedFromThis;\nclass PrivateTypedefClassBase : private EnableSharedFromThis {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'PrivateTypedefClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class PrivateTypedefClassBase : public EnableSharedFromThis {};\n\nclass DefaultTypedefClassBase : EnableSharedFromThis {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'DefaultTypedefClassBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class DefaultTypedefClassBase : public EnableSharedFromThis {};\n\nclass PublicTypedefClassBase : public EnableSharedFromThis {}; \n\nstruct PrivateTypedefStructBase : private EnableSharedFromThis {}; \n// CHECK-MESSAGES: :[[@LINE-1]]:8: warning: 'PrivateTypedefStructBase' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: struct PrivateTypedefStructBase : public EnableSharedFromThis {};\n\nstruct DefaultTypedefStructBase : EnableSharedFromThis {}; \n\nstruct PublicTypedefStructBase : public EnableSharedFromThis {}; \n\n#define PRIVATE_ESFT_CLASS(ClassName) \\\n   class ClassName: private std::enable_shared_from_this<ClassName> { \\\n   };\n\nPRIVATE_ESFT_CLASS(PrivateEsftClass);\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: 'PrivateEsftClass' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\n#define DEFAULT_ESFT_CLASS(ClassName) \\\n   class ClassName: std::enable_shared_from_this<ClassName> { \\\n   };\n\nDEFAULT_ESFT_CLASS(DefaultEsftClass);\n// CHECK-MESSAGES: :[[@LINE-1]]:20: warning: 'DefaultEsftClass' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\n#define PUBLIC_ESFT_CLASS(ClassName) \\\n   class ClassName: public std::enable_shared_from_this<ClassName> { \\\n   };\n\nPUBLIC_ESFT_CLASS(PublicEsftClass);\n\n#define PRIVATE_ESFT_STRUCT(StructName) \\\n   struct StructName: private std::enable_shared_from_this<StructName> { \\\n   };\n\nPRIVATE_ESFT_STRUCT(PrivateEsftStruct);\n// CHECK-MESSAGES: :[[@LINE-1]]:21: warning: 'PrivateEsftStruct' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\n#define DEFAULT_ESFT_STRUCT(StructName) \\\n   struct StructName: std::enable_shared_from_this<StructName> { \\\n   };\n\nDEFAULT_ESFT_STRUCT(DefaultEsftStruct);\n\n#define PUBLIC_ESFT_STRUCT(StructName) \\\n   struct StructName: std::enable_shared_from_this<StructName> { \\\n   };\n\nPUBLIC_ESFT_STRUCT(PublicEsftStruct);\n\nstruct A : std::enable_shared_from_this<A> {};\n#define MACRO_A A\n\nclass B : MACRO_A {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'B' is not publicly inheriting from 'A' which inherits from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\nclass C : private MACRO_A {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'C' is not publicly inheriting from 'A' which inherits from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n\nclass D : public MACRO_A {};\n\n#define MACRO_PARAM(CLASS) std::enable_shared_from_this<CLASS>\n\nclass E : MACRO_PARAM(E) {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'E' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class E : public MACRO_PARAM(E) {};\n\nclass F : private MACRO_PARAM(F) {};\n// CHECK-MESSAGES: :[[@LINE-1]]:7: warning: 'F' is not publicly inheriting from 'std::enable_shared_from_this', which will cause unintended behaviour when using 'shared_from_this'; make the inheritance public [bugprone-incorrect-enable-shared-from-this]\n// CHECK-FIXES: class F : public MACRO_PARAM(F) {};\n\nclass G : public MACRO_PARAM(G) {};"
    }
  ]
}