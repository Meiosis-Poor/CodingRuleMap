{
  "name": "PosixReturn",
  "language": "cpp",
  "description": ".. title:: clang-tidy - bugprone-posix-return",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 92,
  "branches": 3,
  "apis": 77,
  "test": [
    {
      "description": null,
      "expected-problems": 48,
      "expected-linenumbers": [
        45,
        48,
        51,
        54,
        57,
        60,
        63,
        66,
        69,
        72,
        75,
        78,
        85,
        87,
        89,
        91,
        93,
        95,
        97,
        102,
        104,
        106,
        108,
        110,
        112,
        114,
        116,
        118,
        120,
        122,
        124,
        126,
        128,
        130,
        132,
        134,
        139,
        142,
        144,
        146,
        148,
        150,
        152,
        155,
        157,
        159,
        161,
        163
      ],
      "code": "\n// RUN: %check_clang_tidy --match-partial-fixes %s bugprone-posix-return %t\n\n#define NULL nullptr\n#define ZERO 0\n#define NEGATIVE_ONE -1\n\ntypedef int pid_t;\ntypedef long off_t;\ntypedef decltype(sizeof(int)) size_t;\ntypedef struct __posix_spawn_file_actions* posix_spawn_file_actions_t;\ntypedef struct __posix_spawnattr* posix_spawnattr_t;\n# define __CPU_SETSIZE 1024\n# define __NCPUBITS (8 * sizeof (__cpu_mask))\ntypedef unsigned long int __cpu_mask;\ntypedef struct\n{\n  __cpu_mask __bits[__CPU_SETSIZE / __NCPUBITS];\n} cpu_set_t;\ntypedef struct _opaque_pthread_t *__darwin_pthread_t;\ntypedef __darwin_pthread_t pthread_t;\ntypedef struct pthread_attr_t_ *pthread_attr_t;\n\nextern \"C\" int posix_fadvise(int fd, off_t offset, off_t len, int advice);\nextern \"C\" int posix_fallocate(int fd, off_t offset, off_t len);\nextern \"C\" int posix_madvise(void *addr, size_t len, int advice);\nextern \"C\" int posix_memalign(void **memptr, size_t alignment, size_t size);\nextern \"C\" int posix_openpt(int flags);\nextern \"C\" int posix_spawn(pid_t *pid, const char *path,\n                const posix_spawn_file_actions_t *file_actions,\n                const posix_spawnattr_t *attrp,\n                char *const argv[], char *const envp[]);\nextern \"C\" int posix_spawnp(pid_t *pid, const char *file,\n                 const posix_spawn_file_actions_t *file_actions,\n                 const posix_spawnattr_t *attrp,\n                 char *const argv[], char *const envp[]);\nextern \"C\" int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);\nextern \"C\" int pthread_attr_setaffinity_np(pthread_attr_t *attr, size_t cpusetsize, const cpu_set_t *cpuset);\nextern \"C\" int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy);\nextern \"C\" int pthread_attr_init(pthread_attr_t *attr);\nextern \"C\" int pthread_yield(void);\n\n\nvoid warningLessThanZero() {\n  if (posix_fadvise(0, 0, 0, 0) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: the comparison always evaluates to false because posix_fadvise always returns non-negative values\n  // CHECK-FIXES: posix_fadvise(0, 0, 0, 0) > 0\n  if (posix_fallocate(0, 0, 0) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning:\n  // CHECK-FIXES: posix_fallocate(0, 0, 0) > 0\n  if (posix_madvise(NULL, 0, 0) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  // CHECK-FIXES: posix_madvise(NULL, 0, 0) > 0\n  if (posix_memalign(NULL, 0, 0) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:34: warning:\n  // CHECK-FIXES: posix_memalign(NULL, 0, 0) > 0\n  if (posix_spawn(NULL, NULL, NULL, NULL, {NULL}, {NULL}) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:59: warning:\n  // CHECK-FIXES: posix_spawn(NULL, NULL, NULL, NULL, {NULL}, {NULL}) > 0\n  if (posix_spawnp(NULL, NULL, NULL, NULL, {NULL}, {NULL}) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:60: warning:\n  // CHECK-FIXES: posix_spawnp(NULL, NULL, NULL, NULL, {NULL}, {NULL}) > 0\n  if (pthread_create(NULL, NULL, NULL, NULL) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: the comparison always evaluates to false because pthread_create always returns non-negative values\n  // CHECK-FIXES: pthread_create(NULL, NULL, NULL, NULL) > 0\n  if (pthread_attr_setaffinity_np(NULL, 0, NULL) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:50: warning:\n  // CHECK-FIXES: pthread_attr_setaffinity_np(NULL, 0, NULL) > 0\n  if (pthread_attr_setschedpolicy(NULL, 0) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:44: warning:\n  // CHECK-FIXES: pthread_attr_setschedpolicy(NULL, 0) > 0)\n  if (pthread_attr_init(NULL) < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:31: warning:\n  // CHECK-FIXES: pthread_attr_init(NULL) > 0\n  if (pthread_yield() < 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:23: warning:\n  // CHECK-FIXES: pthread_yield() > 0\n  if (0 > pthread_yield() ) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:9: warning:\n  // CHECK-FIXES: 0 < pthread_yield()\n\n}\n\nvoid warningAlwaysTrue() {\n  if (posix_fadvise(0, 0, 0, 0) >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: the comparison always evaluates to true because posix_fadvise always returns non-negative values\n  if (pthread_create(NULL, NULL, NULL, NULL) >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: the comparison always evaluates to true because pthread_create always returns non-negative values\n  if (pthread_attr_setaffinity_np(NULL, 0, NULL) >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:50: warning:\n  if (pthread_attr_setschedpolicy(NULL, 0) >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:44: warning:\n  if (pthread_attr_init(NULL) >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:31: warning:\n  if (pthread_yield() >= 0) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:23: warning:\n  if (0 <= pthread_yield()) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:9: warning:\n}\n\nvoid warningEqualsNegative() {\n  if (posix_fadvise(0, 0, 0, 0) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning: posix_fadvise\n  if (posix_fadvise(0, 0, 0, 0) != -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) <= -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) < -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fallocate(0, 0, 0) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:32: warning:\n  if (posix_madvise(NULL, 0, 0) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_memalign(NULL, 0, 0) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:34: warning:\n  if (posix_spawn(NULL, NULL, NULL, NULL, {NULL}, {NULL}) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:59: warning:\n  if (posix_spawnp(NULL, NULL, NULL, NULL, {NULL}, {NULL}) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:60: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) == -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning: pthread_create\n  if (pthread_create(NULL, NULL, NULL, NULL) != -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) <= -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) < -1) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (-1 == pthread_create(NULL, NULL, NULL, NULL)) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:10: warning:\n  if (-1 != pthread_create(NULL, NULL, NULL, NULL)) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:10: warning:\n  if (-1 >= pthread_create(NULL, NULL, NULL, NULL)) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:10: warning:\n  if (-1 > pthread_create(NULL, NULL, NULL, NULL)) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:10: warning:\n}\n\nvoid WarningWithMacro() {\n  if (posix_fadvise(0, 0, 0, 0) < ZERO) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  // CHECK-FIXES: posix_fadvise(0, 0, 0, 0) > ZERO\n  if (posix_fadvise(0, 0, 0, 0) >= ZERO) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) == NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) != NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) <= NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (posix_fadvise(0, 0, 0, 0) < NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:33: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) < ZERO) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  // CHECK-FIXES: pthread_create(NULL, NULL, NULL, NULL) > ZERO\n  if (pthread_create(NULL, NULL, NULL, NULL) >= ZERO) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) == NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) != NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) <= NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n  if (pthread_create(NULL, NULL, NULL, NULL) < NEGATIVE_ONE) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:46: warning:\n\n}\n\nvoid noWarning() {\n  if (posix_openpt(0) < 0) {}\n  if (posix_openpt(0) <= 0) {}\n  if (posix_openpt(0) == -1) {}\n  if (posix_openpt(0) != -1) {}\n  if (posix_openpt(0) <= -1) {}\n  if (posix_openpt(0) < -1) {}\n  if (posix_fadvise(0, 0, 0, 0) <= 0) {}\n  if (posix_fadvise(0, 0, 0, 0) == 1) {}\n  if (0 > posix_openpt(0)) {}\n  if (0 >= posix_openpt(0)) {}\n  if (-1 == posix_openpt(0)) {}\n  if (-1 != posix_openpt(0)) {}\n  if (-1 >= posix_openpt(0)) {}\n  if (-1 > posix_openpt(0)) {}\n  if (posix_fadvise(0, 0, 0, 0) <= 0) {}\n  if (posix_fadvise(0, 0, 0, 0) == 1) {}\n  if (0 >= posix_fadvise(0, 0, 0, 0)) {}\n  if (1 == posix_fadvise(0, 0, 0, 0)) {}\n}\n\nnamespace i {\nint posix_fadvise(int fd, off_t offset, off_t len, int advice);\nint pthread_yield(void);\n\nvoid noWarning() {\n  if (posix_fadvise(0, 0, 0, 0) < 0) {}\n  if (posix_fadvise(0, 0, 0, 0) >= 0) {}\n  if (posix_fadvise(0, 0, 0, 0) == -1) {}\n  if (posix_fadvise(0, 0, 0, 0) != -1) {}\n  if (posix_fadvise(0, 0, 0, 0) <= -1) {}\n  if (posix_fadvise(0, 0, 0, 0) < -1) {}\n    if (pthread_yield() < 0) {}\n    if (pthread_yield() >= 0) {}\n    if (pthread_yield() == -1) {}\n    if (pthread_yield() != -1) {}\n    if (pthread_yield() <= -1) {}\n    if (pthread_yield() < -1) {}\n}\n\n} // namespace i\n\nclass G {\n public:\n  int posix_fadvise(int fd, off_t offset, off_t len, int advice);\n  int pthread_yield(void);\n\n  void noWarning() {\n    if (posix_fadvise(0, 0, 0, 0) < 0) {}\n    if (posix_fadvise(0, 0, 0, 0) >= 0) {}\n    if (posix_fadvise(0, 0, 0, 0) == -1) {}\n    if (posix_fadvise(0, 0, 0, 0) != -1) {}\n    if (posix_fadvise(0, 0, 0, 0) <= -1) {}\n    if (posix_fadvise(0, 0, 0, 0) < -1) {}\n    if (pthread_yield() < 0) {}\n    if (pthread_yield() >= 0) {}\n    if (pthread_yield() == -1) {}\n    if (pthread_yield() != -1) {}\n    if (pthread_yield() <= -1) {}\n    if (pthread_yield() < -1) {}\n  }\n};"
    }
  ]
}