{
  "name": "RedundantBranchCondition",
  "language": "cpp",
  "description": ".. title:: clang-tidy - bugprone-redundant-branch-condition",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 179,
  "branches": 23,
  "apis": 133,
  "test": [
    {
      "description": null,
      "expected-problems": 45,
      "expected-linenumbers": [
        24,
        37,
        48,
        60,
        72,
        84,
        96,
        109,
        122,
        135,
        148,
        161,
        174,
        186,
        198,
        210,
        222,
        235,
        248,
        261,
        274,
        287,
        300,
        312,
        324,
        336,
        348,
        361,
        374,
        387,
        971,
        996,
        1010,
        1025,
        1039,
        1052,
        1064,
        1081,
        1095,
        1117,
        1123,
        1215,
        1247,
        1271,
        1310
      ],
      "code": "\n// RUN: %check_clang_tidy %s bugprone-redundant-branch-condition %t \\\n// RUN:                   -- -- -fblocks\n\nextern unsigned peopleInTheBuilding;\nextern unsigned fireFighters;\n\nbool isBurning();\nbool isReallyBurning();\nbool isCollapsing();\nbool tryToExtinguish(bool&);\nbool tryToExtinguishByVal(bool);\nvoid tryPutFireOut();\nbool callTheFD();\nvoid scream();\n\nbool someOtherCondition();\n\n//===--- Basic Positives --------------------------------------------------===//\n\nvoid positive_direct() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (onFire)\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n    }\n  }\n}\n\nvoid positive_direct_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire && peopleInTheBuilding > 0) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (peopleInTheBuilding > 0 && onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire || isCollapsing()) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (isCollapsing() || onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n    // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      if (onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_lhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (onFire && peopleInTheBuilding > 0) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_outer_and_lhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_outer_and_lhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (peopleInTheBuilding > 0 && onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_outer_and_lhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_outer_and_lhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (onFire || isCollapsing()) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_lhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n    // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_lhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (isCollapsing() || onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_lhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      if (onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_rhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (onFire && peopleInTheBuilding > 0) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_outer_and_rhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if ( peopleInTheBuilding > 0) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_inner_outer_and_rhs_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (peopleInTheBuilding > 0 && onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n      scream();\n    }\n  }\n}\n\nvoid positive_indirect_outer_and_rhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: if (peopleInTheBuilding > 0 ) {\n        scream();\n      }\n    }\n  }\n}\n\nvoid positive_direct_outer_and_rhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (onFire || isCollapsing()) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_rhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\nvoid positive_direct_outer_and_rhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (isCollapsing() || onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_indirect_outer_and_rhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n  }\n}\n\n//===--- Basic Negatives --------------------------------------------------===//\n\nvoid negative_direct() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (onFire && peopleInTheBuilding > 0) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (peopleInTheBuilding > 0 && onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (onFire || isCollapsing()) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (isCollapsing() || onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_lhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (onFire && peopleInTheBuilding > 0) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_lhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_lhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_lhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (peopleInTheBuilding > 0 && onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_lhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_lhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_lhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (onFire || isCollapsing()) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_lhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_lhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_lhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (isCollapsing() || onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_lhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_lhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (onFire && fireFighters < 10) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_rhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (onFire && peopleInTheBuilding > 0) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_rhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_rhs_inner_and_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire && peopleInTheBuilding > 0) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_inner_outer_and_rhs_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (peopleInTheBuilding > 0 && onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_rhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_rhs_inner_and_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (peopleInTheBuilding > 0 && onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_rhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (onFire || isCollapsing()) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_rhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_rhs_inner_or_lhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (onFire || isCollapsing()) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_direct_outer_and_rhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (isCollapsing() || onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_indirect_outer_and_rhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    tryToExtinguish(onFire);\n    if (someOtherCondition()) {\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_indirect2_outer_and_rhs_inner_or_rhs() {\n  bool onFire = isBurning();\n  if (fireFighters < 10 && onFire) {\n    if (someOtherCondition()) {\n      tryToExtinguish(onFire);\n      if (isCollapsing() || onFire) {\n        // NO-MESSAGE: fire may have been extinguished\n        scream();\n      }\n    }\n  }\n}\n\nvoid negative_by_ref(bool onFire) {\n  if (tryToExtinguish(onFire) && onFire) {\n    if (tryToExtinguish(onFire) && onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_by_val(bool onFire) {\n  if (tryToExtinguishByVal(onFire) && onFire) {\n    if (tryToExtinguish(onFire) && onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n  if (tryToExtinguish(onFire) && onFire) {\n    if (tryToExtinguishByVal(onFire) && onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      scream();\n    }\n  }\n}\n\nvoid negative_reassigned() {\n  bool onFire = isBurning();\n  if (onFire) {\n    onFire = isReallyBurning();\n    if (onFire) {\n      // NO-MESSAGE: it was a false alarm then\n      scream();\n    }\n  }\n}\n\n//===--- Special Positives ------------------------------------------------===//\n\n// Condition variable mutated in or after the inner loop\n\nvoid positive_direct_mutated_after_inner() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n    tryToExtinguish(onFire);\n  }\n}\n\nvoid positive_indirect_mutated_after_inner() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n    }\n    tryToExtinguish(onFire);\n  }\n}\n\nvoid positive_indirect2_mutated_after_inner() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (someOtherCondition()) {\n      if (onFire) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n        // CHECK-FIXES: {{^\\ *$}}\n        scream();\n      }\n      // CHECK-FIXES: {{^\\ *$}}\n      tryToExtinguish(onFire);\n    }\n  }\n}\n\nvoid positive_mutated_in_inner() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: {{^\\ *$}}\n      tryToExtinguish(onFire);\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_or_lhs_with_side_effect() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (callTheFD() || onFire) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: callTheFD() ;\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\nvoid positive_or_rhs_with_side_effect() {\n  bool onFire = isBurning();\n  if (onFire) {\n    if (onFire || callTheFD()) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: callTheFD();\n      scream();\n    }\n    // CHECK-FIXES: {{^\\ *$}}\n  }\n}\n\n// GNU Expression Statements\n\nvoid doSomething();\n\nvoid positive_gnu_expression_statement() {\n  bool onFire = isBurning();\n  if (({ doSomething(); onFire; })) {\n    if (({ doSomething(); onFire; })) {\n      // FIXME: Handle GNU epxression statements\n      // CHECK-MESSAGES-NOT: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHCK-FIXES-NOT: doSomething();\n      scream();\n    }\n  }\n}\n\n// Comma after Condition\n\nvoid positive_comma_after_condition() {\n  bool onFire = isBurning();\n  if (doSomething(), onFire) {\n    if (doSomething(), onFire) {\n      // FIXME: Handle comma operator\n      // CHECK-MESSAGES-NOT: :[[@LINE-1]]:5: warning: redundant condition 'onFire' [bugprone-redundant-branch-condition]\n      // CHCK-FIXES-NOT: doSomething();\n      scream();\n    }\n  }\n}\n\n// ExprWithCleanups doesn't crash\nint positive_expr_with_cleanups() {\n  class RetT {\n  public:\n    RetT(const int code);\n    bool Ok() const;\n    static RetT Test(bool isSet);\n\n  private:\n    int code_;\n  };\n\n  bool isSet = false;\n  if (RetT::Test(isSet).Ok() && isSet) {\n    if (RetT::Test(isSet).Ok() && isSet) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'isSet' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if (RetT::Test(isSet).Ok() ) {\n    }\n  }\n  if (isSet) {\n    if ((RetT::Test(isSet).Ok() && isSet)) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'isSet' [bugprone-redundant-branch-condition]\n      // CHECK-FIXES: if ((RetT::Test(isSet).Ok() )) {\n    }\n  }\n  return 0;\n}\n\n//===--- Special Negatives ------------------------------------------------===//\n\n// Aliasing\n\nvoid negative_mutated_by_ptr() {\n  bool onFire = isBurning();\n  bool *firePtr = &onFire;\n  if (onFire) {\n    tryToExtinguish(*firePtr);\n    if (onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\nvoid negative_mutated_by_ref() {\n  bool onFire = isBurning();\n  bool &fireRef = onFire;\n  if (onFire) {\n    tryToExtinguish(fireRef);\n    if (onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\n// Volatile\n\nvoid negatvie_volatile() {\n  bool volatile onFire = isBurning();\n  if (onFire) {\n    if (onFire) {\n      // NO-MESSAGE: maybe some other thread extinguished the fire\n      scream();\n    }\n  }\n}\n\nvoid negative_else_branch(bool isHot) {\n  bool onFire = isBurning();\n  if (onFire) {\n    tryPutFireOut();\n  } else {\n    if (isHot && onFire) {\n      // NO-MESSAGE: new check is in the `else` branch\n      // FIXME: handle `else` branches and negated conditions\n      scream();\n    }\n  }\n}\n\n// Lambda / block captures.\n\ntemplate <typename T> void accept_callback(T t) {\n  // Potentially call the callback.\n  // Possibly on a background thread or something.\n}\n\nvoid accept_block(void (^)(void)) {\n  // Potentially call the callback.\n  // Possibly on a background thread or something.\n}\n\nvoid wait(void) {\n  // Wait for the previously passed callback to be called.\n}\n\nvoid capture_and_mutate_by_lambda() {\n  bool x = true;\n  accept_callback([&]() { x = false; });\n  if (x) {\n    wait();\n    if (x) {\n    }\n  }\n}\n\nvoid lambda_capture_by_value() {\n  bool x = true;\n  accept_callback([x]() { if (x) {} });\n  if (x) {\n    wait();\n    if (x) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'x' [bugprone-redundant-branch-condition]\n    }\n  }\n}\n\nvoid capture_by_lambda_but_not_mutate() {\n  bool x = true;\n  accept_callback([&]() { if (x) {} });\n  if (x) {\n    wait();\n    // FIXME: Should warn.\n    if (x) {\n    }\n  }\n}\n\nvoid capture_and_mutate_by_block() {\n  __block bool x = true;\n  accept_block(^{ x = false; });\n  if (x) {\n    wait();\n    if (x) {\n    }\n  }\n}\n\nvoid block_capture_by_value() {\n  bool x = true;\n  accept_block(^{ if (x) {} });\n  if (x) {\n    wait();\n    if (x) {\n      // CHECK-MESSAGES: :[[@LINE-1]]:5: warning: redundant condition 'x' [bugprone-redundant-branch-condition]\n    }\n  }\n}\n\nvoid capture_by_block_but_not_mutate() {\n  __block bool x = true;\n  accept_callback(^{ if (x) {} });\n  if (x) {\n    wait();\n    // FIXME: Should warn.\n    if (x) {\n    }\n  }\n}\n\nvoid mutate_at_any_time(bool *x);\n\nvoid capture_with_branches_inside_lambda_bad() {\n  bool x = true;\n  accept_callback([=]() {\n    if (x) {\n      wait();\n      if (x) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'x' [bugprone-redundant-branch-condition]\n      }\n    }\n  });\n  mutate_at_any_time(&x);\n}\n\nvoid capture_with_branches_inside_lambda_good() {\n  bool x = true;\n  accept_callback([&]() {\n    if (x) {\n      wait();\n      if (x) {\n      }\n    }\n  });\n  mutate_at_any_time(&x);\n}\n\nvoid capture_with_branches_inside_block_bad() {\n  bool x = true;\n  accept_callback(^{\n    if (x) {\n      wait();\n      if (x) {\n         // FIXME: Should warn. It currently reacts to &x outside the block\n         // which ideally shouldn't have any effect.\n      }\n    }\n  });\n  mutate_at_any_time(&x);\n}\n\nvoid capture_with_branches_inside_block_bad_simpler() {\n  bool x = true;\n  accept_callback(^{\n    if (x) {\n      wait();\n      if (x) {\n        // CHECK-MESSAGES: :[[@LINE-1]]:7: warning: redundant condition 'x' [bugprone-redundant-branch-condition]\n      }\n    }\n  });\n}\n\nvoid capture_with_branches_inside_block_good() {\n  __block bool x = true;\n  accept_callback(^{\n    if (x) {\n      wait();\n      if (x) {\n      }\n    }\n  });\n  mutate_at_any_time(&x);\n}\n\n// GNU Expression Statements\n\nvoid negative_gnu_expression_statement() {\n  bool onFire = isBurning();\n  if (({ doSomething(); onFire; })) {\n    tryToExtinguish(onFire);\n    if (({ doSomething(); onFire; })) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\n// Comma after Condition\n\nvoid negative_comma_after_condition() {\n  bool onFire = isBurning();\n  if (doSomething(), onFire) {\n    tryToExtinguish(onFire);\n    if (doSomething(), onFire) {\n      // NO-MESSAGE: fire may have been extinguished\n      scream();\n    }\n  }\n}\n\n//===--- Unhandled Cases --------------------------------------------------===//\n\nvoid negated_in_else() {\n  bool onFire = isBurning();\n  if (onFire) {\n    scream();\n  } else {\n    if (!onFire) {\n      doSomething();\n    }\n  }\n}\n\nvoid equality() {\n  if (peopleInTheBuilding == 1) {\n    if (peopleInTheBuilding == 1) {\n      doSomething();\n    }\n  }\n}\n\nvoid relational_operator() {\n  if (peopleInTheBuilding > 2) {\n    if (peopleInTheBuilding > 1) {\n      doSomething();\n    }\n  }\n}\n\nvoid relational_operator_reversed() {\n  if (peopleInTheBuilding > 1) {\n    if (1 < peopleInTheBuilding) {\n      doSomething();\n    }\n  }\n}\n\nvoid volatile_concrete_address() {\n  // No warning. The value behind the volatile concrete address\n  // is beyond our control. It may change at any time.\n  if (*(volatile int *)0x1234) {\n    if (*(volatile int *)0x1234) {\n      doSomething();\n    }\n  }\n}"
    }
  ]
}