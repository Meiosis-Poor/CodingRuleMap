{
  "name": "CloexecCreat",
  "language": "cpp",
  "description": ".. title:: clang-tidy - android-cloexec-creat",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 36,
  "branches": 1,
  "apis": 26,
  "test": [
    {
      "description": null,
      "expected-problems": 5,
      "expected-linenumbers": [
        10,
        13,
        16,
        24,
        33
      ],
      "code": "\n// RUN: %check_clang_tidy %s android-cloexec-creat %t\n\ntypedef int mode_t;\n\nextern \"C\" int creat(const char *path, mode_t, ...);\nextern \"C\" int create(const char *path, mode_t, ...);\n\nvoid f() {\n  creat(\"filename\", 0);\n  // CHECK-MESSAGES: :[[@LINE-1]]:3: warning: prefer open() to creat() because open() allows O_CLOEXEC [android-cloexec-creat]\n  // CHECK-FIXES: open (\"filename\", O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC, 0);\n  create(\"filename\", 0);\n  // CHECK-MESSAGES-NOT: warning:\n  mode_t mode = 0755;\n  creat(\"filename\", mode);\n  // CHECK-MESSAGES: :[[@LINE-1]]:3: warning:\n  // CHECK-FIXES: open (\"filename\", O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC, mode);\n}\n\nnamespace i {\nint creat(const char *path, mode_t, ...);\nvoid g() {\n  creat(\"filename\", 0);\n  // CHECK-MESSAGES-NOT: warning:\n}\n} // namespace i\n\nclass C {\npublic:\n  int creat(const char *path, mode_t, ...);\n  void h() {\n    creat(\"filename\", 0);\n    // CHECK-MESSAGES-NOT: warning:\n  }\n};"
    }
  ]
}