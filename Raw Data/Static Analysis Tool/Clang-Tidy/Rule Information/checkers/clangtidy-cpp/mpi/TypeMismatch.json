{
  "name": "TypeMismatch",
  "language": "cpp",
  "description": ".. title:: clang-tidy - mpi-type-mismatch",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 331,
  "branches": 45,
  "apis": 115,
  "test": [
    {
      "description": null,
      "expected-problems": 47,
      "expected-linenumbers": [
        9,
        13,
        17,
        21,
        25,
        29,
        33,
        39,
        43,
        47,
        51,
        55,
        59,
        63,
        67,
        73,
        77,
        81,
        85,
        89,
        93,
        97,
        101,
        107,
        111,
        115,
        119,
        123,
        127,
        131,
        135,
        141,
        145,
        149,
        153,
        157,
        161,
        165,
        169,
        175,
        179,
        183,
        187,
        191,
        195,
        199,
        203
      ],
      "code": "\n// REQUIRES: static-analyzer\n// RUN: %check_clang_tidy %s mpi-type-mismatch %t -- -- -I %S/Inputs/type-mismatch\n\n#include \"mpimock.h\"\n\nvoid charNegativeTest() {\n  int buf;\n  MPI_Send(&buf, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'int' does not match the MPI datatype 'MPI_CHAR'\n\n  short buf2;\n  MPI_Send(&buf2, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'short' does not match the MPI datatype 'MPI_CHAR'\n\n  long buf3;\n  MPI_Send(&buf3, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long' does not match the MPI datatype 'MPI_CHAR'\n\n  int8_t buf4;\n  MPI_Send(&buf4, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'int8_t' does not match the MPI datatype 'MPI_CHAR'\n\n  uint16_t buf5;\n  MPI_Send(&buf5, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_CHAR'\n\n  long double _Complex buf6;\n  MPI_Send(&buf6, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long double _Complex' does not match the MPI datatype 'MPI_CHAR'\n\n  std::complex<float> buf7;\n  MPI_Send(&buf7, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<float>' does not match the MPI datatype 'MPI_CHAR'\n}\n\nvoid intNegativeTest() {\n  unsigned char buf;\n  MPI_Send(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned char' does not match the MPI datatype 'MPI_INT'\n\n  unsigned buf2;\n  MPI_Send(&buf2, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned int' does not match the MPI datatype 'MPI_INT'\n\n  short buf3;\n  MPI_Send(&buf3, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'short' does not match the MPI datatype 'MPI_INT'\n\n  long buf4;\n  MPI_Send(&buf4, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long' does not match the MPI datatype 'MPI_INT'\n\n  int8_t buf5;\n  MPI_Send(&buf5, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'int8_t' does not match the MPI datatype 'MPI_INT'\n\n  uint16_t buf6;\n  MPI_Send(&buf6, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_INT'\n\n  long double _Complex buf7;\n  MPI_Send(&buf7, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long double _Complex' does not match the MPI datatype 'MPI_INT'\n\n  std::complex<float> buf8;\n  MPI_Send(&buf8, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<float>' does not match the MPI datatype 'MPI_INT'\n}\n\nvoid longNegativeTest() {\n  char buf;\n  MPI_Send(&buf, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'char' does not match the MPI datatype 'MPI_LONG'\n\n  unsigned buf2;\n  MPI_Send(&buf2, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned int' does not match the MPI datatype 'MPI_LONG'\n\n  unsigned short buf3;\n  MPI_Send(&buf3, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned short' does not match the MPI datatype 'MPI_LONG'\n\n  unsigned long buf4;\n  MPI_Send(&buf4, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned long' does not match the MPI datatype 'MPI_LONG'\n\n  int8_t buf5;\n  MPI_Send(&buf5, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'int8_t' does not match the MPI datatype 'MPI_LONG'\n\n  uint16_t buf6;\n  MPI_Send(&buf6, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_LONG'\n\n  long double _Complex buf7;\n  MPI_Send(&buf7, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long double _Complex' does not match the MPI datatype 'MPI_LONG'\n\n  std::complex<float> buf8;\n  MPI_Send(&buf8, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<float>' does not match the MPI datatype 'MPI_LONG'\n}\n\nvoid int8_tNegativeTest() {\n  char buf;\n  MPI_Send(&buf, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'char' does not match the MPI datatype 'MPI_INT8_T'\n\n  unsigned buf2;\n  MPI_Send(&buf2, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned int' does not match the MPI datatype 'MPI_INT8_T'\n\n  short buf3;\n  MPI_Send(&buf3, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'short' does not match the MPI datatype 'MPI_INT8_T'\n\n  unsigned long buf4;\n  MPI_Send(&buf4, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned long' does not match the MPI datatype 'MPI_INT8_T'\n\n  uint8_t buf5;\n  MPI_Send(&buf5, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint8_t' does not match the MPI datatype 'MPI_INT8_T'\n\n  uint16_t buf6;\n  MPI_Send(&buf6, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_INT8_T'\n\n  long double _Complex buf7;\n  MPI_Send(&buf7, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'long double _Complex' does not match the MPI datatype 'MPI_INT8_T'\n\n  std::complex<float> buf8;\n  MPI_Send(&buf8, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<float>' does not match the MPI datatype 'MPI_INT8_T'\n}\n\nvoid complex_c_long_double_complexNegativeTest() {\n  char buf;\n  MPI_Send(&buf, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'char' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  unsigned buf2;\n  MPI_Send(&buf2, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned int' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  short buf3;\n  MPI_Send(&buf3, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'short' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  unsigned long buf4;\n  MPI_Send(&buf4, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned long' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  uint8_t buf5;\n  MPI_Send(&buf5, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint8_t' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  uint16_t buf6;\n  MPI_Send(&buf6, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  double _Complex buf7;\n  MPI_Send(&buf7, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'double _Complex' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n\n  std::complex<float> buf8;\n  MPI_Send(&buf8, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<float>' does not match the MPI datatype 'MPI_C_LONG_DOUBLE_COMPLEX'\n}\n\nvoid complex_cxx_float_complexNegativeTest() {\n  char buf;\n  MPI_Send(&buf, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'char' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  unsigned buf2;\n  MPI_Send(&buf2, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned int' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  short buf3;\n  MPI_Send(&buf3, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'short' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  unsigned long buf4;\n  MPI_Send(&buf4, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'unsigned long' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  uint8_t buf5;\n  MPI_Send(&buf5, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint8_t' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  uint16_t buf6;\n  MPI_Send(&buf6, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'uint16_t' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  double _Complex buf7;\n  MPI_Send(&buf7, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'double _Complex' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n\n  std::complex<double> buf8;\n  MPI_Send(&buf8, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n  // CHECK-MESSAGES: :[[@LINE-1]]:12: warning: buffer type 'complex<double>' does not match the MPI datatype 'MPI_CXX_FLOAT_COMPLEX'\n}\n\nvoid skippedTypesTests() {\n  // typedefs, user defined MPI and nullptr types are skipped\n  typedef char CHAR;\n  CHAR buf;\n  MPI_Send(&buf, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n\n  typedef unsigned UNSIGNED;\n  UNSIGNED buf2;\n  MPI_Send(&buf2, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n\n#define _MPI_LONG MPI_LONG\n  int buf3;\n  MPI_Send(&buf3, 1, _MPI_LONG, 0, 0, MPI_COMM_WORLD);\n\n#define _MPI_CXX_FLOAT_COMPLEX MPI_CXX_FLOAT_COMPLEX\n  short buf4;\n  MPI_Send(&buf4, 1, _MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n\n  MPI_Send(NULL, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n}\n\nvoid positiveTests() {\n  char buf;\n  MPI_Send(&buf, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n\n  int buf2;\n  MPI_Send(&buf2, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);\n\n  long buf3;\n  MPI_Send(&buf3, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);\n\n  int8_t buf4;\n  MPI_Send(&buf4, 1, MPI_INT8_T, 0, 0, MPI_COMM_WORLD);\n\n  long double _Complex buf5;\n  MPI_Send(&buf5, 1, MPI_C_LONG_DOUBLE_COMPLEX, 0, 0, MPI_COMM_WORLD);\n\n  std::complex<float> buf6;\n  MPI_Send(&buf6, 1, MPI_CXX_FLOAT_COMPLEX, 0, 0, MPI_COMM_WORLD);\n\n  uint8_t buf7;\n  MPI_Send(&buf7, 1, MPI_UINT8_T, 0, 0, MPI_COMM_WORLD);\n\n  uint16_t buf8;\n  MPI_Send(&buf8, 1, MPI_UINT16_T, 0, 0, MPI_COMM_WORLD);\n\n  // On some systems like PPC or ARM, 'char' is unsigned by default which is why\n  // distinct signedness for the buffer and MPI type is tolerated.\n  unsigned char buf9;\n  MPI_Send(&buf9, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n}"
    }
  ]
}