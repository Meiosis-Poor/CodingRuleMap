{
  "name": "VariadicFunctionDef",
  "language": "cpp",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "cpp",
  "loc": 33,
  "branches": 1,
  "apis": 11,
  "test": [
    {
      "description": null,
      "expected-problems": 2,
      "expected-linenumbers": [
        5,
        17
      ],
      "code": "\n// RUN: %check_clang_tidy %s cert-dcl50-cpp %t\n\n// Variadic function definitions are diagnosed.\nvoid f1(int, ...) {}\n// CHECK-MESSAGES: :[[@LINE-1]]:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n\n// Variadic function *declarations* are not diagnosed.\nvoid f2(int, ...); // ok\n\n// Function parameter packs are good, however.\ntemplate <typename Arg, typename... Ts>\nvoid f3(Arg F, Ts... Rest) {}\n\nstruct S {\n  void f(int, ...); // ok\n  void f1(int, ...) {}\n  // CHECK-MESSAGES: :[[@LINE-1]]:8: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead\n};\n\n// Function definitions that are extern \"C\" are good.\nextern \"C\" void f4(int, ...) {} // ok\nextern \"C\" {\n  void f5(int, ...) {} // ok\n}"
    }
  ]
}