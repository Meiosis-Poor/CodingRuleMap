{
  "name": "FinalParameters",
  "language": "java",
  "description": "<div>\n Checks that parameters for methods, constructors, catch and for-each blocks are final.\n Interface, abstract, and native methods are not checked: the final keyword\n does not make sense for interface, abstract, and native method parameters as\n there is no code that could modify the parameter.\n </div>\n\n <p>\n Rationale: Changing the value of parameters during the execution of the method's\n algorithm can be confusing and should be avoided. A great way to let the Java compiler\n prevent this coding style is to declare parameters final.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 111,
  "branches": 12,
  "apis": 25,
  "test": [
    {
      "description": "Auto test from InputFinalParameters.java",
      "expected-problems": 11,
      "expected-linenumbers": [
        25,
        40,
        45,
        55,
        71,
        77,
        94,
        97,
        112,
        116,
        119
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\nimport javax.swing.AbstractAction;\nimport javax.swing.Action;\nimport java.awt.event.ActionEvent;\nclass InputFinalParameters\n{\n    InputFinalParameters()\n    {\n    }\n    InputFinalParameters(String s) \n    {\n    }\n    InputFinalParameters(final Integer i)\n    {\n    }\n    InputFinalParameters(final @MyAnnotation33 Class<Object> i)\n    {\n    }\n    InputFinalParameters(@MyAnnotation33 Boolean i) \n    {\n    }\n    InputFinalParameters(String s, final Integer i) \n    {\n    }\n    void method()\n    {\n    }\n    void method(String s) \n    {\n    }\n    void method(final Integer i)\n    {\n    }\n    void method(@MyAnnotation33 final Object s)\n    {\n    }\n    void method(@MyAnnotation33 Class<Object> s) \n    {\n    }\n    void method(String s, final Integer i) \n    {\n    }\n    interface TestInterface\n    {\n        void method(String s);\n    }\n    void holder()\n    {\n        Action a = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e) \n                {\n                }\n                void somethingElse(@MyAnnotation33 ActionEvent e) \n                {\n                }\n            };\n        Action b = new AbstractAction()\n            {\n                public void actionPerformed(final ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 final ActionEvent e)\n                {\n                }\n            };\n    }\n    void methodA(java.lang.String aParam) { \n    }\n    void methodB(String[] args) { \n    }\n    void methodC(java.lang.String[] args) { \n    }\n    void method1()\n    {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (java.lang.NullPointerException npe) {\n            npe.getMessage();\n        }\n        catch (@MyAnnotation33 final ClassCastException e) {\n            e.getMessage();\n        }\n        catch (RuntimeException e) {\n            e.getMessage();\n        }\n        catch (@MyAnnotation33 NoClassDefFoundError e) {\n            e.getMessage();\n        }\n    }\n    native void method(int i);\n}\nabstract class AbstractClass\n{\n    public abstract void abstractMethod(int aParam);\n}\nclass Foo\n{\n    public void Bar()\n    {\n        for(String s : someExpression())\n        {\n        }\n        for(final String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 final String s : someExpression())\n        {\n        }\n    }\n    private String[] someExpression()\n    {\n        return null;\n    }\n}\n@interface MyAnnotation3 {\n}"
    },
    {
      "description": "Auto test from InputFinalParameters2.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        26,
        41,
        46
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\nimport java.awt.event.ActionEvent;\nimport javax.swing.AbstractAction;\nimport javax.swing.Action;\nclass InputFinalParameters2\n{\n    InputFinalParameters2()\n    {\n    }\n    InputFinalParameters2(String s) \n    {\n    }\n    InputFinalParameters2(final Integer i)\n    {\n    }\n    InputFinalParameters2(final @MyAnnotation33 Class<Object> i)\n    {\n    }\n    InputFinalParameters2(@MyAnnotation33 Boolean i) \n    {\n    }\n    InputFinalParameters2(String s, final Integer i) \n    {\n    }\n    void method()\n    {\n    }\n    void method(String s)\n    {\n    }\n    void method(final Integer i)\n    {\n    }\n    void method(@MyAnnotation33 final Object s)\n    {\n    }\n    void method(@MyAnnotation33 Class<Object> s)\n    {\n    }\n    void method(String s, final Integer i)\n    {\n    }\n    interface TestInterface\n    {\n        void method(String s);\n    }\n    void holder()\n    {\n        Action a = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 ActionEvent e)\n                {\n                }\n            };\n        Action b = new AbstractAction()\n            {\n                public void actionPerformed(final ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 final ActionEvent e)\n                {\n                }\n            };\n    }\n    void methodA(String aParam) {\n    }\n    void methodB(String[] args) {\n    }\n    void methodC(String[] args) {\n    }\n    void method1()\n    {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (NullPointerException npe) {\n            npe.getMessage();\n        }\n        catch (@MyAnnotation32 final ClassCastException e) {\n            e.getMessage();\n        }\n        catch (RuntimeException e) {\n            e.getMessage();\n        }\n        catch (@MyAnnotation32 NoClassDefFoundError e) {\n            e.getMessage();\n        }\n    }\n    native void method(int i);\n}\nabstract class AbstractClass2\n{\n    public abstract void abstractMethod(int aParam);\n}\nclass Foo2\n{\n    public void Bar()\n    {\n        for(String s : someExpression())\n        {\n        }\n        for(final String s : someExpression())\n        {\n        }\n        for(@MyAnnotation32 String s : someExpression())\n        {\n        }\n        for(@MyAnnotation32 final String s : someExpression())\n        {\n        }\n    }\n    private String[] someExpression()\n    {\n        return null;\n    }\n}\n@interface MyAnnotation32 {\n}"
    },
    {
      "description": "Auto test from InputFinalParameters3.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        56,
        72,
        78,
        95,
        98,
        113,
        117,
        120
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\nimport java.awt.event.ActionEvent;\nimport javax.swing.AbstractAction;\nimport javax.swing.Action;\nclass InputFinalParameters3\n{\n    InputFinalParameters3()\n    {\n    }\n    InputFinalParameters3(String s)\n    {\n    }\n    InputFinalParameters3(final Integer i)\n    {\n    }\n    InputFinalParameters3(final @MyAnnotation33 Class<Object> i)\n    {\n    }\n    InputFinalParameters3(@MyAnnotation33 Boolean i)\n    {\n    }\n    InputFinalParameters3(String s, final Integer i)\n    {\n    }\n    void method()\n    {\n    }\n    void method(String s) \n    {\n    }\n    void method(final Integer i)\n    {\n    }\n    void method(@MyAnnotation33 final Object s)\n    {\n    }\n    void method(@MyAnnotation33 Class<Object> s) \n    {\n    }\n    void method(String s, final Integer i) \n    {\n    }\n    interface TestInterface\n    {\n        void method(String s);\n    }\n    void holder()\n    {\n        Action a = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e) \n                {\n                }\n                void somethingElse(@MyAnnotation33 ActionEvent e) \n                {\n                }\n            };\n        Action b = new AbstractAction()\n            {\n                public void actionPerformed(final ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 final ActionEvent e)\n                {\n                }\n            };\n    }\n    void methodA(String aParam) { \n    }\n    void methodB(String[] args) { \n    }\n    void methodC(String[] args) { \n    }\n    void method1()\n    {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (NullPointerException npe) {\n            npe.getMessage();\n        }\n        catch (@MyAnnotation33 final ClassCastException e) {\n            e.getMessage();\n        }\n        catch (RuntimeException e) {\n            e.getMessage();\n        }\n        catch (@MyAnnotation33 NoClassDefFoundError e) {\n            e.getMessage();\n        }\n    }\n    native void method(int i);\n}\nabstract class AbstractClass3\n{\n    public abstract void abstractMethod(int aParam);\n}\nclass Foo3\n{\n    public void Bar()\n    {\n        for(String s : someExpression())\n        {\n        }\n        for(final String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 final String s : someExpression())\n        {\n        }\n    }\n    private String[] someExpression()\n    {\n        return null;\n    }\n}\n@interface MyAnnotation33 {\n}"
    },
    {
      "description": "Auto test from InputFinalParameters4.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        130,
        136,
        139
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\nimport java.awt.event.ActionEvent;\nimport javax.swing.AbstractAction;\nimport javax.swing.Action;\nclass InputFinalParameters4\n{\n    InputFinalParameters4()\n    {\n    }\n    InputFinalParameters4(String s)\n    {\n    }\n    InputFinalParameters4(final Integer i)\n    {\n    }\n    InputFinalParameters4(final @MyAnnotation33 Class<Object> i)\n    {\n    }\n    InputFinalParameters4(@MyAnnotation33 Boolean i)\n    {\n    }\n    InputFinalParameters4(String s, final Integer i)\n    {\n    }\n    void method()\n    {\n    }\n    void method(String s)\n    {\n    }\n    void method(final Integer i)\n    {\n    }\n    void method(@MyAnnotation33 final Object s)\n    {\n    }\n    void method(@MyAnnotation33 Class<Object> s)\n    {\n    }\n    void method(String s, final Integer i)\n    {\n    }\n    interface TestInterface\n    {\n        void method(String s);\n    }\n    void holder()\n    {\n        Action a = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 ActionEvent e)\n                {\n                }\n            };\n        Action b = new AbstractAction()\n            {\n                public void actionPerformed(final ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 final ActionEvent e)\n                {\n                }\n            };\n    }\n    void methodA(String aParam) {\n    }\n    void methodB(String[] args) {\n    }\n    void methodC(String[] args) {\n    }\n    void method1()\n    {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (NullPointerException npe) { \n            npe.getMessage();\n        }\n        catch (@MyAnnotation33 final ClassCastException e) {\n            e.getMessage();\n        }\n        catch (RuntimeException e) { \n            e.getMessage();\n        }\n        catch (@MyAnnotation33 NoClassDefFoundError e) { \n            e.getMessage();\n        }\n    }\n    native void method(int i);\n}\nabstract class AbstractClass4\n{\n    public abstract void abstractMethod(int aParam);\n}\nclass Foo4\n{\n    public void Bar()\n    {\n        for(String s : someExpression())\n        {\n        }\n        for(final String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 final String s : someExpression())\n        {\n        }\n    }\n    private String[] someExpression()\n    {\n        return null;\n    }\n}\n@interface MyAnnotation34 {\n}"
    },
    {
      "description": "Auto test from InputFinalParameters5.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        157,
        165
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\nimport java.awt.event.ActionEvent;\nimport javax.swing.AbstractAction;\nimport javax.swing.Action;\nclass InputFinalParameters5\n{\n    InputFinalParameters5()\n    {\n    }\n    InputFinalParameters5(String s)\n    {\n    }\n    InputFinalParameters5(final Integer i)\n    {\n    }\n    InputFinalParameters5(final @MyAnnotation33 Class<Object> i)\n    {\n    }\n    InputFinalParameters5(@MyAnnotation33 Boolean i)\n    {\n    }\n    InputFinalParameters5(String s, final Integer i)\n    {\n    }\n    void method()\n    {\n    }\n    void method(String s)\n    {\n    }\n    void method(final Integer i)\n    {\n    }\n    void method(@MyAnnotation33 final Object s)\n    {\n    }\n    void method(@MyAnnotation33 Class<Object> s)\n    {\n    }\n    void method(String s, final Integer i)\n    {\n    }\n    interface TestInterface\n    {\n        void method(String s);\n    }\n    void holder()\n    {\n        Action a = new AbstractAction()\n            {\n                public void actionPerformed(ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 ActionEvent e)\n                {\n                }\n            };\n        Action b = new AbstractAction()\n            {\n                public void actionPerformed(final ActionEvent e)\n                {\n                }\n                void somethingElse(@MyAnnotation33 final ActionEvent e)\n                {\n                }\n            };\n    }\n    void methodA(String aParam) {\n    }\n    void methodB(String[] args) {\n    }\n    void methodC(String[] args) {\n    }\n    void method1()\n    {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (NullPointerException npe) {\n            npe.getMessage();\n        }\n        catch (@MyAnnotation33 final ClassCastException e) {\n            e.getMessage();\n        }\n        catch (RuntimeException e) {\n            e.getMessage();\n        }\n        catch (@MyAnnotation33 NoClassDefFoundError e) {\n            e.getMessage();\n        }\n    }\n    native void method(int i);\n}\nabstract class AbstractClass5\n{\n    public abstract void abstractMethod(int aParam);\n}\nclass Foo5\n{\n    public void Bar()\n    {\n        for(String s : someExpression()) \n        {\n        }\n        for(final String s : someExpression())\n        {\n        }\n        for(@MyAnnotation33 String s : someExpression()) \n        {\n        }\n        for(@MyAnnotation33 final String s : someExpression())\n        {\n        }\n    }\n    private String[] someExpression()\n    {\n        return null;\n    }\n}\n@interface MyAnnotation35 {\n}"
    },
    {
      "description": "Auto test from InputFinalParametersPrimitiveTypes.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        14,
        16,
        20
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\npublic class InputFinalParametersPrimitiveTypes\n{\n    void foo(int i) {} \n    void foo1(int i, String k, float s) {}  \n    void foo2(String s, Object o, long l) {}\n    void foo3(int[] array) {}  \n    void foo4(int i, float x, int[] s) {}  \n    void foo5(int x, long[] l, String s) {}\n}"
    },
    {
      "description": "Auto test from InputFinalParametersPrimitiveTypes2.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        13,
        20
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.finalparameters;\npublic class InputFinalParametersPrimitiveTypes2\n{\n    void foo(int i) {}  \n    void foo1(int i, String k, float s) {}\n    void foo2(String s, Object o, long l) {}\n    void foo3(int[] array) {} \n    void foo4(int i, float x, int[] s) {}\n    void foo5(int x, long[] l, String s) {}\n}"
    }
  ]
}