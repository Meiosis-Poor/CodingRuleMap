{
  "name": "Translation",
  "language": "java",
  "description": "<div>\n Ensures the correct translation of code by checking property files for consistency\n regarding their keys. Two property files describing one and the same context\n are consistent if they contain the same keys. TranslationCheck also can check\n an existence of required translations which must exist in project, if\n {@code requiredTranslations} option is used.\n </div>\n\n <p>\n Language code for the property {@code requiredTranslations} is composed of\n the lowercase, two-letter codes as defined by\n <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">ISO 639-1</a>.\n Default value is empty String Set which means that only the existence of default\n translation is checked. Note, if you specify language codes (or just one\n language code) of required translations the check will also check for existence\n of default translation files in project.\n </p>\n\n <p>\n Note: If your project uses preprocessed translation files and the original files do not have the\n {@code properties} extension, you can specify additional file extensions\n via the {@code fileExtensions} property.\n </p>\n\n <p>\n Attention: the check will perform the validation of ISO codes if the option\n is used. So, if you specify, for example, \"mm\" for language code,\n TranslationCheck will rise violation that the language code is incorrect.\n </p>\n\n <p>\n Attention: this Check could produce false-positives if it is used with\n <a href=\"https://checkstyle.org/config.html#Checker\">Checker</a> that use cache\n (property \"cacheFile\") This is known design problem, will be addressed at\n <a href=\"https://github.com/checkstyle/checkstyle/issues/3539\">issue</a>.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 314,
  "branches": 37,
  "apis": 84,
  "test": []
}