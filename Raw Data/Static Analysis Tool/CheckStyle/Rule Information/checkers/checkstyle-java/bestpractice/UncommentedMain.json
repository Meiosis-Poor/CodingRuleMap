{
  "name": "UncommentedMain",
  "language": "java",
  "description": "<div>\n Detects uncommented {@code main} methods.\n </div>\n\n <p>\n Rationale: A {@code main} method is often used for debugging purposes.\n When debugging is finished, developers often forget to remove the method,\n which changes the API and increases the size of the resulting class or JAR file.\n Except for the real program entry points, all {@code main} methods\n should be removed or commented out of the sources.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 130,
  "branches": 15,
  "apis": 39,
  "test": [
    {
      "description": "Auto test from InputUncommentedMain.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        15,
        24,
        33,
        97
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic class InputUncommentedMain\n{\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"InputUncommentedMain.main()\");\n    }\n}\nclass Main1\n{\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"Main.main()\");\n    }\n}\nclass UncommentedMainTest1\n{\n    public static void main(java.lang.String[] args) \n    {\n        System.identityHashCode(\"test1.main()\");\n    }\n}\nclass UncommentedMainTest2\n{\n    public static void main(int args)\n    {\n        System.identityHashCode(\"test2.main()\");\n    }\n}\nclass UncommentedMainTest3\n{\n    static void main(String[] args)\n    {\n        System.identityHashCode(\"test3.main()\");\n    }\n}\nclass UncommentedMainTest4\n{\n    public void main(String[] args)\n    {\n        System.identityHashCode(\"test4.main()\");\n    }\n}\nclass UncommentedMainTest5\n{\n    public static int main(String[] args)\n    {\n        System.identityHashCode(\"test5.main()\");\n        return 1;\n    }\n}\nclass UncommentedMainTest6\n{\n    public static void main(String[] args, int param)\n    {\n        System.identityHashCode(\"test6.main()\");\n    }\n}\nclass UncommentedMainTest7\n{\n    public static void main()\n    {\n        System.identityHashCode(\"test7.main()\");\n    }\n}\nclass UncommentedMainTest8\n{\n    public static void main(String... args) \n    {\n        System.identityHashCode(\"test8.main()\");\n    }\n}\nclass UncommentedMainTest9\n{\n    public static void main(String args)\n    {\n        System.identityHashCode(\"test9.main()\");\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMain5.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        18
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic class InputUncommentedMain5\n{\n    public static void main(String[] args)\n    {\n        System.identityHashCode(\"InputUncommentedMain.main()\");\n    }\n}\nclass PC {\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"PC.main()\");\n    }\n    private class PC2 {\n        public void main(String[] args)\n        {\n            System.identityHashCode(\"PC.main()\");\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMain6.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        15,
        33,
        97
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic class InputUncommentedMain6\n{\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"InputUncommentedMain.main()\");\n    }\n}\nclass Main2\n{\n    public static void main(String[] args)\n    {\n        System.identityHashCode(\"Main.main()\");\n    }\n}\nclass UncommentedMainTest61\n{\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"test1.main()\");\n    }\n}\nclass UncommentedMainTest62\n{\n    public static void main(int args)\n    {\n        System.identityHashCode(\"test2.main()\");\n    }\n}\nclass UncommentedMainTest63\n{\n    static void main(String[] args)\n    {\n        System.identityHashCode(\"test3.main()\");\n    }\n}\nclass UncommentedMainTest64\n{\n    public void main(String[] args)\n    {\n        System.identityHashCode(\"test4.main()\");\n    }\n}\nclass UncommentedMainTest65\n{\n    public static int main(String[] args)\n    {\n        System.identityHashCode(\"test5.main()\");\n        return 1;\n    }\n}\nclass UncommentedMainTest66\n{\n    public static void main(String[] args, int param)\n    {\n        System.identityHashCode(\"test6.main()\");\n    }\n}\nclass UncommentedMainTest67\n{\n    public static void main()\n    {\n        System.identityHashCode(\"test7.main()\");\n    }\n}\nclass UncommentedMainTest68\n{\n    public static void main(String... args) \n    {\n        System.identityHashCode(\"test8.main()\");\n    }\n}\nclass UncommentedMainTest69\n{\n    public static void main(String args)\n    {\n        System.identityHashCode(\"test9.main()\");\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMainBeginTree2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic record InputUncommentedMainBeginTree2(Integer x) {\n    class Test1 {\n        class Test2 {\n            public static void main(String[] args) {\n            }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMainBeginTreePackage2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "public class InputUncommentedMainBeginTreePackage2 {\n    public static void main(String[] args)\n    {\n        System.identityHashCode(\"InputUncommentedMain.main()\");\n    }\n}\nclass PC2 {\n    public static void main(String[] args) \n    {\n        System.identityHashCode(\"PC.main()\");\n    }\n    private class PC3 {\n        public void main(String[] args)\n        {\n            System.identityHashCode(\"PC.main()\");\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMainRecords.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        11,
        19,
        24
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic record InputUncommentedMainRecords(Integer x) {\n    public static void main(String... args) { \n        System.out.println(\"no comments here!\");\n    }\n    record InnerRecord(String... args) {\n        public static void main(String... args) { \n            System.out.println(\"no comments here!\");\n        }\n        record InnerRecordCeption(int y, int x) {\n            public static void main(String... args) { \n                System.out.println(\"no comments here either!\");\n            }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputUncommentedMainRecords2.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        11,
        19
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.uncommentedmain;\npublic record InputUncommentedMainRecords2(Integer x) {\n    public static void main(String... args) { \n        System.out.println(\"no comments here!\");\n    }\n    record Check1(int j){\n        record Check2(int k) {\n            class Check3{\n                class Check4 {\n                    record Check5(String K) { \n                       public static void main(String[] args) {\n                            System.out.println(\"I am violated\");\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    }
  ]
}