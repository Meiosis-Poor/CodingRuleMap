{
  "name": "CommentsIndentation",
  "language": "java",
  "description": "<div>\n Controls the indentation between comments and surrounding code.\n Comments are indented at the same level as the surrounding code.\n Detailed info about such convention can be found\n <a href=\"https://checkstyle.org/styleguides/google-java-style-20220203/javaguide.html#s4.8.6.1-block-comment-style\">\n here</a>\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 510,
  "branches": 69,
  "apis": 76,
  "test": [
    {
      "description": "Auto test from InputCommentsIndentationAfterAnnotation.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        20,
        24,
        42,
        47,
        56
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\n@AfterAnnotationCommentsAnnotation1\npublic class InputCommentsIndentationAfterAnnotation {\n    @AfterAnnotationCommentsAnnotation1\n    public int input;\n}\n@AfterAnnotationCommentsAnnotation1\nclass InputCommentsIndentationAfterAnnotation1 {\n    @AfterAnnotationCommentsAnnotation1\n    public int input;\n}\n@AfterAnnotationCommentsAnnotation1\n@AfterAnnotationCommentsAnnotation2\nclass InputCommentsIndentationAfterAnnotation3 {\n    @AfterAnnotationCommentsAnnotation1\n    @AfterAnnotationCommentsAnnotation2\n    public int input;\n}\n@AfterAnnotationCommentsAnnotation1\n@AfterAnnotationCommentsAnnotation2\nclass InputCommentsIndentationAfterAnnotation4 {\n    @AfterAnnotationCommentsAnnotation1\n    @AfterAnnotationCommentsAnnotation2\n    public int input;\n}\nclass InputCommentsIndentationAfterAnnotation5 {\n    @AfterAnnotationCommentsAnnotation1\n    @AfterAnnotationCommentsAnnotation2\n    public int input;\n}\n@interface AfterAnnotationCommentsAnnotation1 {}\n@interface AfterAnnotationCommentsAnnotation2 {}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCheckWithEmoji.java",
      "expected-problems": 10,
      "expected-linenumbers": [
        13,
        24,
        26,
        45,
        69,
        73,
        84,
        96,
        99,
        102
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCheckWithEmoji {\n    public void myMethod() {\n        String breaks = \"J\"\n                + \"🥳\"\n                + \"🥳VASd🥳\"\n                + \"A\" + \"🥳\"\n                ;\n    }\n    public void test() {\n        String a = \"🥳\";\n    }\n    String s = String.format(java.util.Locale.ENGLISH, \" 🥳 🥳 🥳asdda   🥳\"\n                    + \"🎄\" + \"🎄  🎄🎄       \",\n            \" \");\n    public void test2() {\n        String a = \"🥳\";\n        switch (a) {\n            case \"1\":\n                break;\n            case \"2\":\n            default: a = \"🎄\".\n                        toString();\n        }\n    }\n    private void test3() { \n        if (\"🎄\".equals(\"🎄\")) \n        {\n        }\n        if (\"🎄\".equals(\"🎄sad\")) { \n        }\n    }\n    private void test4() {\n        String a = \"🎄\";\n        a.toString()\n                .toLowerCase()\n                .charAt(0);\n        try {\n            assert a.equals(\"🎄\") == true;\n        }\n        catch (Exception ex) {\n        } \n        finally {\n        }\n    }\n    public void test5() {\n        String someStr = \"🎄🎄😅\";\n    }\n    private void test6() {\n        if (true) {\n            String k = \"🎄🎄😅\";\n            int b = Integer.parseInt(\"🎄🎄😅\");\n            double d; \n            String x = \"😁mkuhyg\";\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockFive.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        59,
        75,
        85,
        93,
        101,
        109
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockFive {\n    void foo61() {\n        new InputCommentsIndentationCommentIsAtTheEndOfBlockOne().foo1();\n    }\n    void foo62() {\n        if (true) {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        else {\n        }\n    }\n    void foo63() {\n        try {\n            String.CASE_INSENSITIVE_ORDER.equals(\"\");\n        }\n        catch (Exception e){\n        }\n    }\n    void foo64()  {\n        new InputCommentsIndentationCommentIsAtTheEndOfBlockOne().foo1();\n    }\n    void foo65() {\n        int i = 1\n                + 1\n                + 1;\n    }\n    void foo66()  {\n        if (true) {\n            getClass();\n        }\n    }\n    void foo67()  {\n        try {\n            getClass();\n        } finally {\n            hashCode();\n        }\n    }\n    void foo68()  {\n        for (int i = 0; i < 0; i++) {\n            getClass();\n        }\n    }\n    void foo69()  {\n        while (true) {\n            getClass();\n        }\n    }\n    void foo70()  {\n        do {\n            getClass();\n        } while (true);\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockFour.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        21,
        25,
        38,
        59,
        84,
        88,
        98,
        102
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockFour {\n    public void foo45() {\n        int ar = 5;\n        ar = 6;\n    }\n    public void foo46() {\n    }\n    public void foo47() {\n        int a = 5;\n    }\n    public void foo48() {\n        int a = 5;\n    }\n    public void foo49() {\n    }\n    public void foo50() {\n        return;\n    }\n    public String foo51() {\n        return String\n                .valueOf(\"11\"\n                );\n    }\n    public String foo52() {\n        return String\n                .valueOf(\"11\"\n                );\n    }\n    void foo53() {\n        new Object()\n                .toString();\n    }\n    void foo54() {\n        new Object()\n                .toString();\n    }\n    void foo55() {\n        new Object()\n            .toString();\n    }\n    void foo56() {\n        new Object().toString();\n    }\n    void foo57() {\n        new Object().toString();\n    }\n    void foo58() {\n          new InputCommentsIndentationCommentIsAtTheEndOfBlockOne().foo1();\n    }\n    void foo59() {\n        new InputCommentsIndentationCommentIsAtTheEndOfBlockOne().foo1();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockOne.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        24,
        38,
        43,
        53,
        55,
        60,
        80,
        94,
        106
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockOne {\n    public void foo1() {\n        foo2();\n    }\n    public void foo2() {\n        foo3();\n    }\n    public void foo3() {\n        foo2();\n    }\n    public void foo4() {\n        foooooooooooooooooooooooooooooooooooooooooo();\n    }\n    public void foooooooooooooooooooooooooooooooooooooooooo() { }\n    public void foo7() {\n        int a = 0;\n    }\n    public void foo8() {}\n    public class TestClass {\n        public void test() {\n            int a = 0;\n        }\n    }\n    public void foo9() {\n        this.foo1();\n    }\n    public void foo11() {\n        String\n                .valueOf(new Integer(0))\n                .trim()\n                .length();\n    }\n    public void foo12() {\n        String\n            .valueOf(new Integer(0))\n            .trim()\n            .length();\n    }\n    public void foo13() {\n        String.valueOf(new Integer(0))\n                .trim()\n                .length();\n    }\n    public void foo14() {\n        String.valueOf(new Integer(0))\n                .trim()\n                .length();\n    }\n    public void foo15() {\n        String\n                .valueOf(new Integer(0));\n    }\n    public void foo16() {\n        String\n            .valueOf(new Integer(0));\n    }\n    public void foo17() {\n        String\n                .valueOf(new Integer(0))\n                .trim()\n                .length();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockSix.java",
      "expected-problems": 10,
      "expected-linenumbers": [
        24,
        30,
        36,
        43,
        50,
        55,
        60,
        66,
        79,
        93
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockSix {\n    void foo71() {\n        switch(\"\") {\n            case \"!\":\n                break;\n            default:\n                break;\n        }\n    }\n    void foo72() {\n        int u = 1;\n    }\n    void foo73() {\n        class Foo { }\n    }\n    interface Bar1 {\n        interface NestedBar { }\n    }\n    static class Bar2 {\n        enum Foo {\n            A;\n        }\n    }\n    static class Bar3 {\n        @interface Foo { }\n    }\n    void foo74() {\n        getClass(); \n    }\n    void foo75() {\n        getClass();\n    }\n    void InputCommentsIndentationCommentIsAtTheEndOfBlock(String s) {\n        assert(s == null ||\n                s != null);\n    }\n    int foo76() {\n        return 0;\n    }\n    void foo77() {\n        try {\n        }\n    }\n    void foo78() {\n        new Object()\n                .toString();\n    }\n    void foo79() {\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockThree.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        20,
        34,
        40,
        55,
        62,
        72,
        78,
        84
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockThree {\n    public void foo30() {\n        int a = 5;\n    }\n    public void foo31() {\n        String s = new String (\"A\"\n                + \"B\"\n                + \"C\");\n    }\n    public void foo32() {\n        String s = new String (\"A\"\n            + \"B\"\n            + \"C\");\n    }\n    public void foo33() {\n        new InputCommentsIndentationCommentIsAtTheEndOfBlockTwo().foo22();\n    }\n    public void foo34() throws Exception {\n        throw new Exception(\"\",\n                new Exception()\n        );\n    }\n    public void foo35() throws Exception {\n        throw new Exception(\"\",\n                new Exception()\n        );\n    }\n    public void foo36() throws Exception {\n        throw new Exception(\"\",\n                new Exception()\n        );\n    }\n    public void foo37() throws Exception {\n        throw new Exception(\"\", new Exception());\n    }\n    public void foo38() throws Exception {\n        throw new Exception(\"\", new Exception());\n    }\n    public void foo39() throws Exception {\n        throw new Exception(\"\",\n                new Exception());\n    }\n    public void foo40() throws Exception {\n        int a = 88;\n        throw new Exception(\"\", new Exception());\n    }\n    public void foo41() throws Exception {\n        int a = 88;\n        throw new Exception(\"\", new Exception());\n    }\n    public void foo42() {\n        int a = 5;\n        if (a == 5) {\n            int b;\n        } else if (a ==6) {\n        }\n    }\n    public void foo43() {\n        try {\n            int a;\n        } catch (Exception e) {\n        }\n    }\n    public void foo44() {\n        int ar = 5;\n        ar = 6;\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentIsAtTheEndOfBlockTwo.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        21,
        44,
        70,
        80,
        92,
        114
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentIsAtTheEndOfBlockTwo {\n    public void foo18() {\n        String\n            .valueOf(new Integer(0))\n            .trim()\n            .length();\n    }\n    public void foo19() {\n        (new Thread(new Runnable() {\n            @Override\n            public void run() {\n            }\n        })).\n                run();\n    }\n    public void foo20() {\n        (new Thread(new Runnable() {\n            @Override\n            public void run() {\n            }\n        })).\n            run();\n    }\n    public void foo21() {\n        int[] array = new int[5];\n        java.util.List<String> expected = new java.util.ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            org.junit.Assert.assertEquals(expected.get(i), array[i]);\n        }\n        String s = String.format(java.util.Locale.ENGLISH, \"The array element \"\n                        + \"immediately following the end of the collection should be nulled\",\n                array[1]);\n    }\n    public void foo22() {\n        int[] array = new int[5];\n        java.util.List<String> expected = new java.util.ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            org.junit.Assert.assertEquals(expected.get(i), array[i]);\n        }\n        String s = String.format(java.util.Locale.ENGLISH, \"The array element \"\n                        + \"immediately following the end of the collection should be nulled\",\n                array[1]);\n    }\n    public void foo23() {\n        new Object();\n    }\n    public void foo24() {\n        new Object();\n    }\n    public String foo25() {\n        return String.format(java.util.Locale.ENGLISH, \"%d\",\n                1);\n    }\n    public String foo26() {\n        return String.format(java.util.Locale.ENGLISH, \"%d\",\n                1);\n    }\n    public void foo27() {\n        new InputCommentsIndentationCommentIsAtTheEndOfBlockOne().foo17();\n    }\n    public String foo28() {\n        int a = 5;\n        return String.format(java.util.Locale.ENGLISH, \"%d\",\n                1);\n    }\n    public String foo29() {\n        int a = 5;\n        return String.format(java.util.Locale.ENGLISH, \"%d\",\n            1);\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationCommentsAfterMethodCall.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        23
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationCommentsAfterMethodCall {\n    public static void main() {\n        InputCommentsIndentationCommentsAfterMethodCall.flatMap(4,5)\n           .flatMap()\n           .flatMap();\n    }\n    public static void main1() {\n        InputCommentsIndentationCommentsAfterMethodCall.flatMap(4,5)\n                .flatMap()\n                .flatMap();\n    }\n    public static InputCommentsIndentationCommentsAfterMethodCall flatMap(int i, int h) {\n        return new InputCommentsIndentationCommentsAfterMethodCall();\n    }\n    public static InputCommentsIndentationCommentsAfterMethodCall flatMap() {\n        return new InputCommentsIndentationCommentsAfterMethodCall();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInEmptyBlock.java",
      "expected-problems": 7,
      "expected-linenumbers": [
        15,
        15,
        39,
        63,
        77,
        109,
        112
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInEmptyBlock {\n    private void foo1() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || ( a ==1\n                               && b == 1)   ) {\n        }\n    }\n    private void foo2() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || ( a ==1\n            && b == 1)   ) {\n        }\n    }\n    private void foo3() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || (a == 1\n            && b == 1)) {\n        }\n    }\n    @SuppressWarnings(\"unused\") \n    private static void foo4() { \n        if (true) \n        {\n        }\n        if (true) { \n        }\n    }\n    @SuppressWarnings(\"unused\") \n    private static void foo5() { \n        if (true) \n        {\n        }\n        if (true) { \n        }\n    }\n    public void foo6() {\n        try {\n        } catch (Exception e) {\n        }\n    }\n    public void foo7() {\n        try {\n        } catch (Exception e) {\n        }\n    }\n    private static class MyClass extends Object {\n    }\n    private static class MyClass1 extends Object {\n    }\n    public void foo8() {\n        String[] array1 = {\n        };\n        String[] array2 = {\n        };\n        String[] array3 = {\n        };\n        String[] array4 = {\n        };\n        String[] array5 = {\n        };\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInMultiblockStructuresOne.java",
      "expected-problems": 15,
      "expected-linenumbers": [
        18,
        24,
        29,
        39,
        45,
        50,
        60,
        66,
        71,
        81,
        87,
        92,
        102,
        108,
        113
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInMultiblockStructuresOne {\n    void foo() {\n        if (true) {\n            assert true;\n        } else {}\n        if (true) {\n            assert true;\n        }\n        else {}\n        if (true) {\n            assert true;\n        } else {}\n        if (true) {\n            assert true;\n        } else {}\n        try {\n            assert true;\n        } catch (Exception ex) {}\n        try {\n            assert true;\n        }\n        catch (Exception ex) {}\n        try {\n            assert true;\n        } catch (Exception ex) {}\n        try {\n            assert true;\n        } catch (Exception ex) {}\n        try {\n            assert true;\n        } finally {}\n        try {\n            assert true;\n        }\n        finally {}\n        try {\n            assert true;\n        } finally {}\n        try {\n            assert true;\n        } finally {}\n        try {} catch (Exception ex) {\n            assert true;\n        } finally {}\n        try {} catch (Exception ex) {\n            assert true;\n        }\n        finally {}\n        try {} catch (Exception ex) {\n            assert true;\n        } finally {}\n        try {} catch (Exception ex) {\n            assert true;\n        } finally {}\n        try {} catch (ClassCastException ex) {\n            assert true;\n        } catch (Exception ex) {}\n        try {} catch (ClassCastException ex) {\n            assert true;\n        }\n        catch (Exception ex) {}\n        try {} catch (ClassCastException ex) {\n            assert true;\n        } catch (Exception ex) {}\n        try {} catch (ClassCastException ex) {\n            assert true;\n        } catch (Exception ex) {}\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInMultiblockStructuresTwo.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        19,
        25,
        30
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInMultiblockStructuresTwo {\n    void foo() {\n        do {\n            assert true;\n        } while (false);\n        do {\n            assert true;\n        }\n        while (false);\n        do {\n            assert true;\n        } while (false);\n        do {\n            assert true;\n        } while (false);\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInSwitchBlockFour.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        17,
        33,
        38,
        68
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInSwitchBlockFour {\n    private static void foo1() {\n        if (true) {\n            switch(1) {\n                case 0:\n                case 1:\n                    int b = 10;\n                default:\n            }\n        }\n    }\n    public void foo13() {\n        int a = 5;\n        switch (a) {\n            case 1:\n            case 2:\n                hashCode();\n            case 3: \n                hashCode();\n            case 4: \n                if (true) {\n                }\n                else {\n                }\n            case 5:\n                String s = \"\"\n                    + 1\n                    + \"123\";\n                break;\n            case 6:\n                String q = \"\"\n                    + 1\n                    + \"123\";\n            case 7:\n                break;\n        }\n    }\n    public void foo14() {\n        int a = 1;\n        switch (a) {\n            case 1:\n            default:\n        }\n    }\n    public void foo15() {\n        int a = 1;\n        switch (a) {\n            case 1:\n            default:\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInSwitchBlockOne.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        25,
        32,
        38,
        55,
        62,
        66,
        75,
        95
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInSwitchBlockOne {\n    private static void fooSwitch() {\n        switch(\"\") {\n            case \"0\": \n            case \"1\":\n                foo1();\n                break;\n            case \"2\":\n                foo1();\n                break;\n            case \"3\":\n                foo1();\n                break;\n            case \"5\":\n                foo1();\n            case \"6\":\n                int k = 7;\n            case \"7\":\n                if (true) {}\n            case \"8\":\n                break;\n            case \"9\":\n                foo1();\n            case \"10\": {\n                if (true) {}\n            }\n            case \"11\": {\n            }\n            case \"28\": {\n            }\n            case \"12\": {\n                int i;\n            }\n            case \"13\": {\n            }\n            case \"14\": {\n            }\n            case \"15\": {\n                foo1();\n            }\n            case \"16\": {\n                int a;\n            }\n            case \"17\": {\n                int a;\n            }\n                case \"18\": { System.lineSeparator();\n                }   \n            case \"19\":\n            case \"20\":\n            case \"21\":\n            default:\n                break;\n        }\n    }\n    private static void foo1() {\n        if (true) {\n            switch(1) {\n                case 0:\n                case 1:\n                    int b = 10;\n                default:\n            }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInSwitchBlockThree.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        17,
        44,
        47,
        47,
        47,
        73
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInSwitchBlockThree {\n    private static void foo1() {\n        if (true) {\n            switch(1) {\n                case 0:\n                case 1:\n                    int b = 10;\n                default:\n            }\n        }\n    }\n    public void foo7() {\n        int a = 2;\n        String s = \"\";\n        switch (a) {\n            case 1:\n            case 2:\n                foo1();\n            case 3:\n            case 4:\n            case 5:\n                s.toString().toString().toString();\n            default:\n        }\n    }\n    public void foo8() {\n        int a = 2;\n        String s = \"\";\n        switch (a) {\n            case 1:\n            case 2:\n                foo1();\n            case 3:\n                s.toString().toString().toString();\n            case 4:\n            default:\n        }\n    }\n    public void foo9() {\n        int a = 5;\n        switch (a) {\n            case 1:\n            case 2:\n        }\n    }\n    public void foo10() {\n        int a = 5;\n        switch (a) {\n            case 1:\n            default:\n        }\n    }\n    public void foo11() {\n        int a = 5;\n        switch (a) {\n            case 1:\n            case 2:\n        }\n    }\n    public void foo12() {\n        int a = 5;\n        switch (a) {\n            case 1:\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationInSwitchBlockTwo.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        17,
        42,
        54,
        67,
        86
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationInSwitchBlockTwo {\n    private static void foo1() {\n        if (true) {\n            switch(1) {\n                case 0:\n                case 1:\n                    int b = 10;\n                default:\n            }\n        }\n    }\n    public void fooDotInCaseBlock() {\n        int i = 0;\n        String s = \"\";\n        switch (i) {\n            case -2:\n                i++;\n            case 0:\n                s.indexOf(\"ignore\");\n            case -1:\n                 s.indexOf(\"no way\");\n            case 1:\n            case 2:\n                i--;\n            case 3: { }\n        }\n        String breaks = \"\"\n            + \"</table>\"\n            + \"\"\n        ;\n    }\n    public void foo2() {\n        int a = 1;\n        switch (a) {\n            case 1:\n            default:\n        }\n    }\n    public void foo3() {\n        int a = 1;\n        switch (a) {\n            case 1:\n            default:\n        }\n    }\n    public void foo4() {\n        int a = 1;\n        switch (a) {\n            case 1:\n                int b;\n            default:\n        }\n    }\n    public void foo5() {\n        int a = 1;\n        switch (a) {\n            case 1:\n                int b;\n            default:\n        }\n    }\n    public void foo6() {\n        int a = 1;\n        switch (a) {\n            case 1:\n                int b;\n            default:\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationJavadoc.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        8,
        13,
        17,
        24
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationJavadoc {\n    int i;\n    void foo() {}\n    enum Bar {\n        A;\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationRecordsAndCompactCtors.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        14,
        25,
        29,
        36,
        41
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationRecordsAndCompactCtors {\n    public record MyRecord(int x) {\n        public void myMethod() {\n            String breaks = \"J\"\n                    + \"A\"\n                    + \"V\"\n                    + \"A\"\n                    ;\n        }\n    }\n    public record MyOtherRecord() {\n    }\n    public record myOtherOtherRecord() {\n    }\n     class\n        WrappedClass { }\n     record\n        WrappedRecord() { }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationSurroundingCode2One.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        19,
        56,
        92,
        101,
        111
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\nimport java.util.Arrays;\npublic class InputCommentsIndentationSurroundingCode2One\n{\n    private void foo1() {\n        if (true) {\n            int k = 0; \n            int b = 10;\n        }\n    }\n    private void foo2() {\n        if (true) {\n            int k = 0;\n            int b = 10;\n            double d; \n            boolean bb;\n            boolean x;\n        }\n    }\n    private void foo3() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || ( a ==1\n                                    && b == 1)   ) {\n        }\n    }\n    private static void com() {\n    }\n    private static final String[][] mergeMatrix = {\n    private void foo4() {\n        if (!Arrays.equals(new String[]{\"\"}, new String[]{\"\"})\n        }\n    }\n    private static void l() {\n    }\n    public void foid5() {\n        String s = \"\";\n        s.toString().toString().toString();\n    }\n    public void foo6() {\n        String someStr = new String();\n    }\n    public void foo7() {\n        String someStr = new String();\n    }\n    public void foo8() {\n        String s = new String(); \n        String someStr = new String();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationSurroundingCode3One.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        28,
        31,
        34,
        56
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\nimport java.util.Arrays;\npublic class InputCommentsIndentationSurroundingCode3One\n{\n    private void foo1() {\n        if (true) {\n            int k = 0; \n            int b = 10;\n        }\n    }\n    private void foo2() {\n        if (true) {\n            int k = 0;\n            int b = 10;\n            double d; \n            boolean bb;\n            boolean x;\n        }\n    }\n    private void foo3() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || ( a ==1\n                                    && b == 1)   ) {\n        }\n    }\n    private static void com() {\n    }\n    private static final String[][] mergeMatrix = {\n    private void foo4() {\n        if (!Arrays.equals(new String[]{\"\"}, new String[]{\"\"})\n        }\n    }\n    private static void l() {\n    }\n    public void foid5() {\n        String s = \"\";\n        s.toString().toString().toString();\n    }\n    public void foo6() {\n        String someStr = new String();\n    }\n    public void foo7() {\n        String someStr = new String();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationSurroundingCode3Two.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        38,
        44,
        51
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationSurroundingCode3Two {\n    public void foo8() {\n        String s = new String(); \n        String someStr = new String();\n    }\n    public String foo9(String s1, String s2, String s3) {\n        return \"\";\n    }\n    public void foo10()\n            throws Exception {\n        final String pattern = \"^foo$\";\n        final String[] expected = {\n                \"7:13: \" + foo9(\"\", \"\", \"\"),\n        };\n    }\n    public void foo11() {\n        hashCode();\n    }\n    public void foo12() {\n        hashCode();\n    }\n    public void foo13() {\n        hashCode();\n    }\n    public void foo14() {\n        hashCode();\n    }\n    public InputCommentsIndentationSurroundingCode3Two() {\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationSurroundingCodeOne.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        19,
        29,
        32,
        35,
        57,
        57,
        93,
        102
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\nimport java.util.*;\npublic class InputCommentsIndentationSurroundingCodeOne\n{\n    private void foo1() {\n        if (true) {\n            int k = 0; \n            int b = 10;\n        }\n    }\n    private void foo2() {\n        if (true) {\n            int k = 0;\n            int b = 10;\n            double d; \n            boolean bb;\n            boolean x;\n        }\n    }\n    private void foo3() {\n        int a = 5, b = 3, v = 6;\n        if (a == b\n            && v == b || ( a ==1\n                                    && b == 1)   ) {\n        }\n    }\n    private static void com() {\n    }\n    private static final String[][] mergeMatrix = {\n    private void foo4() {\n        if (!Arrays.equals(new String[]{\"\"}, new String[]{\"\"})\n        }\n    }\n    private static void l() {\n    }\n    public void foid5() {\n        String s = \"\";\n        s.toString().toString().toString();\n    }\n    public void foo6() {\n        String someStr = new String();\n    }\n    public void foo7() {\n        String someStr = new String();\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationSurroundingCodeTwo.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        16,
        40,
        46,
        53
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationSurroundingCodeTwo {\n    public void foo8() {\n        String s = new String(); \n        String someStr = new String();\n    }\n    public String foo9(String s1, String s2, String s3) {\n        return \"\";\n    }\n    public void foo10()\n            throws Exception {\n        final String pattern = \"^foo$\";\n        final String[] expected = {\n                \"7:13: \" + foo9(\"\", \"\", \"\"),\n        };\n    }\n    public void foo11() {\n        hashCode();\n    }\n    public void foo12() {\n        hashCode();\n    }\n    public void foo13() {\n        hashCode();\n    }\n    public void foo14() {\n        hashCode();\n    }\n    public InputCommentsIndentationSurroundingCodeTwo() {\n    }\n}"
    },
    {
      "description": "Auto test from InputCommentsIndentationWithInMethodCallWithSameIndent.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        22,
        29
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.indentation.commentsindentation;\npublic class InputCommentsIndentationWithInMethodCallWithSameIndent {\n    String s1 = \"ONE\", s2 = \"TWO\", s3 = \"THREE\";\n    private final boolean isEqualsOne = equals(\n        s1,\n        s2\n    );\n    private final boolean isEqualsTwo = equals(\n        s1,\n        s2\n    );\n    private final boolean isEqualsThree = equals(\n        s1,\n        s2\n    );\n    private boolean equals(String s1, String s2) {\n        return s1.equals(s2);\n    }\n}"
    }
  ]
}