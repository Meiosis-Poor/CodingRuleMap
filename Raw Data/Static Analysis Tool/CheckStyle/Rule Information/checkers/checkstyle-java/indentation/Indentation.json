{
  "name": "Indentation",
  "language": "java",
  "description": "<div>\n Checks correct indentation of Java code.\n </div>\n\n <p>\n The idea behind this is that while\n pretty printers are sometimes convenient for bulk reformats of\n legacy code, they often either aren't configurable enough or\n just can't anticipate how format should be done. Sometimes this is\n personal preference, other times it is practical experience. In any\n case, this check should just ensure that a minimal set of indentation\n rules is followed.\n </p>\n\n <p>\n Basic offset indentation is used for indentation inside code blocks.\n For any lines that span more than 1, line wrapping indentation is used for those lines\n after the first. Brace adjustment, case, and throws indentations are all used only if\n those specific identifiers start the line. If, for example, a brace is used in the\n middle of the line, its indentation will not take effect. All indentations have an\n accumulative/recursive effect when they are triggered. If during a line wrapping, another\n code block is found and it doesn't end on that same line, then the subsequent lines\n afterwards, in that new code block, are increased on top of the line wrap and any\n indentations above it.\n </p>\n\n <p>\n Example:\n </p>\n <pre>\n if ((condition1 &amp;&amp; condition2)\n         || (condition3 &amp;&amp; condition4)    // line wrap with bigger indentation\n         ||!(condition5 &amp;&amp; condition6)) { // line wrap with bigger indentation\n   field.doSomething()                    // basic offset\n       .doSomething()                     // line wrap\n       .doSomething( c -&gt; {               // line wrap\n         return c.doSome();               // basic offset\n       });\n }\n </pre>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 116,
  "branches": 7,
  "apis": 41,
  "test": []
}