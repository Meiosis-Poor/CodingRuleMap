{
  "name": "AvoidNestedBlocks",
  "language": "java",
  "description": "<div>\n Finds nested blocks (blocks that are used freely in the code).\n </div>\n\n <p>\n Rationale: Nested blocks are often leftovers from the\n debugging process, they confuse the reader.\n </p>\n\n <p>\n For example, this check finds the obsolete braces in\n </p>\n <pre>\n public void guessTheOutput()\n {\n   int whichIsWhich = 0;\n   {\n     whichIsWhich = 2;\n   }\n   System.out.println(\"value = \" + whichIsWhich);\n }\n </pre>\n\n <p>\n and debugging / refactoring leftovers such as\n </p>\n <pre>\n // if (conditionThatIsNotUsedAnyLonger)\n {\n   System.out.println(\"unconditional\");\n }\n </pre>\n\n <p>\n A case in a switch statement does not implicitly form a block.\n Thus, to be able to introduce local variables that have case scope\n it is necessary to open a nested block. This is supported, set\n the allowInSwitchCase property to true and include all statements\n of the case in the block.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 36,
  "branches": 1,
  "apis": 12,
  "test": [
    {
      "description": "Auto test from InputAvoidNestedBlocksAllowInSwitchCase.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        18,
        41,
        56
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.avoidnestedblocks;\nclass InputAvoidNestedBlocksAllowInSwitchCase\n{\n    static\n    {\n    }\n    public void method()\n    {\n        int x = 0;\n        { \n            int z = 1;\n            int y = z;\n        }\n        if (x == 1)\n        {\n            x = 2;\n        }\n        switch (x)\n        {\n            case 0:\n                x = 3;\n                break;\n            case 1:\n                { \n                    x = 1;\n                }\n                break;\n            case 2:\n                {\n                    x = 1;\n                    break;\n                }\n            case 3: \n            default:\n                System.identityHashCode(\"Hello\");\n                { \n                    x = 2;\n                }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputAvoidNestedBlocksDefault.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        22,
        45,
        51,
        60
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.avoidnestedblocks;\nclass InputAvoidNestedBlocksDefault\n{\n    static\n    {\n    }\n    public void method()\n    {\n        int x = 0;\n        { \n            int z = 1;\n            int y = z;\n        }\n        if (x == 1)\n        {\n            x = 2;\n        }\n        switch (x)\n        {\n            case 0:\n                x = 3;\n                break;\n            case 1:\n                { \n                    x = 1;\n                }\n                break;\n            case 2:\n                { \n                    x = 1;\n                    break;\n                }\n            case 3: \n            default:\n                System.identityHashCode(\"Hello\");\n                { \n                    x = 2;\n                }\n        }\n    }\n}"
    }
  ]
}