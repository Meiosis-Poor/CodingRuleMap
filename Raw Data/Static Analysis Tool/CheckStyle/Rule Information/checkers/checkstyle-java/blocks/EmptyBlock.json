{
  "name": "EmptyBlock",
  "language": "java",
  "description": "<div>\n Checks for empty blocks.\n </div>\n\n <p>\n This check does not validate sequential blocks. This check does not violate fallthrough.\n </p>\n\n <p>\n NOTE: This check processes LITERAL_CASE and LITERAL_DEFAULT separately.\n Verification empty block is done for single nearest {@code case} or {@code default}.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 149,
  "branches": 13,
  "apis": 31,
  "test": [
    {
      "description": "Auto test from InputEmptyBlockCase.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        15,
        21,
        32,
        34,
        35
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nclass InputEmptyBlockCase\n{\n    void method1(int a) {\n        switch (a) {}\n        switch (a) {case 1: ; }\n        switch (a) {case 1:{}}  \n        switch (a) {\n            case 1:\n        }\n        switch (a) {\n            case 1:\n            {}  \n        }\n        switch (a) {\n            case 1:\n            {  \n            }\n        }\n    }\n    public void method2(char c) {\n        switch(c) { case 0: }\n        switch(c) { case 0: {} method1(1); }    \n        switch(c) { case 0: method1(0); {} }\n        switch(c) { case 0: case 1: {} }    \n        switch(c) { case 0: {} case 1: {    \n        }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockCase2.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        15,
        21,
        25,
        32,
        34
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nclass InputEmptyBlockCase2\n{\n    void method1(int a) {\n        switch (a) {}\n        switch (a) {case 1: ; }\n        switch (a) {case 1:{}}  \n        switch (a) {\n            case 1:\n        }\n        switch (a) {\n            case 1:\n            {}  \n        }\n        switch (a) {\n            case 1:\n            {   \n            }\n        }\n    }\n    public void method2(char c) {\n        switch(c) { case 0: }\n        switch(c) { case 0: {} method1(1); }    \n        switch(c) { case 0: method1(0); {} }\n        switch(c) { case 0: case 1: {} }    \n        switch(c) { case 0: {} case 1: {    \n        }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockDefault.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        14,
        20,
        45,
        52,
        59,
        88
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockDefault {\n    void method1(int a) {\n        switch (a) {}\n        switch (a) {default: ; }\n        switch (a) {default: {}}    \n        switch (a) {\n            default:\n        }\n        switch (a) {\n            default:\n            {}  \n        }\n        switch (a) {\n            default:\n            {   \n            }\n        }\n    }\n    void method2(int a) {\n        switch (a) {\n            case 1:a++;\n            case 2:a++;\n            default:\n                switch (a) {\n                    default: {  \n                    }\n                }\n        }\n    }\n    void method3(int a, int b) {\n        switch (a) {\n            case 1: break;\n            default: {} method2(a);     \n        }\n        switch (b) {\n            case 2: break;\n            default: method2(b); {}\n        }\n        switch (a+b) {case 1: break; default: {} ; }    \n    }\n    void method4(int a, int b) {\n        switch (a) {\n            case 1:\n            default: {}      \n        }\n        switch (b) {\n            case 1:\n            default:\n        }\n        switch (a+b) {\n            default:\n            case 1: { }\n        }\n        switch (a-b) {\n            case 1:\n            default: {      \n            } ;\n            case 2: { }\n        }\n    }\n    void method5(int a, int b) {\n        switch (a) {\n            case 1:\n            case 2:\n            case 3:\n            default:\n            {\n            }   \n        }\n        switch (b) {\n            default:\n            case 1:\n            case 2: { } method2(b);\n            case 3:\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockDefault2.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        14,
        20,
        24,
        35,
        45,
        52,
        59,
        74,
        87
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockDefault2 {\n    void method1(int a) {\n        switch (a) {}\n        switch (a) {default: ; }\n        switch (a) {default: {}}    \n        switch (a) {\n            default:\n        }\n        switch (a) {\n            default:\n            {}  \n        }\n        switch (a) {\n            default:\n            {   \n            }\n        }\n    }\n    void method2(int a) {\n        switch (a) {\n            case 1:a++;\n            case 2:a++;\n            default:\n                switch (a) {\n                    default: {  \n                    }\n                }\n        }\n    }\n    void method3(int a, int b) {\n        switch (a) {\n            case 1: break;\n            default: {} method2(a);     \n        }\n        switch (b) {\n            case 2: break;\n            default: method2(b); {}\n        }\n        switch (a+b) {case 1: break; default: {} ; }\n    }\n    void method4(int a, int b) {\n        switch (a) {\n            case 1:\n            default: {}      \n        }\n        switch (b) {\n            case 1:\n            default:\n        }\n        switch (a+b) {\n            default:\n            case 1: { }\n        }\n        switch (a-b) {\n            case 1:\n            default: {      \n            } ;\n            case 2: { }\n        }\n    }\n    void method5(int a, int b) {\n        switch (a) {\n            case 1:\n            case 2:\n            case 3:\n            default:\n            {               \n            }\n        }\n        switch (b) {\n            default:\n            case 1:\n            case 2: { } method2(b);\n            case 3:\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSemantic.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        37,
        39,
        41,
        44,
        65,
        75,
        77,
        87
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nimport java.io.*; \nimport java.awt.Dimension; \nimport java.awt.Color;\nclass InputEmptyBlockSemantic\n{\n    static {\n        Boolean x = new Boolean(true);\n    }\n    {\n        Boolean x = new Boolean(true);\n        Boolean[] y = new Boolean[]{Boolean.TRUE, Boolean.FALSE};\n    }\n    Boolean getBoolean()\n    {\n        return new java.lang.Boolean(true);\n    }\n    void exHandlerTest()\n    {\n        try {   \n        }\n        finally {   \n        }\n        try {   \n        }\n        finally {   \n        }\n        try {\n            ; \n        }\n        finally {\n            ; \n        }\n    }\n    private static final long IGNORE = 666l + 666L;\n    public class EqualsVsHashCode1\n    {\n        public boolean equals(int a)\n        {\n            return a == 1;\n        }\n    }\n    {   \n    }\n    private class InputBraces {\n    }\n    synchronized void foo() {\n        synchronized (this) {}  \n        synchronized (Class.class) {\n            synchronized (new Object()) {   \n            }\n        }\n    }\n    static {\n    int a = 0;}\n    static {    \n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSemantic2Statement.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        20,
        23,
        26,
        27
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nimport java.io.*; \nimport java.awt.Dimension; \nimport java.awt.Color;\nclass InputEmptyBlockSemantic2Statement\n{\n    public void fooMethod()\n    {\n        int a = 1;\n        if (a == 1) {}  \n        char[] s = {'1', '2'};\n        int index = 2;\n        if (doSideEffect() == 1) {} \n        while ((a = index - 1) != 0) {}\n        for (; index < s.length && s[index] != 'x'; index++) {}\n        if (a == 1) {} else {a++;}\n        switch (a) {}   \n        switch (a) {\n            case 1:\n                a = 2;\n            case 2:\n                a = 3;\n            default:\n                a = 0;\n        }\n    }\n    public int doSideEffect()\n    {\n        return 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSemantic2Text.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        25,
        28,
        31,
        32
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nimport java.io.*; \nimport java.awt.Dimension; \nimport java.awt.Color;\nclass InputEmptyBlockSemantic2Text\n{\n    public void fooMethod()\n    {\n        int a = 1;\n        if (a == 1) {}  \n        char[] s = {'1', '2'};\n        int index = 2;\n        if (doSideEffect() == 1) {} \n        while ((a = index - 1) != 0) {}\n        for (; index < s.length && s[index] != 'x'; index++) {}\n        if (a == 1) {} else {System.identityHashCode(\"a\");} \n        switch (a) {}   \n        switch (a) {\n            case 1:\n                a = 2;\n            case 2:\n                a = 3;\n            default:\n                a = 0;\n        }\n    }\n    public int doSideEffect()\n    {\n        return 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSemanticStatement.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        37,
        39,
        41,
        44,
        65,
        75,
        77,
        87
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nimport java.io.*; \nimport java.awt.Dimension; \nimport java.awt.Color;\nclass InputEmptyBlockSemanticStatement\n{\n    static {\n        Boolean x = new Boolean(true);\n    }\n    {\n        Boolean x = new Boolean(true);\n        Boolean[] y = new Boolean[]{Boolean.TRUE, Boolean.FALSE};\n    }\n    Boolean getBoolean()\n    {\n        return new java.lang.Boolean(true);\n    }\n    void exHandlerTest()\n    {\n        try {   \n        }\n        finally {   \n        }\n        try {   \n        }\n        finally {   \n        }\n        try {\n            ; \n        }\n        finally {\n            ; \n        }\n    }\n    private static final long IGNORE = 666l + 666L;\n    public class EqualsVsHashCode1\n    {\n        public boolean equals(int a)\n        {\n            return a == 1;\n        }\n    }\n    {   \n    }\n    private class InputBraces {\n    }\n    synchronized void foo() {\n        synchronized (this) {}  \n        synchronized (Class.class) {\n            synchronized (new Object()) {   \n            }\n        }\n    }\n    static {\n        int a = 0;}\n    static {    \n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSemanticText.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        38,
        40,
        68,
        75,
        86
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\nimport java.io.*; \nimport java.awt.Dimension; \nimport java.awt.Color;\nclass InputEmptyBlockSemanticText\n{\n    static {\n        Boolean x = new Boolean(true);\n    }\n    {\n        Boolean x = new Boolean(true);\n        Boolean[] y = new Boolean[]{Boolean.TRUE, Boolean.FALSE};\n    }\n    Boolean getBoolean()\n    {\n        return new java.lang.Boolean(true);\n    }\n    void exHandlerTest()\n    {\n        try {\n        }   \n        finally {\n        }   \n        try {\n        }\n        finally {\n        }\n        try {\n            ; \n        }\n        finally {\n            ; \n        }\n    }\n    private static final long IGNORE = 666l + 666L;\n    public class EqualsVsHashCode1\n    {\n        public boolean equals(int a)\n        {\n            return a == 1;\n        }\n    }\n    {\n    }\n    private class InputBraces {\n    }\n    synchronized void foo() {\n        synchronized (this) {}  \n        synchronized (Class.class) {\n            synchronized (new Object()) {\n            }\n        }\n    }\n    static {\n        int a = 0;}\n    static {\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockSwitchExpressionsOne.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockSwitchExpressionsOne {\n    void howMany1(NumsOne k) {\n        switch (k) {\n            case ONE:\n                System.out.println(\"case two\");\n            case TWO, THREE: { \n            }\n            case FOUR: {\n                System.out.println(\"case three\");\n            }\n            default:\n                throw new IllegalStateException(\"Not a nums\");\n        }\n    }\n    void howMany2(NumsOne k) {\n        switch (k) {\n            case ONE ->\n                    System.out.println(\"case one\");\n            case TWO, THREE ->\n                    System.out.println(\"case two\");\n            case FOUR ->\n                    System.out.println(\"case three\");\n            default ->\n                    throw new IllegalStateException(\"Not a nums\");\n        }\n    }\n    int howMany3(NumsOne k) {\n        return switch (k) {\n            case ONE:\n                yield 3;\n            case TWO, THREE:\n                yield 5;\n            case FOUR: {\n                yield 9;\n            }\n            default:\n                throw new IllegalStateException(\"Not a Nums\");\n        };\n    }\n    int howMany4(NumsOne k) {\n        return switch (k) {\n            case ONE -> {\n                yield 4;\n            }\n            case TWO, THREE -> {\n                yield 42;\n            }\n            case FOUR -> {\n                yield 99;\n            }\n            default -> throw new IllegalStateException(\"Not a Nums\");\n        };\n    }\n    int howMany5(NumsOne k) {\n        return switch (k) {\n            case ONE -> 1;\n            case TWO, THREE -> 3;\n            case FOUR -> 4;\n            default -> {throw new IllegalStateException(\"Not a Nums\");}\n        };\n    }\n    void howMany6(NumsOne k) {\n        switch (k) {\n            case ONE:\n                System.out.println(\"case two\");\n                break;\n            case TWO, THREE:\n                System.out.println(\"case two\");\n                break;\n            case FOUR:\n                System.out.println(\"case three\");\n                break;\n            default:\n                throw new IllegalStateException(\"Not a nums\");\n        }\n    }\n}\nenum NumsOne {ONE, TWO, THREE, FOUR}"
    },
    {
      "description": "Auto test from InputEmptyBlockSwitchExpressionsTwo.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        24,
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockSwitchExpressionsTwo {\n    void howMany7(NumsTwo k) {\n        switch (k) {\n            case ONE -> System.out.println(\"case one\");\n            case TWO, THREE -> { System.out.println(\"case two\");}\n            case FOUR -> System.out.println(\"case three\");\n            default -> throw new IllegalStateException(\"Not a nums\");\n        }\n    }\n    void howMany8(NumsTwo k) {\n        switch (k) {\n            case ONE -> System.out.println(\"case two\");\n            case TWO, THREE -> {} \n            case FOUR -> {} \n            default -> throw new IllegalStateException(\"Not a nums\");\n        }\n    }\n}\nenum NumsTwo {ONE, TWO, THREE, FOUR}"
    },
    {
      "description": "Auto test from InputEmptyBlockTestUppercaseOptionProperty.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        15,
        21
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockTestUppercaseOptionProperty {\n    void method1(int a) {\n        switch (a) {}\n        switch (a) {default: ; }\n        switch (a) {default: {}}    \n        switch (a) {\n            default:\n        }\n        switch (a) {\n            default:\n            {}  \n        }\n        switch (a) {\n            default:\n            {   \n            }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyBlockWithEmoji.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        13,
        24,
        27,
        29,
        30,
        31,
        39,
        44
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.blocks.emptyblock;\npublic class InputEmptyBlockWithEmoji {\n    static {\n    }\n    static {\n        String c = \"🎄\";\n    }\n    public void fooMethod()\n    {\n        String a = \"12🤩\";\n        String b = \"\";\n        if (a == \"🤩12🧐🧐\") { } \n        char[] s = {'1', '2'};\n        int index = 2;\n        if (doSideEffect() == 1) { } \n        while ((a = \"12\") != \"🧐\") {return;}\n        for (; index < s.length && s[index] != 'x'; index++) {} \n        if (a == \"12🤣\") {} else {System.identityHashCode(\"a\");} \n        switch(\"😆😆😆😆😆\") {\n        }\n        switch (a) {\n            case \"🎄\": {\n                a = \"🤣🤣\";\n            }\n            case \"🙃\":{} \n                a = \"1223🤣\";\n            default:\n                a = null;\n        }\n        switch(b) {case \"🤩\": break; default: { } } \n    }\n    public int doSideEffect()\n    {\n        return 1;\n    }\n}"
    }
  ]
}