{
  "name": "JavadocType",
  "language": "java",
  "description": "<div>\n Checks the Javadoc comments for type definitions. By default, does\n not check for author or version tags. The scope to verify is specified using the {@code Scope}\n class and defaults to {@code Scope.PRIVATE}. To verify another scope, set property\n scope to one of the {@code Scope} constants. To define the format for an author\n tag or a version tag, set property authorFormat or versionFormat respectively to a\n <a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html\">\n pattern</a>.\n </div>\n\n <p>\n Does not perform checks for author and version tags for inner classes,\n as they should be redundant because of outer class.\n </p>\n\n <p>\n Does not perform checks for type definitions that do not have any Javadoc comments.\n </p>\n\n <p>\n Error messages about type parameters and record components for which no param tags are present\n can be suppressed by defining property {@code allowMissingParamTags}.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 220,
  "branches": 25,
  "apis": 60,
  "test": [
    {
      "description": "Auto test from InputJavadocType2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        12
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocType2 {\n}\nclass InputSimple2 { \n    public void doSomething() {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocType3.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        22
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocType3 {\n    public interface InvalidParameterInJavadoc<T> {}\n    protected class InnerPublic2<T> \n    {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeAboveComments.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        15,
        36
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeAboveComments {\n}\nclass MyClass {\n}\nclass MyClass2 {\n}\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeAllowedAnnotations_3.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        35
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nimport java.lang.SuppressWarnings;\n@ThisIsOk_3\nclass InputJavadocTypeAllowedAnnotations_3 {\n}\n@com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype.ThisIsOk_3\nclass InputJavadocTypeAllowedAnnotationsFQN_3 {\n}\n@SuppressWarnings(value = \"some code generator\")\nclass InputJavadocTypeAllowedAnnotationByDefault_3 {\n}\n@interface ThisIsOk_3 {}\n@Generated \nclass Application<T> {}\n@interface Generated {\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeBadTag.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        15,
        15,
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeBadTag\n{\n}\nclass InputJavadocTypeBadTagFirstLine {}"
    },
    {
      "description": "Auto test from InputJavadocTypeInterfaceMemberScopeIsPublic.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        17,
        22
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic interface InputJavadocTypeInterfaceMemberScopeIsPublic {\n    enum Enum {\n    }\n    class Class {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeJavadoc.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        24,
        60,
        96
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeJavadoc\n{\n}\nclass InputJavadocTypeJavadoc1 \n{\n}\nclass InputJavadocTypeJavadoc2\n{\n}\nclass InputJavadocType\n{\n}\nenum InputJavadocTypeEnum\n{\n}\nenum InputJavadocTypeEnum1 \n{\n}\nenum InputJavadocTypeEnum2\n{\n}\n@interface InputJavadocInterfaceType\n{\n}\n@interface InputJavadocInterface\n{\n}\n@interface InputJavadocInterface1 \n{\n}\n@interface InputJavadocInterface2\n{\n}\n@interface InputJavadocInterfaceType1\n{\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeJavadoc_1.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        15,
        24,
        33,
        51,
        60,
        69,
        87,
        96,
        105
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeJavadoc_1 \n{\n}\nclass InputJavadocTypeJavadoc_11 \n{\n}\nclass InputJavadocTypeJavadoc_21 \n{\n}\nclass InputJavadocType_1\n{\n}\nenum InputJavadocTypeEnum_1 \n{\n}\nenum InputJavadocTypeEnum_11 \n{\n}\nenum InputJavadocTypeEnum_21 \n{\n}\n@interface InputJavadocInterfaceType_1\n{\n}\n@interface InputJavadocInterface_1 \n{\n}\n@interface InputJavadocInterface_11 \n{\n}\n@interface InputJavadocInterface_21 \n{\n}\n@interface InputJavadocInterfaceType_11\n{\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeJavadoc_2.java",
      "expected-problems": 12,
      "expected-linenumbers": [
        15,
        24,
        33,
        42,
        51,
        60,
        69,
        78,
        87,
        96,
        105,
        114
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeJavadoc_2 \n{\n}\nclass InputJavadocTypeJavadoc_12 \n{\n}\nclass InputJavadocTypeJavadoc_22 \n{\n}\nclass InputJavadocType_2 \n{\n}\nenum InputJavadocTypeEnum_2 \n{\n}\nenum InputJavadocTypeEnum_12 \n{\n}\nenum InputJavadocTypeEnum_22 \n{\n}\n@interface InputJavadocInterfaceType_2 \n{\n}\n@interface InputJavadocInterface_2 \n{\n}\n@interface InputJavadocInterface_12 \n{\n}\n@interface InputJavadocInterface_22 \n{\n}\n@interface InputJavadocInterfaceType_12 \n{\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeJavadoc_3.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        24,
        60,
        96
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeJavadoc_3\n{\n}\nclass InputJavadocTypeJavadoc_13 \n{\n}\nclass InputJavadocTypeJavadoc_23\n{\n}\nclass InputJavadocType_3\n{\n}\nenum InputJavadocTypeEnum_3\n{\n}\nenum InputJavadocTypeEnum_13 \n{\n}\nenum InputJavadocTypeEnum_23\n{\n}\n@interface InputJavadocInterfaceType_3\n{\n}\n@interface InputJavadocInterface_3\n{\n}\n@interface InputJavadocInterface_13 \n{\n}\n@interface InputJavadocInterface_23\n{\n}\n@interface InputJavadocInterfaceType_13\n{\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeNoJavadoc.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        15,
        134
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeNoJavadoc<T> \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n    protected class ProtectedInner2<T> { \n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeNoJavadoc_1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        134
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeNoJavadoc_1<T>\n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass_1 {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner_1 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName_1 {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n    protected class ProtectedInner2<T> { \n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeNoJavadoc_2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeNoJavadoc_2<T> \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass_2 {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner_2 {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName_2 {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n    protected class ProtectedInner2_2<T> {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeParamDescriptionWithAngularTags.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        40,
        40,
        46
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeParamDescriptionWithAngularTags<T> {}\ninterface Ronin<T> {}\nclass Shogun<T, U> {\n    interface Mandate<T, U, V> {}\n    class Minowara<V> extends Shogun<T, U> implements Mandate<T, U, V> {}\n}\ninterface Regent<T, U> {} \nclass Fief {}"
    },
    {
      "description": "Auto test from InputJavadocTypeRecordComponents2.java",
      "expected-problems": 7,
      "expected-linenumbers": [
        39,
        44,
        56,
        62,
        62,
        68,
        75
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nimport java.util.HashMap;\nimport java.util.List;\npublic record InputJavadocTypeRecordComponents2(String value) {\n}\nrecord MyRecord1(String myString, Integer myInt){}\nrecord MyRecord2(HashMap<String, String> myHashMap){}\nrecord MyRecord3<X>(){} \nrecord MyRecord4(){}\nrecord MyRecord5<X>(){}\nrecord MyRecord6<X>(String myString, int myInt){} \nrecord MyRecord7(List<String>myList){} \nrecord MyRecord8<X, T>(String X){} \nrecord MyRecord9<X, T>(String myString, int myInt){} "
    },
    {
      "description": "Auto test from InputJavadocTypeRecordParamDescriptionWithAngularTags.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        47,
        47,
        53,
        53,
        68,
        68
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic record InputJavadocTypeRecordParamDescriptionWithAngularTags<T>(String value) {\n}\nrecord Record1<T>(int a) {}\nrecord Record2<T>(int a, int b) {\n    record Record3<T>(int a, int b, int c) {}\n    record Record4<V>() {}\n}\nrecord Record5<T, U>() {} \nrecord Record6(int a) {} \nrecord Record7<T>(int a, int b) {}\nrecord Record8(int a, int b, int c) { \n}\nrecord Record9(int a) {}\nrecord Record10(int a, int b, int c) {}\nrecord MyTransaction(String transactionId) {\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeRecords.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        16,
        25,
        35,
        46,
        57
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeRecords { \n}\nrecord MyRecordOne() { \n}\nrecord MyRecordTwo() { \n    public MyRecordTwo {\n    }\n}\nrecord MyRecordThree() { \n}\nrecord MyRecordFour() { \n}\nrecord MyRecordFive() {\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeScopeInnerClasses.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        51
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeScopeInnerClasses\n{\n    public class InnerPublic\n    {\n        protected class InnerProtected\n        {\n            class InnerPackage\n            {\n                private class InnerPrivate\n                {\n                    class PrivateHiddenPackage\n                    {\n                    }\n                    protected class PrivateHiddenProtected\n                    {\n                    }\n                    public class PrivateHiddenPublic\n                    {\n                    }\n                }\n            }\n        }\n    }\n    protected class InnerPublic2<T> \n    {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeTestTrimProperty.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeTestTrimProperty<A,B1,C456 extends Comparable> {\n    public <X, Y1> String doSomething() {\n        return null;\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeTypeParamsTags.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        15,
        53,
        72
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeTypeParamsTags<A,B1,C456 extends Comparable>\n{\n    public <X, Y1> String doSomething()\n    {\n        return null;\n    }\n    public <Z> void doSomethingElse()\n    {\n    }\n    public <L> void doSomethingElse2(L aAnEl)\n    {\n    }\n    public static class InnerClass<A,B>\n    {\n    }\n    public <Z> void unclosedGenericParam()\n    {\n    }\n}\nclass Test {}"
    },
    {
      "description": "Auto test from InputJavadocTypeTypeParamsTags_1.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        15,
        25,
        54,
        54,
        73,
        76
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeTypeParamsTags_1<A,B1,C456 extends Comparable>\n{\n    public <X, Y1> String doSomething()\n    {\n        return null;\n    }\n    public <Z> void doSomethingElse()\n    {\n    }\n    public <L> void doSomethingElse2(L aAnEl)\n    {\n    }\n    public static class InnerClass_1<A,B> \n    {\n    }\n    public <Z> void unclosedGenericParam()\n    {\n    }\n}\nclass Test_1 {}\nclass Test_2 {}"
    },
    {
      "description": "Auto test from InputJavadocTypeUnusedParamInJavadocForClass.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        15,
        15,
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\npublic class InputJavadocTypeUnusedParamInJavadocForClass {\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeWhitespace.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        17
      ],
      "code": "package com . puppycrawl\n    .tools.\n    checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeWhitespace \n{\n    void donBradman(Runnable aRun)\n    {\n        donBradman(new Runnable() {\n            public void run() {\n            }\n        });\n        final Runnable r = new Runnable() {\n            public void run() {\n            }\n        };\n    }\n    void bug806243()\n    {\n        Object o = new InputJavadocTypeWhitespace() {\n            private int j ;\n        };\n    }\n}\ninterface IFoo\n{\n    void foo() ;\n}\nclass SpecialCasesInForLoop\n{\n    public void myMethod() {\n        new Thread() {\n            public void run() {\n            }\n        }.start();\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTypeWhitespace_1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        17
      ],
      "code": "package com . puppycrawl\n    .tools.\n    checkstyle.checks.javadoc.javadoctype;\nclass InputJavadocTypeWhitespace_1 \n{\n    void donBradman(Runnable aRun)\n    {\n        donBradman(new Runnable() {\n            public void run() {\n            }\n        });\n        final Runnable r = new Runnable() {\n            public void run() {\n            }\n        };\n    }\n    void bug806243()\n    {\n        Object o = new InputJavadocTypeWhitespace_1() {\n            private int j ;\n        };\n    }\n}\ninterface IFoo_1\n{\n    void foo() ;\n}\nclass SpecialCasesInForLoop_1\n{\n    public void myMethod() {\n        new Thread() {\n            public void run() {\n            }\n        }.start();\n    }\n}"
    }
  ]
}