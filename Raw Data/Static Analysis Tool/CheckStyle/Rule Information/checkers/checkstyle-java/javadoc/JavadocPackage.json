{
  "name": "JavadocPackage",
  "language": "java",
  "description": "<div>\n Checks that each Java package has a Javadoc file used for commenting.\n By default, it only allows a {@code package-info.java} file,\n but can be configured to allow a {@code package.html} file.\n </div>\n\n <p>\n A violation will be reported if both files exist as this is not allowed by the Javadoc tool.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 48,
  "branches": 5,
  "apis": 14,
  "test": [
    {
      "description": "Auto test from InputJavadocPackageBadCls.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage;\nclass InputJavadocPackageBadCls {\n    class X extends Exception {}\n    void m() throws X {}\n}"
    },
    {
      "description": "Auto test from InputJavadocPackageBadCls2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage;\nclass InputJavadocPackageBadCls2 {\n    class X extends Exception {}\n    void m() throws X {}\n}"
    },
    {
      "description": "Auto test from InputJavadocPackageBadTag.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage;\npublic class InputJavadocPackageBadTag\n{\n}"
    },
    {
      "description": "Auto test from InputJavadocPackageNoJavadoc.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage;\npublic class InputJavadocPackageNoJavadoc \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}"
    }
  ]
}