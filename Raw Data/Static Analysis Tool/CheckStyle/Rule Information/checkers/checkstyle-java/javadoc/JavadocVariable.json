{
  "name": "JavadocVariable",
  "language": "java",
  "description": "<div>\n Checks that a variable has a Javadoc comment. Ignores {@code serialVersionUID} fields.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 89,
  "branches": 24,
  "apis": 29,
  "test": [
    {
      "description": "Auto test from InputJavadocVariableAboveComment.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableAboveComment {\n    public int variablePublic;\n    public int x;  \n}"
    },
    {
      "description": "Auto test from InputJavadocVariableInner.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        19,
        26,
        32
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\nclass InputJavadocVariableInner\n{\n    class InnerInner2\n    {\n        public int fData; \n    }\n    interface InnerInterface2\n    {\n        String data = \"zxzc\"; \n        class InnerInterfaceInnerClass\n        {\n            public int rData; \n            protected int protectedVariable;\n            int packageVariable;\n        }\n    }\n    protected static Object sWeird = new Object();\n    static Object sWeird2 = new Object();\n    public interface Inter\n    {\n    }\n     public static void main()\n     {\n        Inter m = new Inter()\n        {\n            private static final int CDS = 1;\n            private int ABC;\n        };\n     }\n    @interface InnerAnnotation\n    {\n        String data = \"zxzc\";\n    }\n    enum InnerEnum\n    {\n        A,\n        B;\n        public int someValue;\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableInner2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        24
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\nclass InputJavadocVariableInner2\n{\n    class InnerInner2\n    {\n        int fData;\n    }\n    interface InnerInterface2\n    {\n        String data = \"zxzc\"; \n        class InnerInterfaceInnerClass\n        {\n            private int rData;\n            protected int protectedVariable;\n            int packageVariable;\n        }\n    }\n    protected static Object sWeird = new Object();\n    static Object sWeird2 = new Object();\n    public interface Inter\n    {\n    }\n     public static void main()\n     {\n        Inter m = new Inter()\n        {\n            private static final int CDS = 1;\n            private int ABC;\n        };\n     }\n    @interface InnerAnnotation\n    {\n        String data = \"zxzc\";\n    }\n    enum InnerEnum\n    {\n        A,\n        B;\n        public int someValue;\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableInterfaceMemberScopeIsPublic.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        14,
        16,
        23
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\ninterface InputJavadocVariableInterfaceMemberScopeIsPublic {\n    public static int field1 = 0;\n    public static int field2 = 0; \n    int field3 = 0; \n    enum Enum {\n        A,\n        B; \n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableMethodInnerClass.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        8,
        9,
        10,
        11
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableMethodInnerClass {\n    public int variablePublic; \n    protected int variableProtected; \n    int variablePackage; \n    private int variablePrivate; \n    public void testMethodInnerClass() {\n        class InnerClass {\n            public int innerClassVariablePublic;\n            protected int innerClassVariableProtected;\n            int innerClassVariablePackage;\n            private int innerClassVariablePrivate;\n        }\n        Runnable runnable = new Runnable() {\n            public int innerClassVariablePublic;\n            protected int innerClassVariableProtected;\n            int innerClassVariablePackage;\n            private int innerClassVariablePrivate;\n            public void run()\n            {\n                System.identityHashCode(\"running\");\n            }\n        };\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableNoJavadoc2.java",
      "expected-problems": 19,
      "expected-linenumbers": [
        12,
        13,
        23,
        24,
        35,
        36,
        47,
        48,
        60,
        61,
        71,
        72,
        83,
        84,
        95,
        96,
        107,
        108,
        129
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableNoJavadoc2 \n{\n    public int i1; \n    protected int i2; \n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass  PackageClass2 {\n    public int i1; \n    protected int i2; \n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n    public enum PublicEnum {\n        CONSTANT \n    }\n    private enum PrivateEnum {\n        CONSTANT\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableNoJavadoc3.java",
      "expected-problems": 19,
      "expected-linenumbers": [
        14,
        15,
        25,
        26,
        37,
        38,
        49,
        50,
        62,
        63,
        73,
        74,
        85,
        86,
        97,
        98,
        109,
        110,
        119
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableNoJavadoc3 \n{\n    public int i1;\n    protected int i2;\n    int i3; \n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass3 {\n    public int i1;\n    protected int i2;\n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger; \n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableNoJavadoc5.java",
      "expected-problems": 37,
      "expected-linenumbers": [
        12,
        13,
        14,
        15,
        23,
        24,
        25,
        26,
        35,
        36,
        37,
        38,
        47,
        48,
        49,
        50,
        60,
        61,
        62,
        63,
        71,
        72,
        73,
        74,
        83,
        84,
        85,
        86,
        95,
        96,
        97,
        98,
        107,
        108,
        109,
        110,
        119
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableNoJavadoc5 \n{\n    public int i1; \n    protected int i2; \n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass5 {\n    public int i1; \n    protected int i2; \n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger; \n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableNoJavadocNeededInLambda.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\nimport java.util.function.Function;\npublic class InputJavadocVariableNoJavadocNeededInLambda {\n    private static final Function<String, String> FUNCTION1 = (String it) -> {\n        String stuff = it;\n        return stuff + it;\n    };\n    private static final Function<String, String> FUNCTION2 = (String it) -> {\n        String stuff = it;\n        return stuff + it;\n    };\n    private Runnable r = () -> {\n        String str = \"Hello world\";\n    };\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableOnIgnoredVariableNames.java",
      "expected-problems": 16,
      "expected-linenumbers": [
        12,
        13,
        14,
        15,
        23,
        24,
        25,
        26,
        35,
        36,
        37,
        38,
        47,
        48,
        49,
        50
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableOnIgnoredVariableNames \n{\n    public int i1; \n    protected int i2; \n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableOnIgnoredVariableNames2.java",
      "expected-problems": 20,
      "expected-linenumbers": [
        13,
        14,
        15,
        16,
        24,
        25,
        26,
        27,
        36,
        37,
        38,
        39,
        48,
        49,
        50,
        51,
        60,
        61,
        62,
        63
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableOnIgnoredVariableNames2 {\n    class PackageClass4 {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n        public class PublicInner {\n            public int i1; \n            protected int i2; \n            int i3; \n            private int i4; \n            public void foo1() {}\n            protected void foo2() {}\n            void foo3() {}\n            private void foo4() {}\n        }\n        protected class ProtectedInner {\n            public int i1; \n            protected int i2; \n            int i3; \n            private int i4; \n            public void foo1() {}\n            protected void foo2() {}\n            void foo3() {}\n            private void foo4() {}\n        }\n        class PackageInner {\n            public int i1; \n            protected int i2; \n            int i3; \n            private int i4; \n            public void foo1() {}\n            protected void foo2() {}\n            void foo3() {}\n            private void foo4() {}\n        }\n        private class PrivateInner {\n            public int i1; \n            protected int i2; \n            int i3; \n            private int i4; \n            public void foo1() {}\n            protected void foo2() {}\n            void foo3() {}\n            private void foo4() {}\n        }\n        class IgnoredName {\n            private int logger;\n            private static final long serialVersionUID = 0;\n        }\n        void methodWithTwoStarComment() {}\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableOnInnerClassFields.java",
      "expected-problems": 16,
      "expected-linenumbers": [
        12,
        13,
        14,
        15,
        23,
        24,
        25,
        26,
        35,
        36,
        37,
        38,
        47,
        48,
        49,
        50
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableOnInnerClassFields \n{\n    public int i1; \n    protected int i2; \n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableOnPublicInnerClassFields.java",
      "expected-problems": 21,
      "expected-linenumbers": [
        11,
        12,
        13,
        14,
        22,
        23,
        24,
        25,
        34,
        35,
        36,
        37,
        46,
        47,
        48,
        49,
        58,
        59,
        60,
        61,
        70
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariableOnPublicInnerClassFields {\n    public int i1; \n    protected int i2; \n    int i3; \n    private int i4; \n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1; \n        protected int i2; \n        int i3; \n        private int i4; \n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger; \n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n}"
    },
    {
      "description": "Auto test from InputJavadocVariablePublicOnly.java",
      "expected-problems": 7,
      "expected-linenumbers": [
        14,
        19,
        39,
        45,
        47,
        48,
        49
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariablePublicOnly \n{\n    private interface InnerInterface \n    {\n        String CONST = \"InnerInterface\"; \n        void method(); \n        class InnerInnerClass \n        {\n            private int mData; \n            private InnerInnerClass()\n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n            void method2() \n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n        }\n    }\n    private class InnerClass \n    {\n        private int mDiff; \n        void method() \n        {\n        }\n    }\n    private int mSize; \n    int mLen; \n    protected int mDeer; \n    public int aFreddo; \n    private InputJavadocVariablePublicOnly(int aA)\n    {\n    }\n    InputJavadocVariablePublicOnly(String aA)\n    {\n    }\n    protected InputJavadocVariablePublicOnly(Object aA)\n    {\n    }\n    public InputJavadocVariablePublicOnly(Class<Object> aA)\n    {\n    }\n    private void method(int aA)\n    {\n    }\n    void method(Long aA)\n    {\n    }\n    protected void method(Class<Object> aA)\n    {\n    }\n    public void method(StringBuffer aA)\n    {\n    }\n    private void method(String aA)\n    {\n    }\n    public class InnerWithoutAuthor\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    @Deprecated @Override\n    public int hashCode()\n    {\n        return super.hashCode();\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariablePublicOnly2.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        14,
        49
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\npublic class InputJavadocVariablePublicOnly2 \n{\n    private interface InnerInterface \n    {\n        String CONST = \"InnerInterface\"; \n        void method(); \n        class InnerInnerClass \n        {\n            private int mData; \n            private InnerInnerClass()\n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n            void method2() \n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n        }\n    }\n    private class InnerClass \n    {\n        private int mDiff; \n        void method() \n        {\n        }\n    }\n    private int mSize; \n    int mLen; \n    protected int mDeer; \n    public int aFreddo; \n    private InputJavadocVariablePublicOnly2(int aA)\n    {\n    }\n    InputJavadocVariablePublicOnly2(String aA)\n    {\n    }\n    protected InputJavadocVariablePublicOnly2(Object aA)\n    {\n    }\n    public InputJavadocVariablePublicOnly2(Class<Object> aA)\n    {\n    }\n    private void method(int aA)\n    {\n    }\n    void method(Long aA)\n    {\n    }\n    protected void method(Class<Object> aA)\n    {\n    }\n    public void method(StringBuffer aA)\n    {\n    }\n    private void method(String aA)\n    {\n    }\n    public class InnerWithoutAuthor\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    @Deprecated @Override\n    public int hashCode()\n    {\n        return super.hashCode();\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocVariableTags.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        14,
        308,
        314,
        334
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocvariable;\nimport java.io.IOException;\nclass InputJavadocVariableTags1\n{\n    private int mMissingJavadoc; \n    void method1()\n    {\n    }\n    void method2()\n    {\n    }\n    int method3()\n    {\n        return 3;\n    }\n    int method4(int aOne)\n    {\n        return aOne;\n    }\n    void method5()\n        throws Exception\n    {\n    }\n    void method6()\n        throws Exception\n    {\n    }\n    void method7()\n        throws Exception, NullPointerException\n    {\n    }\n    void method8(int aOne)\n    {\n    }\n    void method9(int aOne)\n    {\n    }\n    void method10(int aOne, int aTwo)\n    {\n    }\n    void method11()\n    {\n    }\n    int method12()\n    {\n        return 0;\n    }\n    void method13(int aOne, int aTwo, int aThree, int aFour, int aFive)\n    {\n    }\n    void method14(int aOne)\n    {\n    }\n    void method14()\n       throws java.io.IOException\n    {\n    }\n    static\n    {\n        int x = 1; \n    }\n    {\n        int z = 2; \n    }\n    private static final int\n        ON_SECOND_LINE = 2;\n    void method15()\n       throws java.io.IOException\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    static final int serialVersionUID = 666;\n    void method16(int aOne)\n    {\n    }\n    void method17()\n        throws IllegalMonitorStateException\n    {\n    }\n    void method18()\n        throws IOException\n    {\n        throw new IOException(\"to make compiler happy\");\n    }\n    void method19()\n        throws java.io.IOException\n    {\n        throw new IOException(\"to make compiler happy\");\n    }\n    int method20()\n    {\n        return 579190;\n    }\n    void method21()\n       throws IOException\n    {\n    }\n    void method22()\n       throws IOException\n    {\n    }\n    void method23() throws WrongException\n    {\n    }\n    void method24() throws IOException\n    {\n    }\n    void method25()\n    {\n    }\n    int method26()\n    { return 0;\n    }\n    int method27(int aParam)\n    { return 0;\n    }\n    int method28(int aParam)\n    { return 0;\n    }\n    public int foo(Object _arg) {\n        return 1;\n    }\n}\nenum InputJavadocVariableTagsEnum\n{\n    CONSTANT_A, \n    CONSTANT_B,\n    CONSTANT_C \n    {\n        public void someMethod()\n        {\n        }\n        public void someOtherMethod()\n        {\n        }\n    }\n}\n@interface InputJavadocVariableTagsAnnotation\n{\n    String someField();\n    int A_CONSTANT = 0; \n    int B_CONSTANT = 1;\n    String someField2();\n}\npublic class InputJavadocVariableTags {\n    public InputJavadocVariableTags() {\n    }\n    public final String myMethod(final String arg1,\n                                 final Object arg2)\n      throws Exception\n    {\n        return null;\n    }\n}\nclass WrongException extends RuntimeException\n{\n}"
    }
  ]
}