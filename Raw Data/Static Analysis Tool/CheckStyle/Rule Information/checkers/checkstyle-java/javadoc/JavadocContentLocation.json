{
  "name": "JavadocContentLocation",
  "language": "java",
  "description": "<div>\n Checks that the Javadoc content begins from the same position\n for all Javadoc comments in the project. Any leading asterisks and spaces\n are not counted as the beginning of the content and are therefore ignored.\n </div>\n\n <p>\n It is possible to enforce two different styles:\n </p>\n <ul>\n <li>\n {@code first_line} - Javadoc content starts from the first line:\n <pre>\n &#47;** Summary text.\n   * More details.\n   *&#47;\n public void method();\n </pre>\n </li>\n <li>\n {@code second_line} - Javadoc content starts from the second line:\n <pre>\n &#47;**\n   * Summary text.\n   * More details.\n   *&#47;\n public void method();\n </pre>\n </li>\n </ul>\n\n <p>\n This check does not validate the Javadoc summary itself nor its presence.\n The check will not report any violations for missing or malformed javadoc summary.\n To validate the Javadoc summary use\n <a href=\"https://checkstyle.org/checks/javadoc/summaryjavadoc.html#SummaryJavadoc\">\n SummaryJavadoc</a> check.\n </p>\n\n <p>\n The <a href=\"https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html\">\n Documentation Comment Specification</a> permits leading asterisks on the first line.\n For these Javadoc comments:\n </p>\n <pre>\n &#47;***\n   * Some text.\n   *&#47;\n &#47;************\n   * Some text.\n   *&#47;\n &#47;**           **\n   * Some text.\n   *&#47;\n </pre>\n\n <p>\n The documentation generated will be just \"Some text.\" without any asterisks.\n Since these asterisks will not appear in the generated documentation,\n they should not be considered as the beginning of the Javadoc content.\n In such cases, the check assumes that the Javadoc content begins on the second line.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 73,
  "branches": 8,
  "apis": 21,
  "test": [
    {
      "description": "Auto test from InputJavadocContentLocation.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        7
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoccontentlocation;\npublic interface InputJavadocContentLocation {\n}"
    },
    {
      "description": "Auto test from InputJavadocContentLocationDefault.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        15,
        19
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoccontentlocation;\npublic interface InputJavadocContentLocationDefault {\n    void ok();\n    void violation();\n    void thirdLineViolation();\n    void blankLinesOnly();\n    void missingAsterisks();\n    void missingAsterisksWithText();\n    void extraAsterisks();\n    void javadocTag();\n    void htmlTag();\n    void singleLine();\n    void emptyJavadocComment();\n    void emptyComment();\n    void notJavadocComment();\n}"
    },
    {
      "description": "Auto test from InputJavadocContentLocationFirstLine.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        10,
        19
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoccontentlocation;\npublic interface InputJavadocContentLocationFirstLine {\n    void violation();\n    void ok();\n    void thirdLineViolation();\n    void blankLinesOnly();\n    void missingAsterisks();\n    void extraAsterisks();\n    void javadocTag();\n    void htmlTag();\n    void singleLine();\n    void notJavadocComment();\n}"
    },
    {
      "description": "Auto test from InputJavadocContentLocationInterface.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        8
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoccontentlocation;\npublic interface InputJavadocContentLocationInterface {\n}"
    },
    {
      "description": "Auto test from InputJavadocContentLocationTrimOptionProperty.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        10,
        19
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoccontentlocation;\npublic interface InputJavadocContentLocationTrimOptionProperty {\n    void violation();\n    void ok();\n    void thirdLineViolation();\n}"
    }
  ]
}