{
  "name": "JavadocTagContinuationIndentation",
  "language": "java",
  "description": "<div>\n Checks the indentation of the continuation lines in block tags. That is whether the continued\n description of at clauses should be indented or not. If the text is not properly indented it\n throws a violation. A continuation line is when the description starts/spans past the line with\n the tag. Default indentation required is at least 4, but this can be changed with the help of\n properties below.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 99,
  "branches": 15,
  "apis": 24,
  "test": [
    {
      "description": "Auto test from InputJavadocTagContinuationIndentation.java",
      "expected-problems": 14,
      "expected-linenumbers": [
        46,
        111,
        111,
        204,
        204,
        224,
        224,
        287,
        287,
        287,
        307,
        321,
        321,
        345
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\nimport java.io.Serializable;\nclass InputJavadocTagContinuationIndentation implements Serializable\n{\n    private String fFirstName;\n    private String sSecondName;\n    private String tThirdName;\n    String method(String aString) throws Exception\n    {\n        return \"null\";\n    }\n    String method1(String aString) throws Exception\n    {\n        return \"null\";\n    }\n    void method2(String aString) throws Exception {}\n    void method3() throws Exception {}\n    String method4() throws Exception\n    {\n        return \"null\";\n    }\n    String method5(String aString)\n    {\n        return \"null\";\n    }\n    String method6(String aString, int aInt, boolean aBoolean) throws Exception\n    {\n        return \"null\";\n    }\n    class InnerClassWithAnnotations\n    {\n        String method(String aString) throws Exception\n        {\n            return \"null\";\n        }\n        String method1(String aString) throws Exception\n        {\n            return \"null\";\n        }\n        void method2(String aString) throws Exception {}\n        void method3() throws Exception {}\n        String method4() throws Exception\n        {\n            return \"null\";\n        }\n        String method5(String aString)\n        {\n            return \"null\";\n        }\n        String method6(String aString, int aInt, boolean aBoolean) throws Exception\n        {\n            return \"null\";\n        }\n    }\n    InnerClassWithAnnotations anon = new InnerClassWithAnnotations()\n    {\n        String method(String aString) throws Exception\n        {\n            return \"null\";\n        }\n        String method1(String aString) throws Exception\n        {\n            return \"null\";\n        }\n        void method2(String aString) throws Exception {}\n        void method3() throws Exception {}\n        String method4() throws Exception\n        {\n            return \"null\";\n        }\n        String method5(String aString)\n        {\n            return \"null\";\n        }\n        String method6(String aString, int aInt, boolean aBoolean) throws Exception\n        {\n            return \"null\";\n        }\n    };\n}\nenum Foo1 {}\ninterface FooIn1 {}\ninterface FooIn2 {}\nclass ShortNextLine {\n    public void example() {\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentation1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\nimport java.io.IOException;\npublic class InputJavadocTagContinuationIndentation1 {\n    int key;\n    boolean usesShift;\n    public InputJavadocTagContinuationIndentation1(int key, boolean useShiftModifier) {\n        this.key = key;\n        this.usesShift = useShiftModifier;\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentationBlockTag.java",
      "expected-problems": 24,
      "expected-linenumbers": [
        13,
        26,
        36,
        56,
        56,
        68,
        68,
        68,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\nimport java.io.Serializable;\npublic class InputJavadocTagContinuationIndentationBlockTag {\n    public static double parseDouble(String text, int type) {\n        return 0;\n    }\n    public void newlineThenBlockTag(int x) {\n    }\n    public void partialIndent(int x) {\n    }\n    public int identity(int x) {\n        return x;\n    }\n    public void multipleLines1(String args) {\n    }\n    public boolean isMultipleLines2() {\n        return false;\n    }\n    public String regressionNestedHtml(CharSequence c) {\n        return \"\";\n    }\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentationCheck1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        11
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\npublic class InputJavadocTagContinuationIndentationCheck1 {\n    void foo1() {}\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentationCheckHtml.java",
      "expected-problems": 13,
      "expected-linenumbers": [
        9,
        9,
        20,
        20,
        20,
        41,
        41,
        41,
        54,
        54,
        54,
        68,
        68
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\npublic class InputJavadocTagContinuationIndentationCheckHtml {\n    static class Test {}\n    static class InlineTagTest {}\n    static void readData(String source) {}\n    @Deprecated\n    static void getUserData() {}\n    static class Test2 {}\n    static class Test3 {}\n    static class Test4 {}\n    static class Test5 {}\n    static class Test6 {}\n    static class Test7 {}\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentationDescription.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        11,
        11,
        11,
        43,
        43,
        43
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\npublic class InputJavadocTagContinuationIndentationDescription {\n    public void testWithInvalidIndentation(String s) {}\n    public void testWithValidIndentation(int a, int b) {}\n    public void testWithInlineDescription() {}\n    public void testWithMissingAsterisk(int x) {}\n    public void testOtherCases(String s, String s2) {}\n}"
    },
    {
      "description": "Auto test from InputJavadocTagContinuationIndentationOffset3.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        9,
        23
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctagcontinuationindentation;\nclass InputJavadocTagContinuationIndentationOffset3 {\n    private String fFirstName;\n    private String sSecondName;\n    private String tThirdName;\n}"
    }
  ]
}