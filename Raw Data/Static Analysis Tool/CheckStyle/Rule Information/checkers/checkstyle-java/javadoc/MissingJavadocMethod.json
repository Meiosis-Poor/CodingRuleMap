{
  "name": "MissingJavadocMethod",
  "language": "java",
  "description": "<div>\n Checks for missing Javadoc comments for a method or constructor. The scope to verify is\n specified using the {@code Scope} class and defaults to {@code Scope.PUBLIC}. To verify\n another scope, set property scope to a different\n <a href=\"https://checkstyle.org/property_types.html#Scope\">scope</a>.\n </div>\n\n <p>\n Javadoc is not required on a method that is tagged with the {@code @Override} annotation.\n However, under Java 5 it is not possible to mark a method required for an interface (this\n was <i>corrected</i> under Java 6). Hence, Checkstyle supports using the convention of using\n a single {@code {@inheritDoc}} tag instead of all the other tags.\n </p>\n\n <p>\n For getters and setters for the property {@code allowMissingPropertyJavadoc}, the methods must\n match exactly the structures below.\n </p>\n <pre>\n public void setNumber(final int number)\n {\n     mNumber = number;\n }\n\n public int getNumber()\n {\n     return mNumber;\n }\n\n public boolean isSomething()\n {\n     return false;\n }\n </pre>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 156,
  "branches": 12,
  "apis": 38,
  "test": [
    {
      "description": "Auto test from InputMissingJavadocMethod1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        11
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethod1 {\n    void text2Lines() {String a = \"\"\"\n        \"\"\";}\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodAboveComments.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        16,
        34
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodAboveComments {\n    public InputMissingJavadocMethodAboveComments() { } \n    public InputMissingJavadocMethodAboveComments(String p1) {\n    }\n    public int method()  { return 0;}\n    public int method2() { \n        return 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodAllowedAnnotations.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        29
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodAllowedAnnotations implements SomeInterface {\n    @ThisIsOk\n    public void allowed1() {}\n    @ThisIsOkToo\n    public void allowed2() {}\n    @com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod.ThisIsOk\n    public void allowed3() {}\n    @Override\n    public void method() {}\n}\ninterface SomeInterface {\n    void method();\n}\n@interface ThisIsOk {}\n@interface ThisIsOkToo {}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodAnnotationField.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        23,
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.TYPE)\npublic @interface InputMissingJavadocMethodAnnotationField {\n    int method(); \n    String value() default \"AMD\"; \n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodBasic.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        11
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodBasic {\n    public void validAssign(String result) { \n         result = switch (\"in\") {\n              case \"correct\" -> \"true\";\n              default -> \"also correct\";\n          };\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodConstructor.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        20
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodConstructor {\n    private int field;\n    public InputMissingJavadocMethodConstructor() {} \n    public InputMissingJavadocMethodConstructor(Runnable p1) { this.field = 0; }\n    public InputMissingJavadocMethodConstructor(String p1) { this.field = 0; }\n    public InputMissingJavadocMethodConstructor(Integer p1) { this.field = 0; }\n    public InputMissingJavadocMethodConstructor(Long p1) { this.field = 0; }\n    public InputMissingJavadocMethodConstructor(Short p1) { this.field = 0; }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodEnumCtorScopeIsPrivate.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        24
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic enum InputMissingJavadocMethodEnumCtorScopeIsPrivate {\n    CONSTANT(0);\n    private final int value;\n    InputMissingJavadocMethodEnumCtorScopeIsPrivate(int value) {\n        this.value = value;\n    }\n    void packagePrivateMethod() { \n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodExtendAnnotation.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        42
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\nimport com.google.common.collect.Multiset;\nimport com.google.common.collect.Multiset.Entry;\nimport java.lang.reflect.Method;\nimport java.util.Arrays;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.List;\n@SuppressWarnings(value = \"unchecked\")\npublic abstract class InputMissingJavadocMethodExtendAnnotation<E>\n  {\n  private static final String SUPPORTS_ADD = \"\";\n  private static final String SUPPORTS_REMOVE = null;\n@CollectionFeature.Require \n  public void testSetCount_zeroToZero_unsupported() {\n    try {\n      assertZeroToZero();\n    } catch (UnsupportedOperationException tolerated) {\n    }\n  }\n  private void assertZeroToZero() {\n  }\n  @interface CollectionFeature {\n      @interface Require {\n      }\n  }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodIgnoreNameRegex2.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        21,
        24,
        28
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodIgnoreNameRegex2\n{\n    private void foo() { \n    }\n    private void foo88() { \n    }\n    private void foo2() { \n        int x = 0;\n        int k = x >> 2;\n        String s = String.valueOf(k);\n        boolean b = false;\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodInterfaceMemberScopeIsPublic.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        20,
        28
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic interface InputMissingJavadocMethodInterfaceMemberScopeIsPublic {\n    enum Enum {\n        ;\n        public static void method() {} \n        void packagePrivateMethod() {}\n    }\n    class Class {\n        public void method() {} \n        void packagePrivateMethod() {}\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodJavadocInMethod.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        19,
        20,
        23,
        27
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodJavadocInMethod {\n    public void foo1() { } \n    @Deprecated \n    public void foo2() { }\n    @Deprecated \n    public void foo3() { }\n    public void foo4() {  } \n    @Deprecated\n    public void foo5() {  }\n    @Deprecated\n    public void foo6() {  }\n    public void foo7() {  }\n    @Deprecated\n    public void foo8() {  }\n    @Deprecated\n    public void foo9() {  }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodNoJavadoc.java",
      "expected-problems": 37,
      "expected-linenumbers": [
        24,
        26,
        27,
        28,
        35,
        37,
        38,
        39,
        47,
        49,
        50,
        51,
        59,
        61,
        62,
        63,
        72,
        74,
        75,
        76,
        83,
        85,
        86,
        87,
        95,
        97,
        98,
        99,
        107,
        109,
        110,
        111,
        119,
        121,
        122,
        123,
        132
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodNoJavadoc \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {} \n    protected void foo2() {} \n    void foo3() {} \n    private void foo4() {} \n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n}\nclass PackageClass {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {} \n    protected void foo2() {} \n    void foo3() {} \n    private void foo4() {} \n    public class PublicInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {} \n        private void foo4() {} \n    }\n    class IgnoredName {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {} \n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodNoJavadoc2.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        24,
        26,
        35,
        37
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodNoJavadoc2 \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {} \n    protected void foo2() {} \n    void foo3() {}\n    private void foo4() {}\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {} \n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n}\nclass PackageClass2 {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {}\n    protected void foo2() {}\n    void foo3() {}\n    private void foo4() {}\n    public class PublicInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class IgnoredName {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {}\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodNoJavadoc3.java",
      "expected-problems": 25,
      "expected-linenumbers": [
        25,
        28,
        29,
        48,
        51,
        52,
        60,
        63,
        64,
        73,
        76,
        77,
        84,
        87,
        88,
        96,
        99,
        100,
        108,
        111,
        112,
        120,
        123,
        124,
        133
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodNoJavadoc3 \n{\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {} \n    protected void foo2() {}\n    void foo3() {} \n    private void foo4() {} \n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {}\n        protected void foo2() {}\n        void foo3() {}\n        private void foo4() {}\n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n}\nclass PackageClass3 {\n    public int i1;\n    protected int i2;\n    int i3;\n    private int i4;\n    public void foo1() {} \n    protected void foo2() {}\n    void foo3() {} \n    private void foo4() {} \n    public class PublicInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n    protected class ProtectedInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n    class PackageInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n    private class PrivateInner {\n        public int i1;\n        protected int i2;\n        int i3;\n        private int i4;\n        public void foo1() {} \n        protected void foo2() {}\n        void foo3() {} \n        private void foo4() {} \n    }\n    class IgnoredName {\n        private int logger;\n        private static final long serialVersionUID = 0;\n    }\n    void methodWithTwoStarComment() {} \n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodPublicMethods.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        20,
        22,
        26,
        30,
        33
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Target;\npublic class InputMissingJavadocMethodPublicMethods {\n    public void annotation(final char @SomeAnnotation [] arg) {} \n    public @SomeAnnotation String @SomeAnnotation [] annotationInSignature() { \n        return new String[]{};\n    }\n    public static <T> T[] typeInSignature(T[] array) { \n        return null;\n    }\n    public static <T> T[][] typeInSignature2(T[][] array) { \n        return null;\n    }\n    public static void main(String[] args) throws Exception {} \n    public void annotation1(final char @SomeAnnotation [] arg) {}\n    public @SomeAnnotation String @SomeAnnotation [] annotationInSignature1() {\n        return new String[]{};\n    }\n    public static <T> T[] typeInSignature3(T[] array) {\n        return null;\n    }\n    public static <T> T[][] typeInSignature4(T[][] array) {\n        return null;\n    }\n    public static void mainWithArgs(String[] args) throws Exception {}\n    @Target(ElementType.TYPE_USE)\n    @interface SomeAnnotation {\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodPublicOnly.java",
      "expected-problems": 12,
      "expected-linenumbers": [
        23,
        28,
        35,
        48,
        58,
        62,
        66,
        70,
        74,
        78,
        82,
        86
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodPublicOnly\n{\n    private interface InnerInterface\n    {\n        String CONST = \"InnerInterface\";\n        void method(); \n        class InnerInnerClass\n        {\n            private int mData;\n            private InnerInnerClass() \n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n            void method2() \n            {\n                final Runnable r = new Runnable() {\n                        public void run() {};\n                    };\n            }\n        }\n    }\n    private class InnerClass\n    {\n        private int mDiff;\n        void method() \n        {\n        }\n    }\n    private int mSize;\n    int mLen;\n    protected int mDeer;\n    public int aFreddo;\n    private InputMissingJavadocMethodPublicOnly(int aA) \n    {\n    }\n    InputMissingJavadocMethodPublicOnly(String aA) \n    {\n    }\n    protected InputMissingJavadocMethodPublicOnly(Object aA) \n    {\n    }\n    public InputMissingJavadocMethodPublicOnly(Class<Object> aA) \n    {\n    }\n    private void method(int aA) \n    {\n    }\n    void method(Long aA) \n    {\n    }\n    protected void method(Class<Object> aA) \n    {\n    }\n    public void method(StringBuffer aA) \n    {\n    }\n    private void method(String aA)\n    {\n    }\n    public class InnerWithoutAuthor\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    @Deprecated @Override\n    public int hashCode()\n    {\n        return super.hashCode();\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodPublicOnly3.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        63,
        67,
        79,
        83
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodPublicOnly3\n{\n    private interface InnerInterface\n    {\n        String CONST = \"InnerInterface\";\n        void method();\n        class InnerInnerClass\n        {\n            private int mData;\n            private InnerInnerClass()\n            {\n                final Runnable r = new Runnable() {\n                    public void run() {};\n                };\n            }\n            void method2()\n            {\n                final Runnable r = new Runnable() {\n                    public void run() {};\n                };\n            }\n        }\n    }\n    private class InnerClass\n    {\n        private int mDiff;\n        void method()\n        {\n        }\n    }\n    private int mSize;\n    int mLen;\n    protected int mDeer;\n    public int aFreddo;\n    private InputMissingJavadocMethodPublicOnly3(int aA)\n    {\n    }\n    InputMissingJavadocMethodPublicOnly3(String aA)\n    {\n    }\n    protected InputMissingJavadocMethodPublicOnly3(Object aA) \n    {\n    }\n    public InputMissingJavadocMethodPublicOnly3(Class<Object> aA) \n    {\n    }\n    private void method(int aA)\n    {\n    }\n    void method(Long aA)\n    {\n    }\n    protected void method(Class<Object> aA) \n    {\n    }\n    public void method(StringBuffer aA) \n    {\n    }\n    private void method(String aA)\n    {\n    }\n    public class InnerWithoutAuthor\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    @Deprecated @Override\n    public int hashCode()\n    {\n        return super.hashCode();\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodRecordsAndCtors.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        19,
        24,
        29,
        36,
        42,
        46
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodRecordsAndCtors {\n    public record MyRecord(Integer number) {\n        private static int mNumber;\n        public void setNumber(final int number) { \n            mNumber = number;\n        }\n        public int getNumber() { \n            return mNumber;\n        }\n        public void setNumber1() { \n            mNumber = mNumber;\n        }\n    }\n    public record MySecondRecord() {\n        public MySecondRecord { \n        }\n    }\n    public record MyThirdRecord() {\n        public MyThirdRecord() { \n        }\n    }\n    public void setNumber1() \n    {\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodScopeAnonInner2.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        33,
        46,
        60
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseAdapter;\nimport javax.swing.JButton;\npublic class InputMissingJavadocMethodScopeAnonInner2\n{\n    private JButton mButton = new JButton();\n    private Runnable mRunnable = new Runnable() {\n        public void run() \n        {\n            System.identityHashCode(\"running\");\n        }\n    };\n    InputMissingJavadocMethodScopeAnonInner2()\n    {\n        mButton.addMouseListener( new MouseAdapter()\n        {\n            public void mouseClicked( MouseEvent aEv ) \n            {\n                System.identityHashCode(\"click\");\n            }\n        } );\n    }\n    public void addInputAnonInner()\n    {\n        mButton.addMouseListener( new MouseAdapter()\n        {\n            public void mouseClicked( MouseEvent aEv ) \n            {\n                System.identityHashCode(\"click\");\n            }\n        } );\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodScopeInnerInterfaces.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        50,
        52
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodScopeInnerInterfaces\n{\n    private interface PrivateInterface\n    {\n        public String CA = \"CONST A\";\n        String CB = \"CONST b\";\n        public void ma();\n        void mb();\n    }\n    interface PackageInnerInterface\n    {\n        public String CA = \"CONST A\";\n        String CB = \"CONST b\";\n        public void ma();\n        void mb();\n    }\n    protected interface ProtectedInnerInterface\n    {\n        public String CA = \"CONST A\";\n        String CB = \"CONST b\";\n        public void ma();\n        void mb();\n    }\n    public interface PublicInnerInterface\n    {\n        public String CA = \"CONST A\";\n        String CB = \"CONST b\";\n        public void ma(); \n        void mb(); \n    }\n    private\n    class\n    MyClass1 {\n    }\n    class\n    MyClass2 {\n    }\n    private\n    interface\n    MyInterface1 {\n    }\n    interface\n    MyInterface2 {\n    }\n    protected\n    enum\n    MyEnum {\n    }\n    private\n    @interface\n    MyAnnotation {\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodSetterGetter.java",
      "expected-problems": 17,
      "expected-linenumbers": [
        18,
        23,
        28,
        33,
        39,
        43,
        48,
        54,
        59,
        64,
        66,
        70,
        74,
        78,
        80,
        86,
        87
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodSetterGetter\n{\n    private int mNumber;\n    public void setNumber(final int number) \n    {\n        mNumber = number;\n    }\n    public int getNumber() \n    {\n        return mNumber;\n    }\n    public void setNumber1() \n    {\n        mNumber = mNumber;\n    }\n    public void setNumber2(int number) \n    {\n        mNumber = number;\n        firePropertyChanged();\n    }\n    public void getNumber2() \n    {\n    }\n    public int getCost1(int forMe) \n    {\n        return 666;\n    }\n    public int getCost2() \n    {\n        mNumber = 4;\n        return 666;\n    }\n    public int getCost3() throws Exception \n    {\n        return 666;\n    }\n    public boolean isSomething() \n    {\n        return false;\n    }\n    private void firePropertyChanged(){} \n    Object setObject(Object object) { \n        return new Object();\n    }\n    Object getNext() { \n        throw new UnsupportedOperationException();\n    }\n    public void setWithoutAssignment(Object object) { \n        object.notify();\n    }\n    InputMissingJavadocMethodSetterGetter() {} \n    public InputMissingJavadocMethodSetterGetter(Object object) throws Exception {} \n}\ninterface TestInterface {\n    void setObject(Object object); \n    Object getObject(); \n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodSetterGetter2.java",
      "expected-problems": 14,
      "expected-linenumbers": [
        28,
        33,
        39,
        43,
        48,
        54,
        64,
        66,
        70,
        74,
        78,
        80,
        86,
        87
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodSetterGetter2\n{\n    private int mNumber;\n    public void setNumber(final int number)\n    {\n        mNumber = number;\n    }\n    public int getNumber()\n    {\n        return mNumber;\n    }\n    public void setNumber1() \n    {\n        mNumber = mNumber;\n    }\n    public void setNumber2(int number) \n    {\n        mNumber = number;\n        firePropertyChanged();\n    }\n    public void getNumber2() \n    {\n    }\n    public int getCost1(int forMe) \n    {\n        return 666;\n    }\n    public int getCost2() \n    {\n        mNumber = 4;\n        return 666;\n    }\n    public int getCost3() throws Exception \n    {\n        return 666;\n    }\n    public boolean isSomething()\n    {\n        return false;\n    }\n    private void firePropertyChanged(){} \n    Object setObject(Object object) { \n        return new Object();\n    }\n    Object getNext() { \n        throw new UnsupportedOperationException();\n    }\n    public void setWithoutAssignment(Object object) { \n        object.notify();\n    }\n    InputMissingJavadocMethodSetterGetter2() {} \n    public InputMissingJavadocMethodSetterGetter2(Object object) throws Exception {} \n}\ninterface TestInterface2 {\n    void setObject(Object object); \n    Object getObject(); \n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodSetterGetter4.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        20,
        22,
        27
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodSetterGetter4 {\n    private int mNumber;\n    public void setNumber(final int number) throws Exception {\n        mNumber = number; \n    }\n    public int Cost1() \n    {\n        return 666;\n    }\n    public int getCost1(int forMe) \n    {\n        return 666;\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodSmallMethods.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        68
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\npublic class InputMissingJavadocMethodSmallMethods extends Some\n{\n    int foo1()\n    {\n        return 1;\n    }\n    String foo2()\n    {\n            return \"Fooooooooooooooo\"\n                + \"ooooo\"\n                + \"ooo\";\n    }\n    void foo3()\n    {\n        foo2();\n    }\n    void foo4() {}\n    int foo5()\n    {\n        return 1;\n    }\n    String foo6()\n    {\n        return \"Fooooooooooooooo\"\n                + \"oooooooo\";\n    }\n    String foo7() \n    {\n        return \"Fooooooooooooooo\"\n                + \"ooooo\"\n                + \"ooo\";\n    }\n    void foo8()\n    {\n        foo2();\n    }\n    void foo9() {\n    }\n    @MyAnnotation\n    String foo10()\n    {\n        return \"Fooooooooooooooo\"\n                + \"ooooo\"\n                + \"ooo\";\n    }\n    @Override\n    protected String foo11()\n    {\n        return \"Fooooo\"\n                        + \"ooo\"\n                        + \"ooooooo\"\n                + \"ooooo\"\n                + \"ooo\";\n    }\n}\n@interface MyAnnotation {}\nclass Some {\n    protected String foo11() {\n        return \"4\";\n    }\n}"
    },
    {
      "description": "Auto test from InputMissingJavadocMethodTags.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        20,
        335,
        345
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.javadoc.missingjavadocmethod;\nimport java.io.IOException;\nclass InputJavadocMethodTags1\n{\n    private int mMissingJavadoc;\n    void method1() \n    {\n    }\n    void method2()\n    {\n    }\n    int method3()\n    {\n        return 3;\n    }\n    int method4(int aOne)\n    {\n        return aOne;\n    }\n    void method5()\n        throws Exception\n    {\n    }\n    void method6()\n        throws Exception\n    {\n    }\n    void method7()\n        throws Exception, NullPointerException\n    {\n    }\n    void method8(int aOne)\n    {\n    }\n    void method9(int aOne)\n    {\n    }\n    void method10(int aOne, int aTwo)\n    {\n    }\n    void method11()\n    {\n    }\n    int method12()\n    {\n        return 0;\n    }\n    void method13(int aOne, int aTwo, int aThree, int aFour, int aFive)\n    {\n    }\n    void method14(int aOne)\n    {\n    }\n    void method14()\n       throws java.io.IOException\n    {\n    }\n    static\n    {\n        int x = 1; \n    }\n    {\n        int z = 2; \n    }\n    private static final int\n        ON_SECOND_LINE = 2;\n    void method15()\n       throws java.io.IOException\n    {\n    }\n    public String toString()\n    {\n        return super.toString();\n    }\n    static final int serialVersionUID = 666;\n    void method16(int aOne)\n    {\n    }\n    void method17()\n        throws IllegalMonitorStateException\n    {\n    }\n    void method18()\n        throws IOException\n    {\n        throw new IOException(\"to make compiler happy\");\n    }\n    void method19()\n        throws java.io.IOException\n    {\n        throw new IOException(\"to make compiler happy\");\n    }\n    int method20()\n    {\n        return 579190;\n    }\n    void method21()\n       throws IOException\n    {\n    }\n    void method22()\n       throws IOException\n    {\n    }\n    void method23() throws WrongException\n    {\n    }\n    void method24() throws IOException\n    {\n    }\n    void method25()\n    {\n    }\n    int method26()\n    { return 0;\n    }\n    int method27(int aParam)\n    { return 0;\n    }\n    int method28(int aParam)\n    { return 0;\n    }\n    public int foo(Object _arg) {\n        return 1;\n    }\n    int method29(int aParam)\n    { return 0;\n    }\n}\nenum InputJavadocMethodTagsEnum\n{\n    CONSTANT_A,\n    CONSTANT_B,\n    CONSTANT_C\n    {\n        public void someMethod()\n        {\n        }\n        public void someOtherMethod() \n        {\n        }\n    }\n}\n@interface InputJavadocMethodTagsAnnotation\n{\n    String someField(); \n    int A_CONSTANT = 0;\n    int B_CONSTANT = 1;\n    String someField2();\n    String someField3();\n}\npublic class InputMissingJavadocMethodTags {\n    public InputMissingJavadocMethodTags() {\n    }\n    public final String myMethod(final String arg1,\n                                 final Object arg2)\n      throws Exception\n    {\n        return null;\n    }\n}\nclass WrongException extends RuntimeException\n{\n}\n@interface InputInterfaceTest {\n    String[] results() default {};\n}\nclass MoreExamples {\n    public void setAlgorithm(String algorithm) {}\n}"
    }
  ]
}