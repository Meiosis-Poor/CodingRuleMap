{
  "name": "InterfaceIsType",
  "language": "java",
  "description": "<div>\n Implements Joshua Bloch, Effective Java, Item 17 -\n Use Interfaces only to define types.\n </div>\n\n <p>\n According to Bloch, an interface should describe a <em>type</em>. It is therefore\n inappropriate to define an interface that does not contain any methods\n but only constants. The Standard interface\n <a href=\"https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingConstants.html\">\n javax.swing.SwingConstants</a> is an example of an interface that would be flagged by this check.\n </p>\n\n <p>\n The check can be configured to also disallow marker interfaces like {@code java.io.Serializable},\n that do not contain methods or constants at all.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 40,
  "branches": 1,
  "apis": 8,
  "test": [
    {
      "description": "Auto test from InputInterfaceIsType.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.design.interfaceistype;\nclass InputInterfaceIsType\n{\n    interface OK\n    {\n        void method();\n    }\n    interface Marker\n    {\n    }\n    interface ConstantPool \n    {\n        boolean BAD = true;\n    }\n}"
    },
    {
      "description": "Auto test from InputInterfaceIsTypeAllowMarker.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        20,
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.design.interfaceistype;\nclass InputInterfaceIsTypeAllowMarker\n{\n    interface OK\n    {\n        void method();\n    }\n    interface Marker \n    {\n    }\n    interface ConstantPool \n    {\n        boolean BAD = true;\n    }\n}"
    }
  ]
}