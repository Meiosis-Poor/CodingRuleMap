{
  "name": "SeparatorWrap",
  "language": "java",
  "description": "<div>\n Checks line wrapping with separators.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 66,
  "branches": 4,
  "apis": 17,
  "test": [
    {
      "description": "Auto test from InputSeparatorWrapForArrayDeclarator.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\nclass InputSeparatorWrapForArrayDeclarator {\n    protected int[] arrayDeclarationWithGoodWrapping = new int[\n            ] {1, 2};\n    protected int[] arrayDeclarationWithBadWrapping = new int\n            [] {1, 2}; \n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapForEllipsis.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        18
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\nclass InputSeparatorWrapForEllipsis {\n    public void testMethodWithGoodWrapping(String...\n            parameters) {\n    }\n    public void testMethodWithBadWrapping(String\n            ...parameters) { \n    }\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapForTestComma.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        46
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\npublic class InputSeparatorWrapForTestComma<T extends FooForTestComma\n        & BarForTestComma> {\n    public void goodCase() throws FooException4TC, BarException4TC\n    {\n        int i = 0;\n        String s = \"ffffooooString\";\n        s\n                .isEmpty(); \n        s.isEmpty();\n        try {\n            foo(i, s);\n        } catch (FooException4TC |\n                BarException4TC e) {}\n        foo(i,\n                s); \n    }\n    public static void foo(int i, String s) throws FooException4TC, BarException4TC\n    {\n    }\n}\nclass badCaseForTestComma<T extends FooForTestComma &  BarForTestComma> {\n    public void goodCaseForTestComma(int... aFoo) throws FooException4TC, BarException4TC\n    {\n        String s = \"ffffooooString\";\n        s.\n                isEmpty(); \n        try {\n            foo(1, s);\n        } catch (FooException4TC\n                | BarException4TC e) {}\n        foo(1\n                ,s);  \n        int[] i;\n    }\n    public static String foo(int i, String s) throws FooException4TC, BarException4TC\n    {\n        return new StringBuilder(\"\")\n                .append(\"\", 0, 1)\n                .append(\"\")\n                .toString();\n    }\n}\ninterface FooForTestComma {\n}\ninterface BarForTestComma {\n}\nclass FooException4TC extends Exception {\n}\nclass BarException4TC extends Exception {\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapForTestDot.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        37
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\npublic class InputSeparatorWrapForTestDot<T extends FooForTestDot\n        & BarForTestDot> {\n    public void goodCase() throws FooExceptionForTestDot, BarExceptionForTestDot\n    {\n        int i = 0;\n        String s = \"ffffooooString\";\n        s\n                .isEmpty(); \n        s.isEmpty();\n        try {\n            foo(i, s);\n        } catch (FooExceptionForTestDot |\n                BarExceptionForTestDot e) {}\n        foo(i,\n                s); \n    }\n    public static void foo(int i, String s) throws FooExceptionForTestDot, BarExceptionForTestDot\n    {\n    }\n}\nclass badCaseForTestDot<T extends FooForTestDot &  BarForTestDot> {\n    public void goodCaseForTestDot(int... aFoo)throws FooExceptionForTestDot, BarExceptionForTestDot\n    {\n        String s = \"ffffooooString\"; \n        s.\n                isEmpty(); \n        try {\n            foo(1, s);\n        } catch (FooExceptionForTestDot\n                | BarExceptionForTestDot e) {}\n        foo(1\n                ,s);  \n        int[] i;\n    }\n    public static String foo(int i, String s) throws FooExceptionForTestDot, BarExceptionForTestDot\n    {\n        return new StringBuilder(\"\")\n                .append(\"\", 0, 1)\n                .append(\"\")\n                .toString();\n    }\n}\ninterface FooForTestDot {\n}\ninterface BarForTestDot {\n}\nclass FooExceptionForTestDot extends Exception {\n}\nclass BarExceptionForTestDot extends Exception {\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapForTestMethodRef.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        23
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\nimport java.util.Arrays;\npublic class InputSeparatorWrapForTestMethodRef {\n    void goodCase() {\n        String[] stringArray = { \"Barbara\", \"James\", \"Mary\", \"John\",\n            \"Patricia\", \"Robert\", \"Michael\", \"Linda\" };\n        Arrays.sort(stringArray, String\n                ::compareToIgnoreCase);\n    }\n    void badCase() {\n        String[] stringArray = { \"Barbara\", \"James\", \"Mary\", \"John\",\n            \"Patricia\", \"Linda\" }; \n                compareToIgnoreCase);\n    }\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapForTestTrailingWhitespace.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        12,
        17
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\npublic class InputSeparatorWrapForTestTrailingWhitespace {\n    String s;\n    int a,  \n            b;\n    public void foo(int a,  \n                    int b) {\n        int r\n            , t;\n    }\n    public void bar(int p\n            , int q) {\n    }\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapSetOptionTrim.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\nimport java.util.Arrays;\npublic class InputSeparatorWrapSetOptionTrim {\n    void Method() {\n        String[] stringArray = { \"Barbara\", \"James\", \"Mary\", \"John\",\n            \"Patricia\", \"Linda\" }; \n            Arrays.sort(stringArray, String::\n                compareToIgnoreCase);\n    }\n}"
    },
    {
      "description": "Auto test from InputSeparatorWrapWithEmoji.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        13,
        13,
        17,
        25,
        39,
        39
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.separatorwrap;\nimport java.util.Arrays;\npublic class InputSeparatorWrapWithEmoji {\n    protected String[] s1 = new String[\n        ] {\"ü•≥\", \"üò†\", \"üò®\"}; \n                        parameters) { \n    }\n    public void test2(String\n        String s = \"ffffooooString\";\n            isEmpty(); \n        try {\n            test2(\"2\", s);\n        } catch (Exception e) {}\n        test1(\"1\"\n    }\n    void goodCase() {\n        String[] stringArray =\n            {\n                \"üåè\", \"üåîüåü\", \"QWERTY\", \"üßõüèª\", \"John\",\n            compareToIgnoreCase); \n    }\n}"
    }
  ]
}