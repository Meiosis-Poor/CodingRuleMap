{
  "name": "EmptyLineSeparator",
  "language": "java",
  "description": "<div>\n Checks for empty line separators before package, all import declarations,\n fields, constructors, methods, nested classes,\n static initializers and instance initializers.\n </div>\n\n <p>\n Checks for empty line separators before not only statements but\n implementation and documentation comments and blocks as well.\n </p>\n\n <p>\n ATTENTION: empty line separator is required between token siblings,\n not after line where token is found.\n If token does not have a sibling of the same type, then empty line\n is required at its end (for example for CLASS_DEF it is after '}').\n Also, trailing comments are skipped.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 407,
  "branches": 78,
  "apis": 71,
  "test": [
    {
      "description": "Auto test from InputEmptyLineSeparator.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        13,
        30,
        33,
        34,
        37,
        46,
        56,
        68,
        105
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.io.Serializable; \nimport java.util.ArrayList; \nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.Callable;\nimport java.util.Collections;\nimport java.io.PrintWriter;\nimport javax.swing.AbstractAction; /* ok: no trailing comment\n*/\nimport org.apache.commons.beanutils.locale.converters.ByteLocaleConverter;\nimport org.apache.commons.beanutils.BasicDynaBean;\nclass InputEmptyLineSeparator \n{\n    public static final double FOO_PI = 3.1415;\n    private boolean flag = true; \n    static { \n    }\n    { \n    }\n    {\n    }\n    private InputEmptyLineSeparator() \n    {\n    }\n    public int compareTo(Object aObject) \n    {\n        int number = 0;\n        return 0;\n    }\n    public int compareTo2(Object aObject) \n    {\n        int number = 0;\n        return 0;\n    }\n    public static <T> Callable<T> \n    callable(Runnable task, T result) {\n        return null;\n    }\n    public static <T> Callable<T> callable2(Runnable task, T result)\n    {\n        return null;\n    }\n    public static <T> Callable<T> callable3(Runnable task, T result)\n    {\n        return null;\n    }\n    public int getBeastNumber()\n    {\n        return 666;\n    }\n    interface IntEnum { \n    }\n    class InnerClass {\n        public static final double FOO_PI_INNER = 3.1415;\n        private boolean flagInner = true;\n        {\n        }\n        private InnerClass()\n        {\n        }\n    }\n    class SecondInnerClass {\n        private int intVariable;\n    }\n}\nclass Class2{\n    public int compareTo(InputEmptyLineSeparator aObject)\n    {\n        int number = 0;\n        return 0;\n    }\n    Class2 anon = new Class2(){\n        public int compareTo(InputEmptyLineSeparator aObject)\n        {\n            int number = 0;\n            return 0;\n        }\n    };\n}\nclass Class3 {\n    int field;\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparator2.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        13,
        30,
        34,
        39,
        46,
        56,
        68,
        105
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.io.Serializable; \nimport java.util.ArrayList; \nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.Callable;\nimport java.util.Collections;\nimport java.io.PrintWriter;\nimport javax.swing.AbstractAction; /* ok: no trailing comment\n*/\nimport org.apache.commons.beanutils.locale.converters.ByteLocaleConverter;\nimport org.apache.commons.beanutils.BasicDynaBean;\nclass InputEmptyLineSeparator2 \n{\n    public static final double FOO_PI = 3.1415;\n    private boolean flag = true;\n    static { \n    }\n    {\n    }\n    {\n    }\n    private InputEmptyLineSeparator2() \n    {\n    }\n    public int \n    compareTo(Object aObject) {\n        int number = 0;\n        return 0;\n    }\n    public int compareTo2(Object aObject) \n    {\n        int number = 0;\n        return 0;\n    }\n    public static <T> Callable<T> \n    callable(Runnable task, T result) {\n        return null;\n    }\n    public static <T> Callable<T> callable2(Runnable task, T result)\n    {\n        return null;\n    }\n    public static <T> Callable<T> callable3(Runnable task, T result)\n    {\n        return null;\n    }\n    public int getBeastNumber()\n    {\n        return 666;\n    }\n    interface IntEnum { \n    }\n    class InnerClass {\n        public static final double FOO_PI_INNER = 3.1415;\n        private boolean flagInner = true;\n        {\n        }\n        private InnerClass()\n        {\n        }\n    }\n    class SecondInnerClass {\n        private int intVariable;\n    }\n}\nclass Class22{\n    public int compareTo(InputEmptyLineSeparator aObject)\n    {\n        int number = 0;\n        return 0;\n    }\n    Class2 anon = new Class2(){\n        public int compareTo(InputEmptyLineSeparator aObject)\n        {\n            int number = 0;\n            return 0;\n        }\n    };\n}\nclass Class32 {\n    int field;\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorAnnotations.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        17
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorAnnotations {\n    @Deprecated\n    @SuppressWarnings(\"unchecked\")\n    class SomeClass {} \n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorBlockCommentUnderPackage.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorBlockCommentUnderPackage\n{\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorClassDefinitionAndCommentNotSeparatedFromPackage.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        13,
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class \nInputEmptyLineSeparatorClassDefinitionAndCommentNotSeparatedFromPackage {\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorClassPackageSeparation.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        13,
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorClassPackageSeparation {\n  int test0(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorEmptyLineAfterPackageForPackageAst.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        11
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport java.util.Arrays;\nimport java.util.Objects;\npublic class InputEmptyLineSeparatorEmptyLineAfterPackageForPackageAst {\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorEnumMembers.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        19,
        24,
        27,
        28,
        35,
        37
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorEnumMembers {}\nenum A {\n    ONE(\"one\"),\n    TWO(\"two\");\n    private final String str; \n    private String otherString;\n    private String thirdString; \n    private String fourth; \n    A(String s) { \n        this.str = s;\n    }\n    private String fifth;\n    static { \n    }\n    static { \n    }\n    public String getStr() {\n        return str;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorInterfaceFields.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        18,
        21,
        31,
        34,
        44
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic interface InputEmptyLineSeparatorInterfaceFields {\n    int a = 45;\n    int b = 45;\n    int c = 45; \n    int d = 45; \n}\n@interface Ann {\n    int a = 45;\n    int b = 45;\n    int c = 45; \n    int d = 45; \n}\ninterface Abc {\n    Object apply(Object array, int index);\n    Abc A = (o, i) -> new Object();\n    Abc B = (o, i) -> o; \n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorJavadocCommentAfterPackage.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        1
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport java.util.Map;\npublic class InputEmptyLineSeparatorJavadocCommentAfterPackage {\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorModifierUnderPackage.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class \nInputEmptyLineSeparatorModifierUnderPackage {}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleEmptyLines.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        14,
        19,
        23,
        26,
        33,
        36
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.util.*; \nimport java.io.*;\npublic class \nInputEmptyLineSeparatorMultipleEmptyLines {\n    private int counter; \n    private Object obj = null; \n    private int k;\n    private static void foo() {} \n    private static void foo1() {} \n}\nclass Test2 {\n    void testFor()\n    {\n        for (int i = 1; i < 5; i++) {\n        }\n        for(int i = 1;i < 5;i++);\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleEmptyLinesInside.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        17,
        29,
        35,
        39,
        41,
        52
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic abstract class InputEmptyLineSeparatorMultipleEmptyLinesInside\n{\n    public InputEmptyLineSeparatorMultipleEmptyLinesInside() {\n    }\n    private int counter;\n    private Object obj = null;\n    abstract int generateSrc(String s);\n    static {\n    }\n    {\n    }\n    private static void foo() { \n    }\n}\nclass \nSecondClassReturnWithVeryVeryVeryLongName{}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleEmptyLinesInside2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        52
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic abstract class InputEmptyLineSeparatorMultipleEmptyLinesInside2\n{\n    public InputEmptyLineSeparatorMultipleEmptyLinesInside2() {\n    }\n    private int counter;\n    private Object obj = null;\n    abstract int generateSrc(String s);\n    static {\n    }\n    {\n    }\n    private static void foo() {\n    }\n}\nclass \nSecondClassReturnWithVeryVeryVeryLongName2{}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleEmptyLinesInside3.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        50
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic abstract class InputEmptyLineSeparatorMultipleEmptyLinesInside3\n{\n    public InputEmptyLineSeparatorMultipleEmptyLinesInside3() {\n    }\n    private int counter;\n    private Object obj = null;\n    abstract int generateSrc(String s);\n    static {\n    }\n    {\n    }\n    private static void foo() {\n    }\n}\nclass \nSecondClassReturnWithVeryVeryVeryLongName3{}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleLines2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        14
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace\n.emptylineseparator; import java.util.function.Supplier;\npublic class \nInputEmptyLineSeparatorMultipleLines2 {}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorMultipleLines3.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorMultipleLines3 {\n    String str10a = \"\"\"\n             foo\n        bar\"\"\";\n    String str10b = \"\"\"\n             foo\n        bar\"\"\"; \n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorNewMethodDef.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        28,
        35
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport java.util.ArrayList;\npublic class InputEmptyLineSeparatorNewMethodDef {\n    private static final int MULTIPLICATOR;\n    void processOne() {\n        int a;\n        int b;\n        new ArrayList<String>() {\n            {\n                add(\"String One\");\n                add(\"String Two\"); \n                add(\"String Three\");\n            }\n        }.add(\"String Four\");\n    }\n    static { \n        MULTIPLICATOR = 5;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorPostFixCornerCases.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        18,
        32,
        41,
        43
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorPostFixCornerCases {\n    protected void foo1() throws Exception {\n        int a = 25;\n        foo(a);\n    }\n    void foo(int a) {\n        System.out.println(a);\n    }\n    protected void foo() {\n        Object[] defaults = new Object[] {\n                \"String One\",\n                \"String Two\",\n        };\n    }\n    protected void foo2() {\n        Object[] defaults = new Object[] { \n            \"String One\", 13,\n            \"String Two\", \n        };\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorPreviousLineEmptiness.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        20,
        24,
        30,
        39,
        48
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorPreviousLineEmptiness {\n    private static final int MULTIPLICATOR;\n    private int base;\n    static {\n        MULTIPLICATOR = 5; \n    }\n    { \n        base = 33;\n    }\n    public InputEmptyLineSeparatorPreviousLineEmptiness(int base) { \n        this.base = base;\n    }\n    public InputEmptyLineSeparatorPreviousLineEmptiness() {\n    }\n    public static int increment(int value) { \n        return value * MULTIPLICATOR + 1;\n    }\n    void foo2() {\n    }\n    void foo3() { \n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorRecordsAndCompactCtors.java",
      "expected-problems": 14,
      "expected-linenumbers": [
        17,
        19,
        20,
        21,
        22,
        24,
        25,
        27,
        28,
        29,
        34,
        35,
        40,
        41
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \npublic class InputEmptyLineSeparatorRecordsAndCompactCtors {\n    record InBetween1(int x, int y) {}\n    record MyRecord1(String foo) { \n        public static final int FOO_CONST = 1;\n        public void method() {} \n        public MyRecord1{} \n        MyRecord1(int x){this(\"string\");} \n        static{} \n    }\n    record InBetween2(int x, int y) {} \n    class MyClass1 { \n        public static final int FOO_CONST = 1;\n        public void method() {} \n        public MyClass1(){} \n        MyClass1(String foo){} \n    }\n    record recordCompactCtors1(){\n        void method1(){}\n        public recordCompactCtors1{} \n        void method2(){} \n    }\n    record recordCompactCtors2(){\n        public static final int X = 1;\n        public recordCompactCtors2{} \n        public static final int Y = 1; \n    }\n    record MyRecord2(String foo) {\n        public static final int FOO_CONST = 1;\n        public void method() {}\n        public MyRecord2{}\n        MyRecord2(int x){this(\"string\");}\n        static{}\n    }\n    record InBetween3(int x, int y) {}\n    class MyClass2 {\n        public static final int FOO_CONST = 1;\n        public void method() {}\n        public MyClass2(){}\n        MyClass2(String foo){}\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorRecordsAndCompactCtorsNoEmptyLines.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        16,
        22
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \npublic class InputEmptyLineSeparatorRecordsAndCompactCtorsNoEmptyLines {\n    public void foo() { \n    }\n    public record MyRecord1(){\n        public MyRecord1{ \n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorRecursive.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport java.io.IOException;\npublic class InputEmptyLineSeparatorRecursive {\n    int foo1() throws Exception {\n        int a = 1;\n        int b = 2;\n        try {\n            if (a != b) {\n                throw new IOException();\n            }\n        } catch(IOException e) {\n            System.out.println(\"IO error: \" + e.getMessage());\n            return 1;\n        }\n        return 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorSingleCommentUnderPackage.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\npublic class InputEmptyLineSeparatorSingleCommentUnderPackage\n{\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorSingleLineCommentAfterPackage.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.util.Map;\npublic class InputEmptyLineSeparatorSingleLineCommentAfterPackage {\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorStaticImport.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport static java.util.List.of;\nimport static java.util.Calendar.MONTH;\npublic class InputEmptyLineSeparatorStaticImport \n{\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorWithComments.java",
      "expected-problems": 37,
      "expected-linenumbers": [
        12,
        12,
        22,
        29,
        40,
        57,
        68,
        73,
        77,
        83,
        91,
        96,
        103,
        116,
        129,
        136,
        146,
        161,
        178,
        184,
        188,
        194,
        206,
        219,
        233,
        237,
        241,
        257,
        266,
        279,
        284,
        290,
        296,
        307,
        313,
        333,
        333
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.lang.Object; \nimport java.lang.Class;\nimport java.lang.Integer;\nimport java.lang.Long;\nimport java.lang.Float;\nimport java.lang.Double;\nimport java.lang.Character;\nimport java.lang.String;\nimport java.lang.Object;\nimport java.lang.Boolean;\nimport java.lang.Byte;\nimport java.lang.Short;\nimport java.lang.Number;\nimport java.lang.Runnable; \nimport java.lang.Thread;\nimport java.lang.StringBuilder;\nimport static java.lang.Math.abs;\npublic class InputEmptyLineSeparatorWithComments {\n    public int testViolationWithoutComment = 1; \n    public int testNoViolationWithoutComment = 2;\n    public int testViolationWithSingleLineComment = 3;\n    public int testNoViolationWithSingleLineComment = 4;\n    public int testViolationWithMultilineComment = 5;\n    public int testNoViolationWithMultilineComment = 6;\n    public int testViolationWithJavadoc = 7;\n    public int testNoViolationWithJavadoc = 8;\n    public void testViolationWithoutComment() { \n    }\n    public void testNoViolationWithoutComment() {\n    }\n    public void testViolationWithSingleLineComment() {\n    }\n    public void testNoViolationWithSingleLineComment() {\n    }\n     * Should have\n     * violation\n     */\n    public void testViolationWithMultilineComment() {\n    }\n    public void testNoViolationWithMultilineComment() {\n    }\n    public void testViolationWithJavadoc() {\n    }\n    public void testNoViolationWithJavadoc() {\n    }\n    public static class Class1 { }\n    public static class Class2 { } \n    public static class Class3 { }\n    public static class Class4 { }\n    public\n    static class Class5 { }\n    public\n    static class Class6 { }\n    public static class Class7 { }\n    public static class Class8 { }\n    public static class Class9 { }\n    public static class Class10 {\n        {\n        }\n    }\n    public interface Interface1 { }\n    public interface Interface2 { }\n    public\n    interface Interface3 { }\n    interface Interface4 { }\n    interface Interface5 { }\n    public enum Enum1 {\n        E1, E2\n    }\n    public enum Enum2 { }\n    public enum Enum3 { }\n    public enum Enum4 { }\n    public enum Enum5 { }\n    public\n    static\n    enum Enum6 { }\n    static {\n        abs(2);\n    }\n    {\n       abs(1);\n    }\n    { }\n    {\n        int i = 1;\n    }\n        testNoViolationWithJavadoc = 1;\n    }\n        testNoViolationWithJavadoc = 1;\n    }\n    public InputEmptyLineSeparatorWithComments(int i, int j) {\n        testNoViolationWithJavadoc = 1;\n    }\n    public InputEmptyLineSeparatorWithComments(int i, int j, int k) {\n        testNoViolationWithJavadoc = 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorWithComments2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        237
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \nimport java.lang.Object;\nimport java.lang.Class;\nimport java.lang.Integer;\nimport java.lang.Long;\nimport java.lang.Float;\nimport java.lang.Double;\nimport java.lang.Character;\nimport java.lang.String;\nimport java.lang.Object;\nimport java.lang.Boolean;\nimport java.lang.Byte;\nimport java.lang.Short;\nimport java.lang.Number;\nimport java.lang.Runnable;\nimport java.lang.Thread;\nimport java.lang.StringBuilder;\nimport static java.lang.Math.abs;\npublic class InputEmptyLineSeparatorWithComments2 {\n    public int testViolationWithoutComment = 1;\n    public int testNoViolationWithoutComment = 2;\n    public int testViolationWithSingleLineComment = 3;\n    public int testNoViolationWithSingleLineComment = 4;\n    public int testViolationWithMultilineComment = 5;\n    public int testNoViolationWithMultilineComment = 6;\n    public int testViolationWithJavadoc = 7;\n    public int testNoViolationWithJavadoc = 8;\n    public void testViolationWithoutComment() {\n    }\n    public void testNoViolationWithoutComment() {\n    }\n    public void testViolationWithSingleLineComment() {\n    }\n    public void testNoViolationWithSingleLineComment() {\n    }\n    public void testViolationWithMultilineComment() {\n    }\n    public void testNoViolationWithMultilineComment() {\n    }\n    public void testViolationWithJavadoc() {\n    }\n    public void testNoViolationWithJavadoc() {\n    }\n    public static class Class1 { }\n    public static class Class2 { }\n    public static class Class3 { }\n    public static class Class4 { }\n    public\n    static class Class5 { }\n    public\n    static class Class6 { }\n    public static class Class7 { }\n    public static class Class8 { }\n    public static class Class9 { }\n    public static class Class10 {\n        {\n        }\n    }\n    public interface Interface1 { }\n    public interface Interface2 { }\n    public \n    interface Interface3 { }\n    interface Interface4 { }\n    interface Interface5 { }\n    public enum Enum1 {\n        E1, E2\n    }\n    public enum Enum2 { }\n    public enum Enum3 { }\n    public enum Enum4 { }\n    public enum Enum5 { }\n    public\n    static\n    enum Enum6 { }\n    static {\n        abs(2);\n    }\n    {\n       abs(1);\n    }\n    { }\n    {\n        int i = 1;\n    }\n        testNoViolationWithJavadoc = 1;\n    }\n        testNoViolationWithJavadoc = 1;\n    }\n    public InputEmptyLineSeparatorWithComments2(int i, int j) {\n        testNoViolationWithJavadoc = 1;\n    }\n    public InputEmptyLineSeparatorWithComments2(int i, int j, int k) {\n        testNoViolationWithJavadoc = 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorWithEmoji.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        18,
        24,
        32,
        41
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator; \npublic class InputEmptyLineSeparatorWithEmoji {\n    String s = \"👉🏻sas\"; \n            String s2 = \"sasds👇🏻\";\n    String s3 = \"👆🏻\"; \n    void foo()\n    {\n        for (int i = 1; i < 5; i++) {\n        }\n        for(int i = 1;i < 5;i++);\n    }\n}\nclass InputEmptyLineSeparatorWithEmoji2{ public static boolean foo2() {return \"😂 \".equals(\"da👉🏻\");}\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorWithJavadoc.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        27,
        43,
        51,
        56,
        65,
        73,
        86,
        93,
        104
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport org.junit.Ignore;\npublic class InputEmptyLineSeparatorWithJavadoc {\n  int test0(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  void myMethod() {}\n  void myMethod2() {\n    int tab0 = 1;\n  }\n  int test1(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test2(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test3(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test4(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test5(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test6(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  } \n  int test7(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  int test8(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  } \n  int test9(int badFormat1, int badFormat2, final int badFormat3) throws Exception {\n    return 0;\n  }\n  @Ignore\n  @Deprecated\n  public void foo6() {\n      return;\n  }\n}"
    },
    {
      "description": "Auto test from InputEmptyLineSeparatorWithJavadoc2.java",
      "expected-problems": 6,
      "expected-linenumbers": [
        66,
        71,
        79,
        90,
        101,
        112
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.whitespace.emptylineseparator;\nimport javax.annotation.Nullable;\npublic class InputEmptyLineSeparatorWithJavadoc2 {\n  public static class Good {\n      public int [][] myInt = null;\n      public int myOtherInt[][] = null;\n      public static\n          int [][] test10() throws Exception {\n        return new int [][] {};\n      }\n      public static\n          int [] test11() throws Exception {\n        return new int [] {};\n      }\n      public static\n          int [] test12() throws Exception {\n        return new int [] {};\n      }\n      public static\n          @Nullable int [] test13() throws Exception {\n        return new int [] {};\n      }\n  }\n  public static class Bad {\n    public int [][] myInt = null;\n    public int myOtherInt[][] = null;\n    public static\n        int [][] test10() throws Exception {\n      return new int [][] {};\n    }\n    public static\n        int [] test11() throws Exception {\n      return new int [] {};\n    }\n    public static\n        int [] test12() throws Exception {\n      return new int [] {};\n    }\n    public static\n        @Nullable int [] test13() throws Exception {\n      return new int [] {};\n    }\n  }\n}"
    }
  ]
}