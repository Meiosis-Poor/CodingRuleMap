{
  "name": "LineLength",
  "language": "java",
  "description": "<div>\n Checks for long lines.\n </div>\n\n <p>\n Rationale: Long lines are hard to read in printouts or if developers\n have limited screen space for the source code, e.g. if the IDE displays\n additional information like project tree, class hierarchy, etc.\n </p>\n <ul>\n <li>\n The calculation of the length of a line takes into account the number of\n expanded spaces for a tab character ({@code '\\t'}). The default number of spaces is {@code 8}.\n To specify a different number of spaces, the user can set\n <a href=\"https://checkstyle.org/config.html#Checker\">{@code Checker}</a>\n property {@code tabWidth} which applies to all Checks, including {@code LineLength};\n or can set property {@code tabWidth} for {@code LineLength} alone.\n </li>\n <li>\n By default, package and import statements (lines matching pattern {@code ^(package|import) .*})\n are not verified by this check.\n </li>\n <li>\n Trailing comments are taken into consideration while calculating the line length.\n <pre>\n import java.util.regex.Pattern; // The length of this comment will be taken into consideration\n </pre>\n In the example above the length of the import statement is just 31 characters but total length\n will be 94 characters.\n </li>\n </ul>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 31,
  "branches": 2,
  "apis": 15,
  "test": [
    {
      "description": "Auto test from InputLineLengthIgnoringImportStatements.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        15,
        18,
        27
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\npublic class InputLineLengthIgnoringImportStatements {\n    @Override\n    public String toString() {\n        String s = \"import java.security.interfaces.RSAMultiPrimePrivateCrtKey;\";\n        String a = \"\"\"\n            import java.security.       interfaces.      RSAMultiPrimePrivateCrtKey;\n            \"\"\";\n        String b = \"\"\"\nimport java.          security.          interfaces.    RSAMultiPrimePrivateCrtKey;\n            \"\"\"; \n        return \"This line is longer than 60 characters and should be logged\";\n    }\n}"
    },
    {
      "description": "Auto test from InputLineLengthIgnoringPackageStatements.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        14,
        17,
        26
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\npublic class InputLineLengthIgnoringPackageStatements {\n    @Override\n    public String toString() {\n        String s = \"package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\";\n        String a = \"\"\"\n            package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\n            \"\"\";\n        String b = \"\"\"\npackage com.puppycrawl.tools.checkstyle.    checks.sizes.     linelength;\n            \"\"\";\n        return \"This line is longer than 60 characters and should be logged\";\n    }\n}"
    },
    {
      "description": "Auto test from InputLineLengthLongImportStatements.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        17
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\nimport java.util.                                                                 HashMap;\nimport java.util.                                                                 HashSet;\npublic class InputLineLengthLongImportStatements {\n    @Override\n    public String toString() {\n        return \"This is very long line that should be logged because it is not import\"; \n    }\n}"
    },
    {
      "description": "Auto test from InputLineLengthLongLink.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        10
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\npublic class InputLineLengthLongLink {\n}"
    },
    {
      "description": "Auto test from InputLineLengthSimple1One.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        22
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\nfinal class InputLineLengthSimple1One\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws Exception\n    {\n        return 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputLineLengthSimple1Two.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        86
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\nfinal public class InputLineLengthSimple1Two {\n    private void longMethod()\n    {\n    }\n    private InputLineLengthSimple1Two()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0;\n        final int CDE = 0;\n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3;\n}"
    },
    {
      "description": "Auto test from InputLineLengthSimpleOne.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        21
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\nfinal class InputLineLengthSimpleOne\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws Exception\n    {\n        return 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputLineLengthSimpleTwo.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        85
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\nfinal public class InputLineLengthSimpleTwo {\n    private void longMethod()\n    {\n    }\n    private InputLineLengthSimpleTwo()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0;\n        final int CDE = 0;\n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3;\n}"
    },
    {
      "description": "Auto test from InputLineLengthUnicodeChars.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        14,
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\npublic class InputLineLengthUnicodeChars {\n    String aaaaaaa = \"1234567890123456789012345678901234567890\" + \"1234567890123456789012345\" + \"_\";\n    String aaaaaab = \"1234567890123456789012345678901234567890\" + \"1234567890123456789012345\" + \"ðŸ’©\";\n    String aaaaaac = \"This line is too long, and will be reported by checkstyle.  This line is 137 characters long, excluding unicode.\"; \n    String aaaaaad = \"This line is too long, and will be reported by checkstyle.ðŸ’©ðŸ’©This line is 137 characters long, including unicode.\"; \n}"
    },
    {
      "description": "Auto test from InputLineLengthUnmappableCharacters.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.sizes.linelength;\npublic class InputLineLengthUnmappableCharacters {\n    String a = \"á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€á¾€\"; \n}"
    }
  ]
}