{
  "name": "ConstructorsDeclarationGrouping",
  "language": "java",
  "description": "<div>\n Checks that all constructors are grouped together.\n If there is any non-constructor code separating constructors,\n this check identifies and logs a violation for those ungrouped constructors.\n The violation message will specify the line number of the last grouped constructor.\n Comments between constructors are allowed.\n </div>\n\n <p>\n Rationale: Grouping constructors together in a class improves code readability\n and maintainability. It allows developers to easily understand\n the different ways an object can be instantiated\n and the tasks performed by each constructor.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 71,
  "branches": 4,
  "apis": 29,
  "test": [
    {
      "description": "Auto test from InputConstructorsDeclarationGrouping.java",
      "expected-problems": 7,
      "expected-linenumbers": [
        23,
        28,
        45,
        55,
        59,
        63,
        66
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.constructorsdeclarationgrouping;\npublic class InputConstructorsDeclarationGrouping {\n    int a;\n    int b;\n    void foo() {}\n    InputConstructorsDeclarationGrouping() {}\n    InputConstructorsDeclarationGrouping(String a) {}\n    void foo2() {}\n    InputConstructorsDeclarationGrouping(int a) {}\n    int abc;\n    InputConstructorsDeclarationGrouping(double x) {}\n    private enum InnerEnum1 {\n        one;\n        int x;\n        InnerEnum1() {}\n        InnerEnum1(String f) {}\n        String str;\n        String str2;\n        InnerEnum1(int x) {}\n        private abstract class Inner {\n            Inner() {}\n            int x;\n            String neko;\n            Inner(String g) {}\n        }\n        InnerEnum1(double d) {}\n    }\n    InputConstructorsDeclarationGrouping(float x) {}\n    InputConstructorsDeclarationGrouping(long l) {}\n}"
    },
    {
      "description": "Auto test from InputConstructorsDeclarationGroupingInner.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        29,
        34,
        37,
        41
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.constructorsdeclarationgrouping;\npublic class InputConstructorsDeclarationGroupingInner {\n    InputConstructorsDeclarationGroupingInner() {}\n    private class Inner {\n        Inner() {}\n        Inner(String str) {}\n        Inner(int x) {}\n    }\n    private class Inner2 {\n        Inner2() {}\n        Inner2(String str) {}\n        int x;\n        Inner2(int x) {}\n        String xx;\n        Inner2(double d) {}\n        Inner2(float f) {}\n    }\n    InputConstructorsDeclarationGroupingInner(long l, double d) {}\n    InputConstructorsDeclarationGrouping annoynmous = new InputConstructorsDeclarationGrouping() {\n        int x;\n        void test() {}\n        void test2() {}\n    };\n    private enum InnerEnum2 {\n        ONE,TWO,THREE;\n        void test() {}\n        void test2() {}\n        void test3() {}\n    }\n    private enum InnerEnum3 {\n        InnerEnum3() {}\n    }\n    private enum InnerEnum4 {}\n    private class Inner3 {\n        void test() {}\n        void test2() {}\n        void test3() {}\n    }\n    private class Inner4 {\n        Inner4() {}\n    }\n    private class Inner5 {}\n}"
    }
  ]
}