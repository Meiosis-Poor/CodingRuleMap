{
  "name": "AvoidNoArgumentSuperConstructorCall",
  "language": "java",
  "description": "<div>\n Checks if call to superclass constructor without arguments is present.\n Such invocation is redundant because constructor body implicitly\n begins with a superclass constructor invocation {@code super();}\n See <a href=\"https://docs.oracle.com/javase/specs/jls/se13/html/jls-8.html#jls-8.8.7\">\n specification</a> for detailed information.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 30,
  "branches": 1,
  "apis": 10,
  "test": [
    {
      "description": "Auto test from InputAvoidNoArgumentSuperConstructorCall.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        11,
        16,
        21
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.avoidnoargumentsuperconstructorcall;\npublic class InputAvoidNoArgumentSuperConstructorCall extends java.util.ArrayList {\n    public InputAvoidNoArgumentSuperConstructorCall() {\n        super();\n    }\n    public InputAvoidNoArgumentSuperConstructorCall(int a, long b) {\n        super();\n    }\n    public InputAvoidNoArgumentSuperConstructorCall(long a, long b) {\n        super(\n        );\n    }\n    public InputAvoidNoArgumentSuperConstructorCall(int a) {\n        super(10);\n    }\n    public InputAvoidNoArgumentSuperConstructorCall(int a, int b) {\n        super(a);\n    }\n}\nclass WithTypeArgs {\n    public WithTypeArgs() {\n        <String> super();\n    }\n}\nclass Outer {\n    class InnerNonStatic {\n        public InnerNonStatic() {\n        }\n    }\n}\nclass Derived extends Outer.InnerNonStatic {\n    public Derived(Outer s) {\n        s.super(); \n    }\n    public Derived() {\n        new Outer().super(); \n    }\n}"
    }
  ]
}