{
  "name": "SimplifyBooleanReturn",
  "language": "java",
  "description": "<div>\n Checks for over-complicated boolean return or yield statements.\n For example the following code\n </div>\n <pre>\n if (valid())\n   return false;\n else\n   return true;\n </pre>\n\n <p>\n could be written as\n </p>\n <pre>\n return !valid();\n </pre>\n\n <p>\n The idea for this Check has been shamelessly stolen from the equivalent\n <a href=\"https://pmd.github.io/pmd/pmd_rules_java_design.html#simplifybooleanreturns\">\n     PMD</a> rule.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 57,
  "branches": 7,
  "apis": 13,
  "test": [
    {
      "description": "Auto test from InputSimplifyBooleanReturn.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        19,
        33
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.simplifybooleanreturn;\npublic class InputSimplifyBooleanReturn\n{\n    public static boolean isOddMillis()\n    {\n        boolean even = System.currentTimeMillis() % 2 == 0;\n        if (even == true) { \n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    public static boolean isOddMillis2()\n    {\n        boolean even = System.currentTimeMillis() % 2 == 0;\n        if (!even) \n            return true;\n        else\n            return false;\n    }\n    public static boolean giveMeTrue()\n    {\n        boolean tt = isOddMillis() || true;\n        boolean ff = isOddMillis() && false;\n        return !false || (true != false);\n    }\n    public void tryToProvokeNPE()\n    {\n        if (true) {\n        }\n        else {\n        }\n        if (true) {\n            return;\n        }\n        else {\n            return;\n        }\n    }\n    public boolean ifNoElse()\n    {\n        if (isOddMillis()) {\n            return true;\n        }\n        return false;\n    }\n    boolean a() {\n        boolean asd = false;\n        boolean dasa = true;\n        if (asd) {\n            return true;\n        } else {\n            return dasa;\n        }\n    }\n    boolean aa() {\n        boolean asd = false;\n        boolean dasa = true;\n        if (asd) {\n            return dasa;\n        } else {\n            return true;\n        }\n    }\n    boolean b() {\n        boolean asd = false;\n        if(asd);\n        else;\n        return true;\n    }\n}"
    }
  ]
}