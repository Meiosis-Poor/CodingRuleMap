{
  "name": "EqualsHashCode",
  "language": "java",
  "description": "<div>\n Checks that classes that either override {@code equals()} or {@code hashCode()} also\n overrides the other.\n This check only verifies that the method declarations match {@code Object.equals(Object)} and\n {@code Object.hashCode()} exactly to be considered an override. This check does not verify\n invalid method names, parameters other than {@code Object}, or anything else.\n </div>\n\n <p>\n Rationale: The contract of {@code equals()} and {@code hashCode()} requires that\n equal objects have the same hashCode. Therefore, whenever you override\n {@code equals()} you must override {@code hashCode()} to ensure that your class can\n be used in hash-based collections.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 77,
  "branches": 8,
  "apis": 26,
  "test": [
    {
      "description": "Auto test from InputEqualsHashCodeEqualsParameter.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        15,
        23,
        53,
        58,
        70,
        73,
        80,
        87,
        102
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.equalshashcode;\npublic class InputEqualsHashCodeEqualsParameter {\n    public static class TestClass1 {\n        public boolean equals(String o) {\n            return true;\n        }\n    }\n    public static class TestClass2 {\n        public int hashCode() { \n            return 1;\n        }\n        public boolean equals(String o) {\n            return true;\n        }\n    }\n    public static class TestClass3 {\n        public boolean equals(Object o) { \n            return true;\n        }\n        public boolean equals(String o) {\n            return false;\n        }\n    }\n    public static class TestClass4 {\n        public int hashCode() {\n            return 1;\n        }\n        public boolean equals(Object o) {\n            return true;\n        }\n        public boolean equals(String o) {\n            return false;\n        }\n    }\n    public static class TestClass5 {\n        public int hashCode() {\n            return 1;\n        }\n        public boolean equals(java.lang.Object o) {\n            return true;\n        }\n    }\n    public static class TestClass6 {\n        public static int hashCode(int i) {\n            return 1;\n        }\n        public boolean equals(Object o) { \n            return true;\n        }\n    }\n    public static class TestClass7 {\n        public int hashCode() { \n            return 1;\n        }\n        public static boolean equals(Object o, Object o2) {\n            return true;\n        }\n    }\n    public static class TestClass8 {\n        public native int hashCode();\n        public native boolean equals(Object o);\n    }\n    public static class TestClass9 {\n        public native int hashCode(); \n    }\n    public static class TestClass10 {\n        public native boolean equals(Object o); \n    }\n    public static abstract class TestClass11 {\n        public abstract int hashCode();\n        public abstract boolean equals(Object o);\n    }\n    public static abstract class TestClass12 {\n        public int hashCode() { \n            return 1;\n        }\n        public abstract boolean equals(Object o);\n    }\n    public static abstract class TestClass13 {\n        public abstract int hashCode();\n        public boolean equals(java.lang.Object o) { \n            return true;\n        }\n    }\n    public interface TestClass14 {\n        public int hashCode();\n        public boolean equals(Object o);\n    }\n    public interface TestClass15 {\n        public boolean equals(Object o);\n    }\n    public interface TestClass16 {\n        public int hashCode();\n    }\n    public class TestClass17 {\n        public int hashCode() { \n            return 1;\n        }\n        public int hashCode(int val) {\n            return 1;\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputEqualsHashCodeNoEquals.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.equalshashcode;\npublic class InputEqualsHashCodeNoEquals {\n    public int hashCode() { \n        return 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputEqualsHashCodeSemanticTwo.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        36
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.equalshashcode;\nimport java.awt.*;\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nclass InputEqualsHashCodeSemanticTwo\n{\n    public class EqualsVsHashCode4\n    {\n        ByteArrayOutputStream bos1 = new ByteArrayOutputStream()\n        {\n            public boolean equals(Object a)\n            {\n                return true;\n            }\n            public int hashCode()\n            {\n                return 0;\n            }\n        };\n        ByteArrayOutputStream bos2 = new ByteArrayOutputStream()\n        {\n            public boolean equals(Object a) \n            {\n                return true;\n            }\n        };\n    }\n    public void triggerEmptyBlockWithoutBlock()\n    {\n        if (true)\n            return;\n    }\n    {\n    }\n    public class EqualsVsHashCode5\n    {\n        public <A> boolean equals(int a) \n        {\n            return a == 1;\n        }\n    }\n    public class EqualsVsHashCode6\n    {\n        public <A> boolean equals(Comparable<A> a)\n        {\n            return true;\n        }\n    }\n}"
    }
  ]
}