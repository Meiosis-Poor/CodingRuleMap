{
  "name": "DeclarationOrder",
  "language": "java",
  "description": "<div>\n Checks that the parts of a class, record, or interface declaration appear in the order\n suggested by the\n <a href=\"https://checkstyle.org/styleguides/sun-code-conventions-19990420/CodeConventions.doc2.html#a1852\">\n Code Conventions for the Java Programming Language</a>.\n </div>\n\n <p>\n According to\n <a href=\"https://checkstyle.org/styleguides/sun-code-conventions-19990420/CodeConventions.doc2.html#a1852\">\n Code Conventions for the Java Programming Language</a>, the parts of a class\n or interface declaration should appear in the following order:\n </p>\n <ol>\n <li>\n Class (static) variables. First the public class variables, then\n protected, then package level (no access modifier), and then private.\n </li>\n <li> Instance variables. First the public class variables, then\n protected, then package level (no access modifier), and then private.\n </li>\n <li> Constructors </li>\n <li> Methods </li>\n </ol>\n\n <p>\n Purpose of <b>ignore*</b> option is to ignore related violations,\n however it still impacts on other class members.\n </p>\n\n <p>ATTENTION: the check skips class fields which have\n <a href=\"https://docs.oracle.com/javase/specs/jls/se11/html/jls-8.html#jls-8.3.3\">\n forward references </a> from validation due to the fact that we have Checkstyle's limitations\n to clearly detect user intention of fields location and grouping. For example:\n </p>\n <pre>\n public class A {\n   private double x = 1.0;\n   private double y = 2.0;\n   public double slope = x / y; // will be skipped from validation due to forward reference\n }\n </pre>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 182,
  "branches": 46,
  "apis": 36,
  "test": [
    {
      "description": "Auto test from InputDeclarationOrder.java",
      "expected-problems": 21,
      "expected-linenumbers": [
        13,
        18,
        23,
        26,
        31,
        39,
        56,
        66,
        92,
        104,
        111,
        118,
        123,
        128,
        131,
        136,
        144,
        154,
        164,
        190,
        196
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\npublic class InputDeclarationOrder\n{\n    static final int FOO2 = 3;\n    public static final int FOO = 3; \n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3; \n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\"; \n    public static final String WARNING = \"warning\"; \n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3; \n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public InnerClass(int start)\n        {\n            int foo = start;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    public InputDeclarationOrder() \n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 13;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 14;\n    }\n    private int mFoo = 0; \n}\nenum InputDeclarationOrderEnum\n{\n    ENUM_VALUE_1,\n    ENUM_VALUE_2,\n    ENUM_VALUE_3\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public void doIt()\n        {\n        }\n        public static final int INNER_FOO3 = 2; \n    };\n    static final int FOO2 = 3;\n    public static final int FOO = 3; \n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3; \n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\"; \n    public static final String WARNING = \"warning\"; \n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3; \n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    InputDeclarationOrderEnum() \n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 2;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 1;\n    }\n    private int mFoo = 0; \n    class AsyncProcess {\n        private final int startLogErrorsCnt = 0;\n        protected final int maxTotalConcurrentTasks=0; \n    }\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderAvoidDuplicatesInStaticFinalFields.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        13
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\npublic class InputDeclarationOrderAvoidDuplicatesInStaticFinalFields\n{\n    private boolean allowInSwitchCase;\n    public static final String \n            MSG_KEY_BLOCK_NESTED = \"block.nested\";\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderForwardReference.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        20,
        20,
        22,
        23,
        24,
        25,
        30,
        49,
        68
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Calendar;\npublic class InputDeclarationOrderForwardReference {\n    public static final int TAB_LENGTH = 4;\n    private static final ArrayList<String> EMPTY_ARRAY_LIST = new ArrayList<String>();\n    public static final int MAX_INT = Integer.MAX_VALUE;\n    public static final int MAX_BYTE = Byte.MIN_VALUE;\n    public static final int ROWS = 18; \n    public static final int COLUMNS = 18; \n    public static final int TYPE_SIZE = 12; \n    public static final int TABLE_SIZE = 184; \n    public static final int INFRASTRUCTURE_SIZE = TYPE_SIZE\n        + MAX_BYTE\n        + TABLE_SIZE;\n    public  static final int MAX_LINE_LENGTH = 96 + TAB_LENGTH;\n    public static final double MIN_MATCH = 0.60; \n    public static final double EXACT_CLASS_NAME_MATCH = MIN_MATCH + 0.1;\n    private static final String COMMON_PART = \"common_part\";\n    public static final String FIRST = COMMON_PART + \"2\";\n    private static final String SECOND = String.valueOf(Calendar.MONDAY) + FIRST;\n    public static final String THIRD = FIRST;\n    private static int ID = 5;\n    public static final String FOURTH = \"1\"\n        + ID\n        + COMMON_PART;\n    private int a = 1;\n    public int b = a + 2;\n    public static void foo1() {}\n    public static final double MAX = 0.60; \n    public static void foo2() {}\n    void foo3() {\n        int i = 5;\n    }\n}\nclass InputDeclarationOrderFieldAnonymousClass {\n    private static final String[] REQUIRED_WORKDS = new String[] { \"copyright\" };\n    enum RequiredHeaderPlacement {\n        TEMP;\n        public static String[] labels() {\n            String[] labels = new String[values().length];\n            return labels;\n        }\n    }\n    public static final String[]           \n            HEADER_PLACEMENT_DESCRIPTOR = RequiredHeaderPlacement.labels();\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderInterfaceMemberScopeIsPublic.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        19
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\npublic interface InputDeclarationOrderInterfaceMemberScopeIsPublic {\n  public static final int explicitPublicField1 = 0;\n  static final int implicitPublicField1 = 0;\n  public static final int explicitPublicField2 = 0;\n  void method();\n  static final int implicitPublicField2 = 0;\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderOnlyConstructors.java",
      "expected-problems": 7,
      "expected-linenumbers": [
        49,
        59,
        85,
        103,
        139,
        149,
        175
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\npublic class InputDeclarationOrderOnlyConstructors\n{\n    static final int FOO2 = 3;\n    public static final int FOO = 3;\n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3;\n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\";\n    public static final String WARNING = \"warning\";\n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3;\n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2;\n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public InnerClass(int start)\n        {\n            int foo = start;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    public InputDeclarationOrderOnlyConstructors() \n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 13;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 14;\n    }\n    private int mFoo = 0; \n}\nenum InputDeclarationOrderEnum2\n{\n    ENUM_VALUE_1,\n    ENUM_VALUE_2,\n    ENUM_VALUE_3\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2;\n        public void doIt()\n        {\n        }\n        public static final int INNER_FOO3 = 2; \n    };\n    static final int FOO2 = 3;\n    public static final int FOO = 3;\n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3;\n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\";\n    public static final String WARNING = \"warning\";\n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3;\n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2;\n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    InputDeclarationOrderEnum2() \n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 2;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 1;\n    }\n    private int mFoo = 0; \n    class AsyncProcess {\n        private final int startLogErrorsCnt = 0;\n        protected final int maxTotalConcurrentTasks = 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderOnlyModifiers.java",
      "expected-problems": 19,
      "expected-linenumbers": [
        13,
        18,
        23,
        26,
        31,
        39,
        56,
        91,
        103,
        110,
        117,
        122,
        127,
        130,
        135,
        143,
        153,
        188,
        196
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\npublic class InputDeclarationOrderOnlyModifiers\n{\n    static final int FOO2 = 3;\n    public static final int FOO = 3; \n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3; \n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\";\n    public static final String WARNING = \"warning\"; \n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3; \n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public InnerClass(int start)\n        {\n            int foo = start;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    public InputDeclarationOrderOnlyModifiers()\n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 13;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 14;\n    }\n    private int mFoo = 0; \n}\nenum InputDeclarationOrderEnum3\n{\n    ENUM_VALUE_1,\n    ENUM_VALUE_2,\n    ENUM_VALUE_3\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public void doIt()\n        {\n        }\n        public static final int INNER_FOO3 = 2; \n    };\n    static final int FOO2 = 3;\n    public static final int FOO = 3; \n    private static final int FOO3 = 3;\n    public static final int FOO4 = 3; \n    private static final String ERROR = \"error\";\n    protected static final String ERROR1 = \"error\"; \n    public static final String WARNING = \"warning\"; \n    private int mMaxInitVars = 3;\n    public static final int MAX_ITER_VARS = 3; \n    private class InnerClass\n    {\n        private static final int INNER_FOO = 2;\n        public static final int INNER_FOO2 = 2; \n        public InnerClass()\n        {\n            int foo = INNER_FOO;\n            foo += INNER_FOO2;\n            foo += INNER_FOO3;\n        }\n        public static final int INNER_FOO3 = 2; \n    }\n    public int getFoo1()\n    {\n        return mFoo;\n    }\n    InputDeclarationOrderEnum3()\n    {\n        String foo = ERROR;\n        foo += ERROR1;\n        foo += WARNING;\n        int fooInt = mMaxInitVars;\n        fooInt += MAX_ITER_VARS;\n        fooInt += mFoo;\n    }\n    public static int getFoo2()\n    {\n        return 2;\n    }\n    public int getFoo()\n    {\n        return mFoo;\n    }\n    private static int getFoo21()\n    {\n        return 1;\n    }\n    private int mFoo = 0; \n    class AsyncProcess {\n        private final int startLogErrorsCnt = 0;\n        protected final int maxTotalConcurrentTasks = 0;\n    }\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderRecordsAndCompactCtors.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        19,
        22,
        31,
        34,
        42
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\nimport java.util.HashMap;\npublic class InputDeclarationOrderRecordsAndCompactCtors {\n    public record MyRecord1() {\n        private static int a;\n        void m() {\n        }\n        public MyRecord1() { \n        }\n        private static int b; \n    }\n    public record MyRecord2() {\n        private static int a;\n        void m() {\n        }\n        public MyRecord2 { \n        }\n        private static int b; \n    }\n    public record MyRecord3(String myString, Integer number) {\n        record MyInnerRecord(int z){}\n        static int x = 43;\n        public MyRecord3{}\n        private static final HashMap<String,\n                Integer> hashMap = new HashMap<>();\n    }\n}"
    },
    {
      "description": "Auto test from InputDeclarationOrderVariableAccess.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        21
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.declarationorder;\nimport java.io.InputStream;\nimport java.io.IOException;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Map;\npublic class InputDeclarationOrderVariableAccess {\n    public static final String TYPE = new String(\"significant_terms\");\n    private static final Map<String, String> BUCKETS_MAP = Collections.emptyMap();\n    public static final \n    InputDeclarationOrderVariableAccess.Stream STREAM =\n            new InputDeclarationOrderVariableAccess.Stream() {\n        @Override\n        public InputDeclarationOrderVariableAccess readResult(InputStream in) throws IOException {\n            InputDeclarationOrderVariableAccess buckets = new InputDeclarationOrderVariableAccess();\n            buckets.readFrom(in);\n            return buckets;\n        }\n    };\n    InputDeclarationOrderVariableAccess() {}\n    public void readFrom(InputStream in) throws IOException {\n    }\n    static class Stream {\n        public InputDeclarationOrderVariableAccess readResult(InputStream in) throws IOException {\n            return null;\n        }\n    }\n}"
    }
  ]
}