{
  "name": "StringLiteralEquality",
  "language": "java",
  "description": "<div>\n Checks that string literals are not used with <code>==</code> or <code>&#33;=</code>.\n Since <code>==</code> will compare the object references, not the actual value of the strings,\n <code>String.equals()</code> should be used.\n More information can be found\n <a href=\"https://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java/\">\n in this article</a>.\n </div>\n\n <p>\n Rationale: Novice Java programmers often use code like:\n </p>\n <pre>\n if (x == \"something\")\n </pre>\n\n <p>\n when they mean\n </p>\n <pre>\n if (\"something\".equals(x))\n </pre>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 43,
  "branches": 3,
  "apis": 10,
  "test": [
    {
      "description": "Auto test from InputStringLiteralEquality.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        16,
        20,
        25
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.stringliteralequality;\nimport java.util.Locale;\npublic class InputStringLiteralEquality\n{\n    void foo(String name)\n    {\n        if (name == \"Lars\") \n        {\n        }\n        if (\"Oleg\" == name) \n        {\n        }\n        if (\"Oliver\" == \"Oliver\") \n        {\n        }\n        String compare = \"Rick\";\n        if (name == compare)\n        {\n        }\n        if (\"Rick\".toUpperCase(Locale.getDefault()) == \"Rick\".toLowerCase(Locale.getDefault()))\n        {\n        }\n    }\n    public static boolean isMethod(Integer value) {\n        return value.intValue() != value.intValue() + 1;\n    }\n}"
    },
    {
      "description": "Auto test from InputStringLiteralEqualityCheck.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        32
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.stringliteralequality;\npublic class InputStringLiteralEqualityCheck {\n    int method(int a) {\n        if (a == 2 + 3\n                + 5 + 2) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n    boolean method() {\n        boolean result = false;\n        if (result == false && 3 - 0 == 9) {\n        }\n        return result;\n    }\n    boolean method2() {\n        boolean result = false;\n        String str = \"check\";\n        if (result == false && 3 - 0 == 9\n                && str == \"check\" + \"Style\"\n                + \"code\" + \"convention\") {\n        }\n        return result;\n    }\n}"
    },
    {
      "description": "Auto test from InputStringLiteralEqualityCheckTextBlocks.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        12,
        22,
        25,
        28
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.stringliteralequality;\npublic class InputStringLiteralEqualityCheckTextBlocks {\n    void method() {\n        String status1 = \"pending\";\n        boolean flag1 = (status1 == \"done\"); \n        boolean flag2 = (status1.equals(\"done\"));\n        String status2 = \"\"\"\n                pending\"\"\";\n        if (status2 == \"\"\"\n                done\"\"\") {} \n        while (status2 != \"\"\"\n                done\"\"\") {} \n        boolean flag3 = (status2 == \"\"\"\n                done\"\"\"); \n        boolean flag4 = (status2.equals(\"\"\"\n                done\"\"\"));\n    }\n}"
    },
    {
      "description": "Auto test from InputStringLiteralEqualityConcatenatedString.java",
      "expected-problems": 11,
      "expected-linenumbers": [
        13,
        15,
        18,
        21,
        26,
        29,
        32,
        35,
        37,
        39,
        41
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.stringliteralequality;\npublic class InputStringLiteralEqualityConcatenatedString {\n    public void testMethod() {\n        String s = \"abc\";\n        String p = \"asd\";\n        if (s == \"a\" + \"bc\") { \n        }\n        if (\"a\" + \"bc\" == s) { \n        }\n        if (\"a\" + (\"b\" + \"c\") != s) { \n        }\n        if (s == \"a\" + \"b\" + \"c\") { \n        }\n        if ((s += \"asd\") != p) { \n        }\n        if ((s += \"asd\") == s + (p + \"asd\")) { \n        }\n        if ((s += \"asd\") != s + \"p\" + p) { \n        }\n        if (s != s + \"p\" + p) { \n        }\n        String a = (s + \"asd\") == null ? \"asd\" : s; \n        String b = s + \"ab\" + p != null ? s : p; \n        String c = (\"ab\" + s) != null ? \n                (p + \"ab\" == null ? p : s) : p; \n    }\n}"
    },
    {
      "description": "Auto test from InputStringLiteralEqualityConcatenatedTextBlocks.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        15,
        20,
        25,
        31,
        38,
        42,
        46,
        50,
        52
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.coding.stringliteralequality;\npublic class InputStringLiteralEqualityConcatenatedTextBlocks {\n    public void testMethod() {\n        String s = \"abc\";\n        String p = \"asd\";\n        if (s == \"\"\"\n                a\"\"\" + \"bc\") { \n        }\n        if (\"\"\"\n                a\"\"\" + \"\"\"\n                bc\"\"\" == s) { \n        }\n        if (\"a\" + (\"\"\"\n                b\"\"\" + \"\"\"\n                c\"\"\") != s) { \n        }\n        if (s == \"\"\"\n                a\"\"\" + \"\"\"\n                b\"\"\" + \"\"\"\n                c\"\"\") { \n        }\n        if ((s += \"\"\"\n                asd\"\"\") != p) { \n        }\n        if ((s += \"asd\") == s + (p + \"\"\"\n                asd\"\"\")) { \n        }\n        if ((s += \"asd\") != s + \"\"\"\n                p\"\"\" + p) { \n        }\n        if (s != s + \"\"\"\n                p\"\"\" + p) { \n        }\n        String c = (\"\"\"\n                ab\"\"\" + s) != null ? \n                (p + \"\"\"\n                        ab\"\"\" == null ? p : s) : p; \n    }\n}"
    }
  ]
}