{
  "name": "LocalFinalVariableName",
  "language": "java",
  "description": "<div>\n Checks that local final variable names conform to a specified pattern.\n  A catch parameter and resources in try statements\n are considered to be a local, final variables.\n </div>\n\n <p>\n This check does not support final pattern variables. Instead, use\n <a href=\"https://checkstyle.org/checks/naming/patternvariablename.html#PatternVariableName\">\n PatternVariableName</a>.\n </p>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 35,
  "branches": 2,
  "apis": 9,
  "test": [
    {
      "description": "Auto test from InputLocalFinalVariableName.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        125
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.localfinalvariablename;\nimport java.io.*;\nfinal class InputLocalFinalVariableName\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws java.lang.Exception\n    {\n        return 0;\n    }\n    private void longMethod()\n    {\n    }\n    private InputLocalFinalVariableName()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0;\n        final int CDE = 0; \n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3;\n    void errorColumnAfterTabs()\n    {\n                int tab0 =1;\n                int tab1 =1;\n                 int tab2 =1;\n                int tab3 =1;\n                    int tab4 =1;\n                  int tab5 =1;\n    }\n    void veryLong()\n    {\n    }\n    void toManyArgs(int aArg1, int aArg2, int aArg3, int aArg4, int aArg5,\n                    int aArg6, int aArg7, int aArg8, int aArg9)\n    {\n    }\n}\nclass InputLocalFinalVariableName2\n{\n    public void doSomething()\n    {\n        for (Object O : new java.util.ArrayList())\n        {\n        }\n    }\n}\nenum InputLocalFinalVariableNameEnum1\n{\n    ABC,\n    XYZ;\n    private int someMember;\n}"
    },
    {
      "description": "Auto test from InputLocalFinalVariableName1.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        122
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.localfinalvariablename;\nfinal class InputLocalFinalVariableName1\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws Exception\n    {\n        return 0;\n    }\n    private void longMethod()\n    {\n    }\n    private InputLocalFinalVariableName1()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0; \n        final int CDE = 0;\n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3;\n    void errorColumnAfterTabs()\n    {\n                int tab0 =1;\n                int tab1 =1;\n                 int tab2 =1;\n                int tab3 =1;\n                    int tab4 =1;\n                  int tab5 =1;\n    }\n    void veryLong()\n    {\n    }\n    void toManyArgs(int aArg1, int aArg2, int aArg3, int aArg4, int aArg5,\n                    int aArg6, int aArg7, int aArg8, int aArg9)\n    {\n    }\n}\nclass InputLocalFinalVariableName3\n{\n    public void doSomething()\n    {\n        for (Object O : new java.util.ArrayList())\n        {\n        }\n    }\n}\nenum InputLocalFinalVariableNameEnum2\n{\n    ABC,\n    XYZ;\n    private int someMember;\n}"
    },
    {
      "description": "Auto test from InputLocalFinalVariableNameTryResources.java",
      "expected-problems": 5,
      "expected-linenumbers": [
        30,
        41,
        62,
        80,
        84
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.localfinalvariablename;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Arrays;\nimport java.util.PropertyResourceBundle;\nimport java.util.zip.ZipFile;\npublic class InputLocalFinalVariableNameTryResources {\n    void method() throws Exception {\n        final String fileName = \"Test\";\n        final BufferedReader br = new BufferedReader(new InputStreamReader(\n                new FileInputStream(fileName), StandardCharsets.UTF_8));\n        try {\n        } finally {\n            br.close();\n        }\n    }\n    void method2() throws Exception {\n        final String fileName = \"Test\";\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(\n                new FileInputStream(fileName), StandardCharsets.UTF_8))) {\n        } finally {\n        }\n    }\n    void method3() throws Exception {\n        final String fileName = \"Test\";\n        try (final BufferedReader BR = new BufferedReader(new InputStreamReader(\n                new FileInputStream(fileName), StandardCharsets.UTF_8))) {\n        } finally {\n        }\n    }\n    void method4() throws Exception {\n        final String fileName = \"Test\";\n        try (BufferedReader BR = new BufferedReader(new InputStreamReader(\n                new FileInputStream(fileName), StandardCharsets.UTF_8));\n             ZipFile zf = new ZipFile(fileName)) { \n        } finally {\n        }\n    }\n    void method5() throws Exception {\n        final String fileName = \"Test\";\n        try (BufferedReader BR = new BufferedReader(new InputStreamReader(\n                new FileInputStream(fileName), StandardCharsets.UTF_8));\n             ZipFile ZF = new ZipFile(fileName)) {\n        } finally {\n        }\n    }\n    void method6() throws Exception {\n        String srcDir = System.getProperty(\"test.src\", \".\");\n        try (FileInputStream fis8859_1 = new FileInputStream(\n                new File(srcDir, \"Bug.properties\"));\n             FileInputStream fisUTF8 = new FileInputStream(new File(srcDir, \"Bug_Utf8.properties\"));\n             InputStreamReader isrutf8 = new InputStreamReader(fisUTF8, \"UTF-8\")) {\n            PropertyResourceBundle bundleUtf8 = new PropertyResourceBundle(isrutf8);\n            PropertyResourceBundle bundle = new PropertyResourceBundle(fis8859_1);\n            String[] arrayUtf8 = {\"1\", \"2\", \"3\"};\n            String[] array = {\"key1\", \"key2\"};\n            if (!Arrays.equals(arrayUtf8, array)) {\n                throw new RuntimeException(\"Error message\");\n            }\n        } catch (IOException ioe) {\n            throw new RuntimeException(ioe);\n        }\n    }\n}"
    }
  ]
}