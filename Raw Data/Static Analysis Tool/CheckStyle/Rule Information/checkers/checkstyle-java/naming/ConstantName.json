{
  "name": "ConstantName",
  "language": "java",
  "description": "<div>\n Checks that constant names conform to a specified pattern.\n A <em>constant</em> is a <strong>static</strong> and <strong>final</strong>\n field or an interface/annotation field, except\n <strong>serialVersionUID</strong> and <strong>serialPersistentFields\n </strong>.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 42,
  "branches": 5,
  "apis": 14,
  "test": [
    {
      "description": "Auto test from InputConstantNameInner.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        29,
        69
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.constantname;\nclass InputConstantNameInner\n{\n    class InnerInner2\n    {\n        public int fData;\n    }\n    interface InnerInterface2\n    {\n        String data = \"zxzc\"; \n        class InnerInterfaceInnerClass\n        {\n            public int rData;\n            protected int protectedVariable;\n            int packageVariable;\n        }\n    }\n    protected static Object sWeird = new Object();\n    static Object sWeird2 = new Object();\n    public interface Inter\n    {\n    }\n     public static void main()\n     {\n        Inter m = new Inter()\n        {\n            private static final int CDS = 1;\n            private int ABC;\n        };\n     }\n    @interface InnerAnnotation\n    {\n        String data = \"zxzc\"; \n    }\n    enum InnerEnum\n    {\n        A,\n        B;\n        public int someValue;\n    }\n}"
    },
    {
      "description": "Auto test from InputConstantNameMemberExtended.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        55,
        56,
        57,
        58,
        59,
        61,
        62,
        63
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.constantname;\npublic class InputConstantNameMemberExtended\n{\n    public int mPublic;\n    protected int mProtected;\n    int mPackage;\n    private int mPrivate;\n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n    class Inner {\n        public int mPublic;\n        protected int mProtected;\n        int mPackage;\n        private int mPrivate;\n        public int _public;\n        protected int _protected;\n        int _package;\n        private int _private;\n    }\n    Inner anon = new Inner() {\n        public int mPublic;\n        protected int mProtected;\n        int mPackage;\n        private int mPrivate;\n        public int _public;\n        protected int _protected;\n        int _package;\n        private int _private;\n    };\n}\ninterface In\n{\n    public int mPublic = 0; \n    int mProtected = 0; \n    int mPackage = 0; \n    int mPrivate = 0; \n    public int _public = 0; \n    int _protected = 0; \n    int _package = 0; \n    int _private = 0; \n}\nenum Direction {\n    NORTH(1),\n    SOUTH(-1),\n    EAST(-2),\n    WEST(2);\n    public int mPublic = 0;\n    int mProtected = 0;\n    int mPackage = 0;\n    int mPrivate = 0;\n    public int _public = 0;\n    int _protected = 0;\n    int _package = 0;\n    int _private = 0;\n    Direction(int code){\n        this.code=code;\n    }\n    protected int code;\n    public int getCode() {\n          return this.code;\n    }\n    static Direction getOppositeDirection(Direction d){\n          return null;\n    }\n}"
    },
    {
      "description": "Auto test from InputConstantNameSimple1.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        23,
        145
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.constantname;\nimport java.io.*;\nfinal class InputConstantNameSimple1\n{\n    public static final int badConstant = 2; \n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws java.lang.Exception\n    {\n        return 0;\n    }\n    private void longMethod()\n    {\n    }\n    private InputConstantNameSimple1()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0;\n        final int CDE = 0;\n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3; \n    void errorColumnAfterTabs()\n    {\n                int tab0 =1;\n                int tab1 =1;\n                 int tab2 =1;\n                int tab3 =1;\n                    int tab4 =1;\n                  int tab5 =1;\n    }\n    void veryLong()\n    {\n    }\n    void toManyArgs(int aArg1, int aArg2, int aArg3, int aArg4, int aArg5,\n                    int aArg6, int aArg7, int aArg8, int aArg9)\n    {\n    }\n}\nclass InputConstantNameSimple21\n{\n    public void doSomething()\n    {\n        for (Object O : new java.util.ArrayList())\n        {\n        }\n    }\n}\nenum MyEnum11\n{\n    ABC,\n    XYZ;\n    private int someMember;\n}"
    },
    {
      "description": "Auto test from InputConstantNameSimple2.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        145
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.constantname;\nfinal class InputConstantNameSimple2\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2;\n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws Exception\n    {\n        return 0;\n    }\n    private void longMethod()\n    {\n    }\n    private InputConstantNameSimple2()\n    {\n    }\n    private void localVariables()\n    {\n        int abc = 0;\n        int ABC = 0;\n        final int cde = 0;\n        final int CDE = 0;\n        for (int k = 0; k < 1; k++)\n        {\n            String innerBlockVariable = \"\";\n        }\n        for (int I = 0; I < 1; I++)\n        {\n            String InnerBlockVariable = \"\";\n        }\n    }\n    void ALL_UPPERCASE_METHOD()\n    {\n    }\n    private static final int BAD__NAME = 3; \n    void errorColumnAfterTabs()\n    {\n                int tab0 =1;\n                int tab1 =1;\n                 int tab2 =1;\n                int tab3 =1;\n                    int tab4 =1;\n                  int tab5 =1;\n    }\n    void veryLong()\n    {\n    }\n    void toManyArgs(int aArg1, int aArg2, int aArg3, int aArg4, int aArg5,\n                    int aArg6, int aArg7, int aArg8, int aArg9)\n    {\n    }\n}\nclass InputConstantNameSimple22\n{\n    public void doSomething()\n    {\n        for (Object O : new java.util.ArrayList())\n        {\n        }\n    }\n}\nenum MyEnum12\n{\n    ABC,\n    XYZ;\n    private int someMember;\n}"
    }
  ]
}