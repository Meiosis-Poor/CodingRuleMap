{
  "name": "PatternVariableName",
  "language": "java",
  "description": "<div>\n Checks that pattern variable names conform to a specified pattern.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 26,
  "branches": 0,
  "apis": 6,
  "test": [
    {
      "description": "Auto test from InputPatternVariableNameEnhancedInstanceofNoSingleChar.java",
      "expected-problems": 18,
      "expected-linenumbers": [
        17,
        22,
        26,
        42,
        43,
        45,
        46,
        48,
        54,
        56,
        57,
        58,
        64,
        68,
        72,
        74,
        75,
        82
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\nimport java.util.*;\nimport java.util.Locale;\npublic class InputPatternVariableNameEnhancedInstanceofNoSingleChar {\n    private Object obj;\n    static boolean doStuff(Object obj) {\n        return obj instanceof Integer OTHER && OTHER > 0; \n    }\n    static {\n        Object o = \"\";\n        if (o instanceof String s) { \n            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n            boolean stringCheck = \"test\".equals(s);\n        }\n        if (o instanceof Integer Count) { \n            int value = Count.byteValue();\n            if (Count.equals(value)) {\n                value = 25;\n            }\n        }\n    }\n    interface VoidPredicate {\n        public boolean get();\n    }\n    public void t(Object o1, Object o2) {\n        Object b;\n        Object c;\n        if (!(o1 instanceof String S) \n                && (o2 instanceof String STRING)) { \n        }\n        if (o1 instanceof String STRING \n                || !(o2 instanceof String STRING)) { \n        }\n        b = ((VoidPredicate) () -> o1 instanceof String s).get(); \n        List<Integer> arrayList = new ArrayList<Integer>();\n        if (arrayList instanceof ArrayList<Integer> ai) {\n            System.out.println(\"Blah\");\n        }\n        boolean result = (o1 instanceof String a) ? \n                (o1 instanceof String x) \n                : (!(o1 instanceof String y)); \n        if (!(o1 instanceof Integer INTEGER) ? false : INTEGER > 0) { \n            System.out.println(\"done\");\n        }\n        {\n            while (!(o1 instanceof String Thing1)) { \n                L3:\n                break L3;\n            }\n            while (o1 instanceof String Thing2) { \n                Thing2.length();\n            }\n        }\n        int x = o1 instanceof String j ? j.length() : 2; \n        x = !(o1 instanceof String j) ? 2 : j.length(); \n        for (; o1 instanceof String j; j.length()) { \n            System.out.println(j);\n        }\n        do {\n            L4:\n            break L4;\n        } while (!(o1 instanceof String s)); \n    }\n}"
    },
    {
      "description": "Auto test from InputPatternVariableNameEnhancedInstanceofTestDefault.java",
      "expected-problems": 9,
      "expected-linenumbers": [
        17,
        26,
        42,
        43,
        45,
        47,
        58,
        65,
        69
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\nimport java.util.*;\nimport java.util.Locale;\npublic class InputPatternVariableNameEnhancedInstanceofTestDefault {\n    private Object obj;\n    static boolean doStuff(Object obj) {\n        return obj instanceof Integer OTHER && OTHER > 0; \n    }\n    static {\n        Object o = \"\";\n        if (o instanceof String s) {\n            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n            boolean stringCheck = \"test\".equals(s);\n        }\n        if (o instanceof Integer Count) { \n            int value = Count.byteValue();\n            if (Count.equals(value)) {\n                value = 25;\n            }\n        }\n    }\n    interface VoidPredicate {\n        public boolean get();\n    }\n    public void t(Object o1, Object o2) {\n        Object b;\n        Object c;\n        if (!(o1 instanceof String S) \n                && (o2 instanceof String STRING)) { \n        }\n        if (o1 instanceof String STRING \n                || !(o2 instanceof String STRING)) { \n        }\n        b = ((VoidPredicate) () -> o1 instanceof String s).get();\n        List<Integer> arrayList = new ArrayList<Integer>();\n        if (arrayList instanceof ArrayList<Integer> ai) {\n            System.out.println(\"Blah\");\n        }\n        boolean result = (o1 instanceof String a) ?\n                (o1 instanceof String x) : (!(o1 instanceof String y));\n        if (!(o1 instanceof Integer INTEGER) ? \n                false : INTEGER > 0) {\n            System.out.println(\"done\");\n        }\n        {\n            while (!(o1 instanceof String Thing1)) { \n                L3:\n                break L3;\n            }\n            while (o1 instanceof String Thing2) { \n                Thing2.length();\n            }\n        }\n        int x = o1 instanceof String j ? j.length() : 2;\n        x = !(o1 instanceof String j) ? 2 : j.length();\n        for (; o1 instanceof String j; j.length()) {\n            System.out.println(j);\n        }\n        do {\n            L4:\n            break L4;\n        } while (!(o1 instanceof String s));\n    }\n}"
    }
  ]
}