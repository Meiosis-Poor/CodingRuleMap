{
  "name": "CatchParameterName",
  "language": "java",
  "description": "<div>\n Checks that {@code catch} parameter names conform to a specified pattern.\n </div>\n\n <p>\n Default pattern has the following characteristic:\n </p>\n <ul>\n <li>allows names beginning with two lowercase letters followed by at least one uppercase or\n lowercase letter</li>\n <li>allows {@code e} abbreviation (suitable for exceptions end errors)</li>\n <li>allows {@code ex} abbreviation (suitable for exceptions)</li>\n <li>allows {@code t} abbreviation (suitable for throwables)</li>\n <li>allows {@code _} for unnamed catch parameters</li>\n <li>prohibits numbered abbreviations like {@code e1} or {@code t2}</li>\n <li>prohibits one letter prefixes like {@code pException}</li>\n <li>prohibits two letter abbreviations like {@code ie} or {@code ee}</li>\n <li>prohibits any other characters than letters</li>\n </ul>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 24,
  "branches": 0,
  "apis": 8,
  "test": [
    {
      "description": "Auto test from InputCatchParameterName.java",
      "expected-problems": 8,
      "expected-linenumbers": [
        24,
        34,
        37,
        40,
        44,
        46,
        50,
        52
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.catchparametername;\npublic class InputCatchParameterName {\n    {\n        try {\n        } catch (Exception e) {\n        }\n        try {\n        } catch (Exception ex) {\n        }\n        try {\n        } catch (Error | Exception err) {\n        }\n        try {\n        } catch (Exception exception) {\n        }\n        try {\n        } catch (Exception exception1) { \n        }\n        try {\n        } catch (Exception noWorries) {\n        }\n        try {\n        } catch (Throwable t) {\n        }\n        try {\n            throw new InterruptedException(\"interruptedException\");\n        } catch (InterruptedException ie) { \n        }\n        try {\n        } catch (Exception iException) { \n        }\n        try {\n        } catch (Exception ok) { \n        }\n        try {\n        } catch (Exception e1) { \n            try {\n            } catch (Exception e2) { \n            }\n        }\n        try {\n        } catch (Throwable t1) { \n            try {\n            } catch (Throwable t2) { \n            }\n        }\n    }\n}"
    },
    {
      "description": "Auto test from InputCatchParameterName2.java",
      "expected-problems": 2,
      "expected-linenumbers": [
        12,
        30
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.catchparametername;\npublic class InputCatchParameterName2 {\n    {\n        try {\n        } catch (Exception e) { \n        }\n        try {\n        } catch (Exception ex) {\n        }\n        try {\n        } catch (Error | Exception err) {\n        }\n        try {\n        } catch (Exception exception) {\n        }\n        try {\n        } catch (Exception exception1) {\n        }\n        try {\n        } catch (Exception noWorries) {\n        }\n        try {\n        } catch (Throwable t) { \n        }\n        try {\n            throw new InterruptedException(\"interruptedException\");\n        } catch (InterruptedException ie) {\n        }\n        try {\n        } catch (Exception iException) {\n        }\n        try {\n        } catch (Exception ok) {\n        }\n        try {\n        } catch (Exception e1) {\n            try {\n            } catch (Exception e2) {\n            }\n        }\n        try {\n        } catch (Throwable t1) {\n            try {\n            } catch (Throwable t2) {\n            }\n        }\n    }\n}"
    }
  ]
}