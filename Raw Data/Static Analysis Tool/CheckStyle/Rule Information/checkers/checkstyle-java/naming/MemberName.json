{
  "name": "MemberName",
  "language": "java",
  "description": "<div>\n Checks that instance variable names conform to a specified pattern.\n </div>",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 31,
  "branches": 3,
  "apis": 10,
  "test": [
    {
      "description": "Auto test from InputMemberName.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        19,
        21,
        22,
        23
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName\n{\n    public int mPublic;\n    protected int mProtected;\n    int mPackage;\n    private int mPrivate;\n    public int _public; \n    protected int _protected; \n    int _package; \n    private int _private; \n}"
    },
    {
      "description": "Auto test from InputMemberName2.java",
      "expected-problems": 4,
      "expected-linenumbers": [
        15,
        16,
        17,
        18
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName2\n{\n    public int mPublic; \n    protected int mProtected; \n    int mPackage; \n    private int mPrivate; \n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberName3.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        15
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName3\n{\n    public int mPublic; \n    protected int mProtected;\n    int mPackage;\n    private int mPrivate;\n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberName4.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        16
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName4\n{\n    public int mPublic;\n    protected int mProtected; \n    int mPackage;\n    private int mPrivate;\n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberName5.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        17
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName5\n{\n    public int mPublic;\n    protected int mProtected;\n    int mPackage; \n    private int mPrivate;\n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberName6.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        18
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName6\n{\n    public int mPublic;\n    protected int mProtected;\n    int mPackage;\n    private int mPrivate; \n    public int _public;\n    protected int _protected;\n    int _package;\n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberName7.java",
      "expected-problems": 3,
      "expected-linenumbers": [
        19,
        21,
        22
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberName7\n{\n    public int mPublic;\n    protected int mProtected;\n    int mPackage;\n    private int mPrivate;\n    public int _public; \n    protected int _protected; \n    int _package; \n    private int _private;\n}"
    },
    {
      "description": "Auto test from InputMemberNameExtended.java",
      "expected-problems": 32,
      "expected-linenumbers": [
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        29,
        30,
        31,
        32,
        33,
        35,
        36,
        37,
        41,
        42,
        43,
        44,
        45,
        47,
        48,
        49,
        72,
        74,
        75,
        76,
        77,
        79,
        80,
        81
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\npublic class InputMemberNameExtended\n{\n    public int mPublic; \n    protected int mProtected; \n    int mPackage; \n    private int mPrivate; \n    public int _public; \n    protected int _protected; \n    int _package; \n    private int _private; \n    class Inner {\n        public int mPublic; \n        protected int mProtected; \n        int mPackage; \n        private int mPrivate; \n        public int _public; \n        protected int _protected; \n        int _package; \n        private int _private; \n    }\n    Inner anon = new Inner() {\n        public int mPublic; \n        protected int mProtected; \n        int mPackage; \n        private int mPrivate; \n        public int _public; \n        protected int _protected; \n        int _package; \n        private int _private; \n    };\n}\ninterface In\n{\n    public int mPublic = 0;\n    int mProtected = 0;\n    int mPackage = 0;\n    int mPrivate = 0;\n    public int _public = 0;\n    int _protected = 0;\n    int _package = 0;\n    int _private = 0;\n}\nenum Direction {\n    NORTH(1),\n    SOUTH(-1),\n    EAST(-2),\n    WEST(2);\n    public int mPublic = 0; \n    int mProtected = 0; \n    int mPackage = 0; \n    int mPrivate = 0; \n    public int _public = 0; \n    int _protected = 0; \n    int _package = 0; \n    int _private = 0; \n    Direction(int code){\n        this.code=code;\n    }\n    protected int code;\n    public int getCode() {\n          return this.code;\n    }\n    static Direction getOppositeDirection(Direction d){\n          return null;\n    }\n}"
    },
    {
      "description": "Auto test from InputMemberNameInner.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        61
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\nclass InputMemberNameInner\n{\n    class InnerInner2\n    {\n        public int fData;\n    }\n    interface InnerInterface2\n    {\n        String data = \"zxzc\";\n        class InnerInterfaceInnerClass\n        {\n            public int rData;\n            protected int protectedVariable;\n            int packageVariable;\n        }\n    }\n    protected static Object sWeird = new Object();\n    static Object sWeird2 = new Object();\n    public interface Inter\n    {\n    }\n     public static void main()\n     {\n        Inter m = new Inter()\n        {\n            private static final int CDS = 1;\n            private int ABC; \n        };\n     }\n    @interface InnerAnnotation\n    {\n        String data = \"zxzc\";\n    }\n    enum InnerEnum\n    {\n        A,\n        B;\n        public int someValue;\n    }\n}"
    },
    {
      "description": "Auto test from InputMemberNameSimpleOne.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        38
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\nfinal class InputMemberNameSimpleOne\n{\n    public static final int badConstant = 2;\n    public static final int MAX_ROWS = 2;\n    private static int badStatic = 2;\n    private static int sNumCreated = 0;\n    private int badMember = 2; \n    private int mNumCreated1 = 0;\n    protected int mNumCreated2 = 0;\n    private int[] mInts = new int[] {1,2, 3,\n                                     4};\n    public static int sTest1;\n    protected static int sTest3;\n    static int sTest2;\n    int mTest1;\n    public int mTest2;\n    int test1(int badFormat1,int badFormat2,\n              final int badFormat3)\n        throws java.lang.Exception\n    {\n        return 0;\n    }\n    private void longMethod()\n    {\n    }\n}"
    },
    {
      "description": "Auto test from InputMemberNameSimpleThree.java",
      "expected-problems": 1,
      "expected-linenumbers": [
        47
      ],
      "code": "package com.puppycrawl.tools.checkstyle.checks.naming.membername;\nimport java.io.*;\npublic class InputMemberNameSimpleThree {\n}\nclass InputMemberNameSimple2\n{\n    public void doSomething()\n    {\n        for (Object O : new java.util.ArrayList())\n        {\n        }\n    }\n}\nenum MyEnum1\n{\n    ABC,\n    XYZ;\n    private int someMember; \n}"
    }
  ]
}