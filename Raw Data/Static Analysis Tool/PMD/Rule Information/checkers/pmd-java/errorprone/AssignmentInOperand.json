{
  "name": "AssignmentInOperand",
  "language": "java",
  "description": "\nAvoid assignments in operands; this can make code more complicated and harder to read.\n        ",
  "example": "public void bar() {\n    int x = 2;\n    if ((x = getX()) == 3) {\n      System.out.println(\"3!\");\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 99,
  "branches": 20,
  "apis": 13,
  "test": [
    {
      "description": "bad",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 2;\n        if ((x = getX()) == 3) {\n            System.out.println(\"3!\");\n        }\n    }\n    private int getX() {\n        return 3;\n    }\n}\n        "
    },
    {
      "description": "ok",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        if (false) {}\n    }\n}\n        "
    },
    {
      "description": "assignment in if conditional expression",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        if (false) {\n            int x =2;\n        }\n    }\n}\n        "
    },
    {
      "description": "assignment in while conditional expression",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 2;\n        while ( (x = getX()) != 0 ) {}\n    }\n    private int getX() {return 2;}\n}\n        "
    },
    {
      "description": "ok",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (int i = 0; i < 10; i++) {\n            int x = i;\n        }\n    }\n}\n        "
    },
    {
      "description": "assignment in for conditional expression",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (int i = 0; (i = i + 1) < 10; i++) {\n            int x = i;\n        }\n    }\n}\n        "
    },
    {
      "description": "increment in if conditional expression",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 0;\n        if (x++ > 0) {\n            x = 2;\n        }\n    }\n}\n        "
    },
    {
      "description": "assignment in while conditional expression, allowed",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 2;\n        while ( (x = getX()) != 0 ) {}\n    }\n    private int getX() {return 2;}\n}\n        "
    },
    {
      "description": "assignment in if conditional expression, allowed",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 2;\n        if ((x = getX()) == 3) {\n            System.out.println(\"3!\");\n        }\n    }\n    private int getX() {\n        return 3;\n    }\n}\n        "
    },
    {
      "description": "assignment in for conditional expression, allowed",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (int i = 0; (i = i + 1) < 10; i++) {\n            int x = i;\n        }\n    }\n}\n        "
    },
    {
      "description": "increment in if conditional expression, allowed",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        int x = 0;\n        if (x++ > 0) {\n            x = 2;\n        }\n    }\n}\n        "
    }
  ]
}