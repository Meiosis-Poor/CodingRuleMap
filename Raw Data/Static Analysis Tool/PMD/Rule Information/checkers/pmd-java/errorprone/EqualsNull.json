{
  "name": "EqualsNull",
  "language": "java",
  "description": "\nTests for null should not use the equals() method. The '==' operator should be used instead.\n        ",
  "example": "String x = \"foo\";\n\nif (x.equals(null)) {   // bad form\n    doSomething();\n}\n\nif (x == null) {        // preferred\n    doSomething();\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "object.equals(null), bad",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar(Object foo) {\n        if (foo.equals(null)) {}\n    }\n}\n        "
    },
    {
      "description": "object == null, ok",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar(Object foo) {\n        if (foo == null) {}\n    }\n}\n        "
    },
    {
      "description": "object.method().equals(null), bad",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar(Object foo) {\n        if (foo.bar().equals(null)) {}\n    }\n}\n        "
    },
    {
      "description": "object.equals(null, other), ok",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar(Object foo) {\n        if (foo.equals(null, other)) {}\n    }\n}\n        "
    },
    {
      "description": "#1120 equalsnull false positive",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    String getLabel(String s) { return null; }\n    void bar(Foo container, Foo grandChild) {\n        if (container.getLabel(null).equals(grandChild.toString())) {\n        }\n    }\n}\n        "
    }
  ]
}