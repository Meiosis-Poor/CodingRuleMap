{
  "name": "ProperCloneImplementation",
  "language": "java",
  "description": "\nObject clone() should be implemented with super.clone().\n        ",
  "example": "class Foo{\n    public Object clone(){\n        return new Foo(); // This is bad\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 47,
  "branches": 8,
  "apis": 7,
  "test": [
    {
      "description": "ok, calls super.clone",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void clone() {\n        super.clone();\n    }\n}\n        "
    },
    {
      "description": "bad, Foo.clone() calls new Foo();",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    void clone() {\n        Foo f = new Foo();\n    }\n}\n        "
    },
    {
      "description": "clone([whatever]) is fine",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void clone(String fiddle) {\n        Foo f = new Foo();\n    }\n}\n        "
    },
    {
      "description": "bad, Foo.clone() calls new Foo();",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "\npublic class Bar {\n    class Foo {\n        void clone() {\n            Foo f = new Foo();\n        }\n    }\n}\n        "
    },
    {
      "description": "ok, should not throw NullPointerException while processing primitive array allocation",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void clone() {\n        super.clone();\n        byte[] array = new byte[6];\n    }\n}\n        "
    },
    {
      "description": "ok, final class false-positive",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nfinal class Foo {\n    Foo clone() {\n        return new Foo();\n    }\n}\n        "
    }
  ]
}