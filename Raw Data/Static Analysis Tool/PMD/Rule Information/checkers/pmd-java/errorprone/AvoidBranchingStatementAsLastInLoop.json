{
  "name": "AvoidBranchingStatementAsLastInLoop",
  "language": "java",
  "description": "\nUsing a branching statement as the last part of a loop may be a bug, and/or is confusing.\nEnsure that the usage is not a bug, or consider using another approach.\n        ",
  "example": "// unusual use of branching statement in a loop\nfor (int i = 0; i < 10; i++) {\n    if (i*i <= 25) {\n        continue;\n    }\n    break;\n}\n\n// this makes more sense...\nfor (int i = 0; i < 10; i++) {\n    if (i*i > 25) {\n        break;\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 137,
  "branches": 22,
  "apis": 14,
  "test": [
    {
      "description": "ok: no violations",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": null
    },
    {
      "description": "violations: break:for/do/while, continue:for/do/while and return:for/do/while",
      "expected-problems": 12,
      "expected-linenumbers": [
        5,
        8,
        11,
        14,
        17,
        20,
        23,
        26,
        29,
        32,
        35,
        38
      ],
      "code": null
    },
    {
      "description": "violations: break:for/do/while",
      "expected-problems": 4,
      "expected-linenumbers": [
        8,
        17,
        26,
        35
      ],
      "code": null
    },
    {
      "description": "violations: continue:for/do/while",
      "expected-problems": 4,
      "expected-linenumbers": [
        11,
        20,
        29,
        38
      ],
      "code": null
    },
    {
      "description": "violations: return:for/do/while",
      "expected-problems": 4,
      "expected-linenumbers": [
        5,
        14,
        23,
        32
      ],
      "code": null
    },
    {
      "description": "violations: break:for",
      "expected-problems": 2,
      "expected-linenumbers": [
        8,
        17
      ],
      "code": null
    },
    {
      "description": "violations: break:do",
      "expected-problems": 1,
      "expected-linenumbers": [
        35
      ],
      "code": null
    },
    {
      "description": "violations: break:while",
      "expected-problems": 1,
      "expected-linenumbers": [
        26
      ],
      "code": null
    },
    {
      "description": "violations: continue:for",
      "expected-problems": 2,
      "expected-linenumbers": [
        11,
        20
      ],
      "code": null
    },
    {
      "description": "violations: continue:do",
      "expected-problems": 1,
      "expected-linenumbers": [
        38
      ],
      "code": null
    },
    {
      "description": "violations: continue:while",
      "expected-problems": 1,
      "expected-linenumbers": [
        29
      ],
      "code": null
    },
    {
      "description": "violations: return:for",
      "expected-problems": 2,
      "expected-linenumbers": [
        5,
        14
      ],
      "code": null
    },
    {
      "description": "violations: return:do",
      "expected-problems": 1,
      "expected-linenumbers": [
        32
      ],
      "code": null
    },
    {
      "description": "violations: return:while",
      "expected-problems": 1,
      "expected-linenumbers": [
        23
      ],
      "code": null
    },
    {
      "description": "#1170 false positive with switch in loop",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(String str) {\n        for (int i=0; i<str.length(); i++)\n            switch(str.charAt(i)) {\n                case 'a':\n                    do_a();\n                    break;\n                case 'b':\n                    do_b();\n                    break;\n                case 'c':\n                    do_c();\n                    break;\n            }\n    }\n}\n        "
    },
    {
      "description": "Without blocks",
      "expected-problems": 12,
      "expected-linenumbers": [
        4,
        6,
        8,
        10,
        12,
        14,
        16,
        18,
        20,
        21,
        22,
        23
      ],
      "code": "\nclass Foo {\n    public void bar(boolean b) {\n        for (int i = 0; i < 10; i++)\n            return;\n        for (int i = 0; i < 10; i++)\n            break;\n        for (int i = 0; i < 10; i++)\n            continue;\n        for (String s : new String[] { \"a\", \"b\" })\n            return;\n        for (String s : new String[] { \"a\", \"b\" })\n            break;\n        for (String s : new String[] { \"a\", \"b\" })\n            continue;\n        while (true)\n            return;\n        while (true)\n            break;\n        while (true)\n            continue;\n        do return; while (true);\n        do break; while (true);\n        do continue; while (true);\n    }\n}\n        "
    },
    {
      "description": "[java] AvoidBranchingStatementAsLastInLoop: False-negative about try/finally block #4063",
      "expected-problems": 1,
      "expected-linenumbers": [
        11
      ],
      "code": "\nclass A {\n    void foo() {\n        while (true) {\n            try {\n                // nothing to do\n            }\n            catch (Throwable c) {\n                throw c;\n            }\n            finally {\n                break;\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "conditional break in finally #4063",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nclass A {\n    void foo() {\n        for (int i = 0; i < 10; i++) {\n            try {\n                // nothing to do\n            }\n            catch (Throwable c){\n                throw c;\n            }\n            finally {\n                if (i*i > 25) {\n                    break;\n                }\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "allow break in try #4063",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nclass A {\n    void foo() {\n        while (true) {\n            try {\n                // nothing to do\n                break;\n            }\n            catch (Throwable c) {\n                // try next\n            }\n        }\n    }\n}\n"
    },
    {
      "description": "[java] A false positive negative by AvoidBranchingStatementAsLastInLoop when in a nested switch #3438",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nclass AvoidBranchingStatement{\n    public void test1(){\n        //this source code is from apache/netbeans/java/.../data/BreakOrContinue.java\n        A: while (1 == 1)\n              B: for (int c = 0; c < 100; c++)\n                  switch (c) {\n                      case 0: break;\n                      case 1: break B;\n                      case 2: break A;\n                      case 3: continue;\n                      case 4: continue A;\n                      case 5: continue B;\n                  }\n    }\n\n    public void test2(){\n          for (int c = 0; c < 100; c++)\n              switch (c) {\n                  case 0: break;\n                  case 1: break;\n                  case 2: break;\n                  case 3: continue;\n                  case 4: continue;\n                  case 5: continue;\n              }\n    }\n}\n"
    }
  ]
}