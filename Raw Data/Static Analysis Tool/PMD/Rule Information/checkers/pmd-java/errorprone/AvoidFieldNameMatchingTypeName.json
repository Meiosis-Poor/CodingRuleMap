{
  "name": "AvoidFieldNameMatchingTypeName",
  "language": "java",
  "description": "\nIt is somewhat confusing to have a field name matching the declaring type name.\nThis probably means that type and/or field names should be chosen more carefully.\n        ",
  "example": "public class Foo extends Bar {\n    int foo;    // There is probably a better name that can be used\n}\npublic interface Operation {\n    int OPERATION = 1; // There is probably a better name that can be used\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "TEST1",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    int foo;\n}\n        "
    },
    {
      "description": "TEST2",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    String foo;\n}\n        "
    },
    {
      "description": "TEST3",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    class Bar {\n        Foo foo;\n    }\n}\n        "
    },
    {
      "description": "TEST4",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "\npublic class Foo {\n    class Bar {\n        String bar;\n    }\n}\n        "
    },
    {
      "description": "interface",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic interface Foo {\n    public String foo();\n}\n        "
    },
    {
      "description": "false negative with fields in interfaces and nested classes",
      "expected-problems": 2,
      "expected-linenumbers": [
        4,
        7
      ],
      "code": "\ninterface Operation {\n    Object apply();\n\n    final Operation OPERATION = () -> { return null; };\n\n    class Inner {\n        int inner;\n    }\n}\n        "
    }
  ]
}