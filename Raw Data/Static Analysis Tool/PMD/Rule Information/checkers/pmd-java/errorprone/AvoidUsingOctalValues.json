{
  "name": "AvoidUsingOctalValues",
  "language": "java",
  "description": "\nInteger literals should not start with zero since this denotes that the rest of literal will be\ninterpreted as an octal value.\n        ",
  "example": "int i = 012;    // set i with 10 not 12\nint j = 010;    // set j with 8 not 10\nk = i * j;      // set k with 80 not 120",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 42,
  "branches": 7,
  "apis": 3,
  "test": [
    {
      "description": "bad, 012",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    int x = 012;\n}\n        "
    },
    {
      "description": "OK, hex value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    int x = 0xCAFE;\n}\n        "
    },
    {
      "description": "OK, long value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    long x = 0L;\n}\n        "
    },
    {
      "description": "OK, double value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    double d = 0.1;\n}\n        "
    },
    {
      "description": "OK, double value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    float f = 0f;\n}\n        "
    },
    {
      "description": "OK, double value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    double d = 012.0;\n}\n        "
    },
    {
      "description": "OK, double suffix",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    double d1 = 012d;\n    double d2 = 012D;\n}\n        "
    },
    {
      "description": "OK, float suffix",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    float f = 012f;\n    float f = 012F;\n}\n        "
    },
    {
      "description": "OK, double value with exponent",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    double d = 012e0;\n}\n        "
    },
    {
      "description": "bad, 012L",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    long x = 012L;\n}\n        "
    },
    {
      "description": "OK, 06 if strict is not set",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    int x = 06;\n}\n        "
    },
    {
      "description": "BAD, 06 if strict is set",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    int x = 06;\n}\n        "
    }
  ]
}