{
  "name": "AvoidInstanceofChecksInCatchClause",
  "language": "java",
  "description": "\nEach caught exception type should be handled in its own catch clause.\n        ",
  "example": "try { // Avoid this\n    // do something\n} catch (Exception ee) {\n    if (ee instanceof IOException) {\n        cleanup();\n    }\n}\n\ntry {  // Prefer this:\n    // do something\n} catch (IOException ee) {\n    cleanup();\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "bad, instanceof FooException",
      "expected-problems": 1,
      "expected-linenumbers": [
        6
      ],
      "code": "\npublic class Foo {\n    void bar() {\n        try {\n            foo();\n        } catch (Exception e) {\n            if (e instanceof FooException) {}\n        }\n    }\n}\n        "
    },
    {
      "description": "ok, no instanceof",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        try {\n            foo();\n        } catch (Exception e) {\n        }\n    }\n}\n        "
    }
  ]
}