{
  "name": "UseVarargs",
  "language": "java",
  "description": "\nJava 5 introduced the varargs parameter declaration for methods and constructors. This syntactic\nsugar provides flexibility for users of these methods and constructors, allowing them to avoid\nhaving to deal with the creation of an array.\n\nByte arrays in any method and String arrays in `public static void main(String[])` methods are ignored.\n        ",
  "example": "public class Foo {\n    public void foo(String s, Object[] args) {\n        // Do something here...\n    }\n\n    public void bar(String s, Object... args) {\n        // Ahh, varargs tastes much better...\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "constructor, use varargs",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo(String[] args) { }\n}\n        "
    },
    {
      "description": "method, use varargs",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public bar(String[] args) { }\n}\n        "
    },
    {
      "description": "constructor, do not varargs",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo(String[] args, int x) { }\n}\n        "
    },
    {
      "description": "method, do not varargs",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public bar(String[] args, int x) { }\n}\n        "
    },
    {
      "description": "method, do not varargs as the signature is dictated by an interface",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\npublic class Foo implements InvocationHandler {\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return null;\n    }\n}\n        "
    },
    {
      "description": "method, do not varargs, allow byte[] as not varargs",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Foo file, byte[] data) { }\n    public void bar2(Foo file, byte data[]) { }\n}\n        "
    },
    {
      "description": "method, do not varargs, allow Byte[] as not varargs",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Foo file, Byte[] data) { }\n    public void bar2(Foo file, Byte data[]) { }\n}\n        "
    },
    {
      "description": "method, do not varargs, allow @Override",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    @Override\n    protected void bar(String[] args) { }\n}\n        "
    },
    {
      "description": "method, do not varargs, allow public static void main(String[]) as not varargs",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public static void main(String[] args) { }\n}\n        "
    },
    {
      "description": "method, use varargs, deviation from exact main signature flagged",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public static void main(int i, String[] args) { }\n}\n        "
    },
    {
      "description": "C-style array decl",
      "expected-problems": 2,
      "expected-linenumbers": [
        2,
        3
      ],
      "code": "\npublic class Foo {\n    public void a(int args[]) { }\n    public void a(String args[]) { }\n    public void a(byte args[]) { }\n    public void a(Byte args[]) { }\n}\n        "
    }
  ]
}