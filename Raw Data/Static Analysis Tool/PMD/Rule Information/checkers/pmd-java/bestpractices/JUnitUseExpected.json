{
  "name": "JUnitUseExpected",
  "language": "java",
  "description": "\nIn JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions.\n        ",
  "example": "public class MyTest {\n    @Test\n    public void testBad() {\n        try {\n            doSomething();\n            fail(\"should have thrown an exception\");\n        } catch (Exception e) {\n        }\n    }\n\n    @Test(expected=Exception.class)\n    public void testGood() {\n        doSomething();\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 73,
  "branches": 10,
  "apis": 8,
  "test": [
    {
      "description": "JUnit 4 - Contains assert",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\nimport org.junit.Test;\npublic class Foo {\n    @Test\n    public void foo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            fail(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    },
    {
      "description": "Junit 3 format",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\nimport junit.framework.TestCase;\npublic class Foo extends TestCase {\n    public void testFoo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            fail(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    },
    {
      "description": "Junit 3 format",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\nimport junit.framework.TestCase;\npublic class Foo extends TestCase {\n    public void testFoo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            fail(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n        try {\n            r.resolve(\"PMD\");\n            fail(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    },
    {
      "description": "Throws",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\nimport junit.framework.TestCase;\npublic class Foo extends TestCase {\n    public void testFoo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            throw new RuntimeException(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    },
    {
      "description": "This method can be broken into two, each checking",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\nimport junit.framework.TestCase;\npublic class Foo extends TestCase {\n    public void testFoo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            throw new RuntimeException(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n        // one\n        }\n        try {\n            r.resolve(\"FOO\");\n            throw new RuntimeException(\"Should have thrown an exception also\");\n        } catch (ClassNotFoundException cnfe) {\n        // another\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    },
    {
      "description": "Not a JUnit class - Contains assert",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.lang.Thread;\npublic class Foo {\n    public void foo() throws Throwable {\n        Resolver r = n -> null;\n        try {\n            r.resolve(\"PMD\");\n            fail(\"Should have thrown an exception\");\n        } catch (ClassNotFoundException cnfe) {\n\n        }\n    }\n}\ninterface Resolver { Object resolve(String name) throws ClassNotFoundException; }\n        "
    }
  ]
}