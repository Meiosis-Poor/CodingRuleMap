{
  "name": "ReplaceVectorWithList",
  "language": "java",
  "description": "\nConsider replacing Vector usages with the newer java.util.ArrayList if expensive thread-safe operations are not required.\n        ",
  "example": "import java.util.Vector;\npublic class Foo {\n    void bar() {\n        Vector v = new Vector();\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "bad, local variable of type Vector",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\nimport java.util.Vector;\npublic class Foo {\n    void bar() {\n        Vector v = new Vector();\n    }\n}\n        "
    },
    {
      "description": "bad, param of type Vector",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nimport java.util.Vector;\n\npublic class Foo {\n    void bar(Vector v) {\n    }\n}\n        "
    },
    {
      "description": "Generic vector",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nimport java.util.Vector;\n\npublic class Foo {\n    void bar(Vector<Integer> v) {\n    }\n}\n        "
    },
    {
      "description": "ok, not java.util.Vector",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport foo.Vector;\n\npublic class Foo {\n    void bar(Vector v) {\n    }\n}\n        "
    },
    {
      "description": "Not about vector",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\n            package pmd.false_positive;\n\n            import java.util.Map;\n            import java.util.function.Predicate;\n\n            public class AAntiFraudPolicy<C extends IAntiFraudCriterion> {\n\n                public static <E extends Enum<E> & IAntiFraudCriterion> AAntiFraudPolicy<E> of(Class<E> enumClass,\n                                                                                               Map<E, Predicate<AntiFraudCheckResult>> criterionChecks) {\n                    return new AAntiFraudPolicy<E>();\n                }\n\n            }\n        "
    }
  ]
}