{
  "name": "ExcessiveParameterList",
  "language": "java",
  "description": "\nMethods with numerous parameters are a challenge to maintain, especially if most of them share the\nsame datatype. These situations usually denote the need for new objects to wrap the numerous parameters.\n        ",
  "example": "public void addPerson(      // too many arguments liable to be mixed up\n    int birthYear, int birthMonth, int birthDate, int height, int weight, int ssn) {\n\n    . . . .\n}\n\npublic void addPerson(      // preferred approach\n    Date birthdate, BodyMeasurements measurements, int ssn) {\n\n    . . . .\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 45,
  "branches": 6,
  "apis": 5,
  "test": [
    {
      "description": "short",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {}\n}\n        "
    },
    {
      "description": "long",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo(int p01, int p02, int p03, int p04, int p05, int p06, int p07, int p08, int p09, int p10 ) { }\n    public void bar(int p01, int p02, int p03, int p04, int p05 ) { }\n}\n        "
    },
    {
      "description": "#2461 private constructor should be ignored",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    private Foo(int a, int b, int c, String abc, long d, double p,\n     String[] arr, int data, long in, float fl, String res) { } // 11 params\n}\n        "
    },
    {
      "description": "anonymous class in private constructor false-negative test",
      "expected-problems": 1,
      "expected-linenumbers": [
        4
      ],
      "code": "\npublic class Foo {\n    private Foo() {\n        Object obj = new Object() {\n            public void doWork(int a, int b, int c, String abc, long d, double p,\n                String[] arr, int data, long in, float fl, String res) {} // 11 params\n        };\n    }\n}\n        "
    }
  ]
}