{
  "name": "CollapsibleIfStatements",
  "language": "java",
  "description": "\nReports nested 'if' statements that can be merged together by joining their\nconditions with a boolean `&&` operator in between.\n        ",
  "example": "class Foo {\n\n    void bar() {\n        if (x) {            // original implementation\n            if (y) {\n                // do stuff\n            }\n        }\n    }\n\n    void bar() {\n        if (x && y) {        // clearer implementation\n            // do stuff\n        }\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "failure case",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        if (x) {\n            if (y) {\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "ok, intervening statements",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        if (x) {\n            int z = 5;\n            if (y) {\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "ok, different intervening statements",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        if (x) {\n            if (y) {\n            }\n            int z = 5;\n        }\n    }\n}\n        "
    }
  ]
}