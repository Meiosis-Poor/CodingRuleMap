{
  "name": "AvoidUncheckedExceptionsInSignatures",
  "language": "java",
  "description": "\nReports unchecked exceptions in the `throws` clause of a method or constructor.\nJava doesn't force the caller to handle an unchecked exception,\nso it's unnecessary except for documentation. A better practice is to document the\nexceptional cases with a `@throws` Javadoc tag, which allows being more descriptive.\n        ",
  "example": "public void foo() throws RuntimeException {\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "method declares RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    void foo() throws RuntimeException {}\n}\n        "
    },
    {
      "description": "method decalres a subclass of RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    void foo() throws IllegalArgumentException {}\n}\n        "
    },
    {
      "description": "method does not declare any exception",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void foo() {}\n}\n        "
    },
    {
      "description": "method declaring checked exceptions like IOException is fine",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.io.IOException;\n\npublic class Foo {\n    void foo() throws IOException{}\n}\n        "
    },
    {
      "description": "constructor declaring checked exceptions like IOException is fine",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.io.IOException;\n\npublic class Foo {\n    Foo() throws IOException{}\n}\n        "
    },
    {
      "description": "constructor does not declare any exception",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Foo() {}\n}\n        "
    },
    {
      "description": "constructor declares RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    Foo() throws RuntimeException {}\n}\n        "
    },
    {
      "description": "constructor declares a subclass of RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    Foo() throws IllegalArgumentException {}\n}\n        "
    },
    {
      "description": "interface method declares RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic interface Foo {\n    public void foo() throws RuntimeException;\n}\n        "
    },
    {
      "description": "interface method declares a subclass of RuntimeException",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic interface Foo {\n    public void foo() throws IllegalArgumentException;\n}\n        "
    },
    {
      "description": "interface method declaring a checked exception is fine",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic interface Foo {\n    public void foo() throws IOException;\n}\n        "
    },
    {
      "description": "interface method does not declare any exception",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic interface Foo {\n    public void foo();\n}\n        "
    }
  ]
}