{
  "name": "UseArrayListInsteadOfVector",
  "language": "java",
  "description": "\nArrayList is a much better Collection implementation than Vector if thread-safe operation is not required.\n        ",
  "example": "import java.util.*;\npublic class SimpleTest extends TestCase {\n    public void testX() {\n    Collection c1 = new Vector();\n    Collection c2 = new ArrayList();    // achieves the same with much better performance\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "No problem using List and ArrayList",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.util.ArrayList;\nimport java.util.List;\npublic class Bar {\n    void x() {\n        List v = new ArrayList();\n    }\n}\n        "
    },
    {
      "description": "Just using Vector",
      "expected-problems": 1,
      "expected-linenumbers": [
        4
      ],
      "code": "\nimport java.util.Vector;\npublic class Bar {\n    void x() {\n        Vector v = new Vector();\n    }\n}\n        "
    },
    {
      "description": "Using Vector as field",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "\nimport java.util.Vector;\npublic class Bar {\n    Vector v = new Vector();\n    void x() {}\n}\n        "
    },
    {
      "description": "Using Vector as List",
      "expected-problems": 1,
      "expected-linenumbers": [
        4
      ],
      "code": "\nimport java.util.List;\nimport java.util.Vector;\npublic class Bar {\n    List v = new Vector();\n    void x() {}\n}\n        "
    },
    {
      "description": "#1146 real problem",
      "expected-problems": 1,
      "expected-linenumbers": [
        4
      ],
      "code": "\nimport java.util.Vector;\npublic class Foo {\n    public void bar() {\n        Vector v = new Vector();\n    }\n}\n        "
    },
    {
      "description": "#1146 UseArrayListInsteadOfVector false positive when using own Vector class",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport com.mycompany.myproject.Vector;\npublic class Foo {\n    public void bar() {\n        Vector v = new Vector();\n    }\n}\n        "
    },
    {
      "description": "[java] UseArrayListInsteadOfVector ignores Vector when other classes are imported #4148 - sample 1",
      "expected-problems": 1,
      "expected-linenumbers": [
        6
      ],
      "code": "\nimport org.Annotation;\n// import java.util.Vector; Note: explicitly not importing... unresolved type\n@Annotation\npublic class C {\n    void x() {\n        Vector v = new Vector();  // should report a warning in this line, but no warnings\n    }\n}\n"
    },
    {
      "description": "[java] UseArrayListInsteadOfVector ignores Vector when other classes are imported #4148 - sample 2",
      "expected-problems": 1,
      "expected-linenumbers": [
        5
      ],
      "code": "\nimport some.OtherClass;\n\npublic class C {\n    void x() {\n        java.util.Vector v = new java.util.Vector();  // should report a warning\n    }\n}\n"
    },
    {
      "description": "Only consider Vector and not subclasses",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport java.util.Stack;\nclass StackUser {\n    Stack s = new Stack();\n}\n"
    }
  ]
}