{
  "name": "RedundantFieldInitializer",
  "language": "java",
  "description": "\nJava will initialize fields with known default values so any explicit initialization of those same defaults\nis redundant and results in a larger class file (approximately three additional bytecode instructions per field).\n        ",
  "example": "public class C {\n    boolean b   = false;    // examples of redundant initializers\n    byte by     = 0;\n    short s     = 0;\n    char c      = 0;\n    int i       = 0;\n    long l      = 0;\n\n    float f     = .0f;    // all possible float literals\n    double d    = 0d;     // all possible double literals\n    Object o    = null;\n\n    MyClass mca[] = null;\n    int i1 = 0, ia1[] = null;\n\n    class Nested {\n        boolean b = false;\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 61,
  "branches": 10,
  "apis": 8,
  "test": [
    {
      "description": "multiple declarations",
      "expected-problems": 5,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    char a1 = 0, a2 = 0; // 2 Bad\n    char a3 = 0, a4; // Bad\n    char a5, a6 = 0; // Bad\n    char a7 = computed(), a8 = 0, a9; // Bad\n\n    static char computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "references",
      "expected-problems": 7,
      "expected-linenumbers": [],
      "code": "\nimport java.util.Date;\n\npublic class Foo {\n    Object o0;\n    Object o = null; // Bad\n    static Object sto = null; // Bad\n\n    String str0;\n    String str = null; // Bad\n    static String ststr = null; // Bad\n\n    private String sameLine = null, sameLine1 = null; // 2 Bad\n    private String sameLine2, sameLine3 = null; // Bad\n\n    Date d = new Date(null);\n\n    static Object computed() {\n        return null;\n    }\n}\n        "
    },
    {
      "description": "arrays of primitives",
      "expected-problems": 7,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    boolean[] ba0;\n    boolean[] ba = null; // Bad\n    boolean[] ba1 = new boolean[] { false };\n    boolean[] ba2 = computed();\n\n    byte[] bya0;\n    byte[] bya = null; // Bad\n    byte[] bya1 = new byte[] { 0 };\n\n    short[] sa0;\n    short[] sa = null; // Bad\n    short[] sa1 = new short[] { 0 };\n\n    char[] ca0;\n    char[] ca = null; // Bad\n    char[] ca1 = new char[] { 0 };\n\n    int[] ia0;\n    int[] ia = null; // Bad\n    int[] ia1 = new int[] { 0 };\n\n    float[] fa0;\n    float[] fa = null; // Bad\n    float[] fa1 = new float[] { 0 };\n\n    double[] da0;\n    double[] da = null; // Bad\n    double[] da1 = new double[] { 0 };\n\n    static boolean[] computed() {\n        return null;\n    }\n}\n        "
    },
    {
      "description": "arrays of objects",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Object[] oa0;\n    Object[] oa = null; // Bad\n    Object[] oa1 = computed();\n\n    Object[][] oaa0;\n    Object[][] oaa = null; // Bad\n    Object[][] ooa1 = new Object[1][];\n    Object[][] ooa2 = new Object[][] { { null } };\n\n    static Object[] computed() {\n        return null;\n    }\n}\n        "
    },
    {
      "description": "mixed arrays",
      "expected-problems": 5,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    int i1, iam1[];\n    int i2 = 0, iam2[]; // Bad\n    int i3, iam3[] = null; // Bad\n    int i4 = 0, iam4[] = null; // 2 Bad\n    int i5 = 0, iam5[] = computed(); // Bad\n\n    static int[] computed() {\n        return null;\n    }\n}\n        "
    },
    {
      "description": "nested class",
      "expected-problems": 4,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    private static class NestedClass {\n        boolean b0;\n        boolean b = false; // Bad\n        static boolean stb0;\n        static boolean stb = false; // Bad\n        Boolean stB = false;\n        static Boolean B = false;\n\n        double[] da0;\n        double[] da = null; // Bad\n        double[] da1 = new double[] { 0 };\n        double[] da2 = computed();\n\n        Object[][] oaa0;\n        Object[][] oaa = null; // Bad\n        Object[][] ooa1 = new Object[1][];\n        Object[][] ooa2 = new Object[][] { { null } };\n\n        private double[] computed() {\n            double[] d = null;\n            return d;\n        }\n    }\n}\n        "
    },
    {
      "description": "boolean",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final boolean a1 = false;\n    final boolean a2 = true;\n    final boolean a3 = computed();\n\n    final Boolean b1 = false;\n    final Boolean b2 = true;\n    final Boolean b3 = computed();\n\n    final static boolean c1 = false;\n    final static boolean c2 = true;\n    final static boolean c3 = computed();\n\n    final static Boolean d1 = false;\n    final static Boolean d2 = true;\n    final static Boolean d3 = computed();\n\n    boolean e1;\n    boolean e2 = false; // Bad\n    boolean e3 = true;\n    boolean e4 = computed();\n\n    Boolean f1;\n    Boolean f2 = false;\n    Boolean f3 = true;\n    Boolean f4 = computed();\n\n    static boolean g1;\n    static boolean g2 = false; // Bad\n    static boolean g3 = true;\n    static boolean g4 = computed();\n\n    static Boolean h1;\n    static Boolean h2 = false;\n    static Boolean h3 = true;\n    static Boolean h4 = computed();\n\n    static boolean computed() {\n    return false;\n    }\n}\n        "
    },
    {
      "description": "byte",
      "expected-problems": 14,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final byte a1 = 0;\n    final byte a2 = 1;\n    final byte a3 = (byte) 0L;\n    final byte a4 = (byte) 2L;\n    final byte a5 = 00;\n    final byte a6 = 0123;\n    final byte a7 = (byte) 00L;\n    final byte a8 = (byte) 0123L;\n    final byte a9 = 0x0;\n    final byte a10 = 0x1;\n    final byte a11 = (byte) 0x0L;\n    final byte a12 = (byte) 0x1L;\n    final byte a13 = '\\u0000';\n    final byte a14 = 'a';\n    final byte a15 = computed();\n\n    final Byte b1 = 0;\n    final Byte b2 = 1;\n    final Byte b3 = (byte) 0L;\n    final Byte b4 = (byte) 2L;\n    final Byte b5 = 00;\n    final Byte b6 = 0123;\n    final Byte b7 = (byte) 00L;\n    final Byte b8 = (byte) 0123L;\n    final Byte b9 = 0x0;\n    final Byte b10 = 0x1;\n    final Byte b11 = (byte) 0x0L;\n    final Byte b12 = (byte) 0x1L;\n    final Byte b13 = '\\u0000';\n    final Byte b14 = 'a';\n    final Byte b15 = computed();\n\n    static final byte c1 = 0;\n    static final byte c2 = 1;\n    static final byte c3 = (byte) 0L;\n    static final byte c4 = (byte) 2L;\n    static final byte c5 = 00;\n    static final byte c6 = 0123;\n    static final byte c7 = (byte) 00L;\n    static final byte c8 = (byte) 0123L;\n    static final byte c9 = 0x0;\n    static final byte c10 = 0x1;\n    static final byte c11 = (byte) 0x0L;\n    static final byte c12 = (byte) 0x1L;\n    static final byte c13 = '\\u0000';\n    static final byte c14 = 'a';\n    static final byte c15 = computed();\n\n    static final Byte d1 = 0;\n    static final Byte d2 = 1;\n    static final Byte d3 = (byte) 0L;\n    static final Byte d4 = (byte) 2L;\n    static final Byte d5 = 00;\n    static final Byte d6 = 0123;\n    static final Byte d7 = (byte) 00L;\n    static final Byte d8 = (byte) 0123L;\n    static final Byte d9 = 0x0;\n    static final Byte d10 = 0x1;\n    static final Byte d11 = (byte) 0x0L;\n    static final Byte d12 = (byte) 0x1L;\n    static final Byte d13 = '\\u0000';\n    static final Byte d14 = 'a';\n    static final Byte d15 = computed();\n\n    byte e1 = 0; // Bad\n    byte e2 = 1;\n    byte e3 = (byte) 0L; // Bad\n    byte e4 = (byte) 2L;\n    byte e5 = 00; // Bad\n    byte e6 = 0123;\n    byte e7 = (byte) 00L; // Bad\n    byte e8 = (byte) 0123L;\n    byte e9 = 0x0; // Bad\n    byte e10 = 0x1;\n    byte e11 = (byte) 0x0L; // Bad\n    byte e12 = (byte) 0x1L;\n    byte e13 = '\\u0000'; // Bad\n    byte e14 = 'a';\n    byte e15 = computed();\n\n    Byte f1 = 0;\n    Byte f2 = 1;\n    Byte f3 = (byte) 0L;\n    Byte f4 = (byte) 2L;\n    Byte f5 = 00;\n    Byte f6 = 0123;\n    Byte f7 = (byte) 00L;\n    Byte f8 = (byte) 0123L;\n    Byte f9 = 0x0;\n    Byte f10 = 0x1;\n    Byte f11 = (byte) 0x0L;\n    Byte f12 = (byte) 0x1L;\n    Byte f13 = '\\u0000';\n    Byte f14 = 'a';\n    Byte f15 = computed();\n\n    static byte g1 = 0; // Bad\n    static byte g2 = 1;\n    static byte g3 = (byte) 0L; // Bad\n    static byte g4 = (byte) 2L;\n    static byte g5 = 00; // Bad\n    static byte g6 = 0123;\n    static byte g7 = (byte) 00L; // Bad\n    static byte g8 = (byte) 0123L;\n    static byte g9 = 0x0; // Bad\n    static byte g10 = 0x1;\n    static byte g11 = (byte) 0x0L; // Bad\n    static byte g12 = (byte) 0x1L;\n    static byte g13 = '\\u0000'; // Bad\n    static byte g14 = 'a';\n    static byte g15 = computed();\n\n    static Byte h1 = 0;\n    static Byte h2 = 1;\n    static Byte h3 = (byte) 0L;\n    static Byte h4 = (byte) 2L;\n    static Byte h5 = 00;\n    static Byte h6 = 0123;\n    static Byte h7 = (byte) 00L;\n    static Byte h8 = (byte) 0123L;\n    static Byte h9 = 0x0;\n    static Byte h10 = 0x1;\n    static Byte h11 = (byte) 0x0L;\n    static Byte h12 = (byte) 0x1L;\n    static Byte h13 = '\\u0000';\n    static Byte h14 = 'a';\n    static Byte h15 = computed();\n\n    static byte computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "char",
      "expected-problems": 14,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final char a1 = 0;\n    final char a2 = 1;\n    final char a3 = (char) 0L;\n    final char a4 = (char) 2L;\n    final char a5 = 00;\n    final char a6 = 0123;\n    final char a7 = (char) 00L;\n    final char a8 = (char) 0123L;\n    final char a9 = 0x0;\n    final char a10 = 0x1;\n    final char a11 = (char) 0x0L;\n    final char a12 = (char) 0x1L;\n    final char a13 = '\\u0000';\n    final char a14 = 'a';\n    final char a15 = computed();\n\n    final Character b1 = 0;\n    final Character b2 = 1;\n    final Character b3 = (char) 0L;\n    final Character b4 = (char) 2L;\n    final Character b5 = 00;\n    final Character b6 = 0123;\n    final Character b7 = (char) 00L;\n    final Character b8 = (char) 0123L;\n    final Character b9 = 0x0;\n    final Character b10 = 0x1;\n    final Character b11 = (char) 0x0L;\n    final Character b12 = (char) 0x1L;\n    final Character b13 = '\\u0000';\n    final Character b14 = 'a';\n    final Character b15 = computed();\n\n    static final char c1 = 0;\n    static final char c2 = 1;\n    static final char c3 = (char) 0L;\n    static final char c4 = (char) 2L;\n    static final char c5 = 00;\n    static final char c6 = 0123;\n    static final char c7 = (char) 00L;\n    static final char c8 = (char) 0123L;\n    static final char c9 = 0x0;\n    static final char c10 = 0x1;\n    static final char c11 = (char) 0x0L;\n    static final char c12 = (char) 0x1L;\n    static final char c13 = '\\u0000';\n    static final char c14 = 'a';\n    static final char c15 = computed();\n\n    static final Character d1 = 0;\n    static final Character d2 = 1;\n    static final Character d3 = (char) 0L;\n    static final Character d4 = (char) 2L;\n    static final Character d5 = 00;\n    static final Character d6 = 0123;\n    static final Character d7 = (char) 00L;\n    static final Character d8 = (char) 0123L;\n    static final Character d9 = 0x0;\n    static final Character d10 = 0x1;\n    static final Character d11 = (char) 0x0L;\n    static final Character d12 = (char) 0x1L;\n    static final Character d13 = '\\u0000';\n    static final Character d14 = 'a';\n    static final Character d15 = computed();\n\n    char e1 = 0; // Bad\n    char e2 = 1;\n    char e3 = (char) 0L; // Bad\n    char e4 = (char) 2L;\n    char e5 = 00; // Bad\n    char e6 = 0123;\n    char e7 = (char) 00L; // Bad\n    char e8 = (char) 0123L;\n    char e9 = 0x0; // Bad\n    char e10 = 0x1;\n    char e11 = (char) 0x0L; // Bad\n    char e12 = (char) 0x1L;\n    char e13 = '\\u0000'; // Bad\n    char e14 = 'a';\n    char e15 = computed();\n\n    Character f1 = 0;\n    Character f2 = 1;\n    Character f3 = (char) 0L;\n    Character f4 = (char) 2L;\n    Character f5 = 00;\n    Character f6 = 0123;\n    Character f7 = (char) 00L;\n    Character f8 = (char) 0123L;\n    Character f9 = 0x0;\n    Character f10 = 0x1;\n    Character f11 = (char) 0x0L;\n    Character f12 = (char) 0x1L;\n    Character f13 = '\\u0000';\n    Character f14 = 'a';\n    Character f15 = computed();\n\n    static char g1 = 0; // Bad\n    static char g2 = 1;\n    static char g3 = (char) 0L; // Bad\n    static char g4 = (char) 2L;\n    static char g5 = 00; // Bad\n    static char g6 = 0123;\n    static char g7 = (char) 00L; // Bad\n    static char g8 = (char) 0123L;\n    static char g9 = 0x0; // Bad\n    static char g10 = 0x1;\n    static char g11 = (char) 0x0L; // Bad\n    static char g12 = (char) 0x1L;\n    static char g13 = '\\u0000'; // Bad\n    static char g14 = 'a';\n    static char g15 = computed();\n\n    static Character h1 = 0;\n    static Character h2 = 1;\n    static Character h3 = (char) 0L;\n    static Character h4 = (char) 2L;\n    static Character h5 = 00;\n    static Character h6 = 0123;\n    static Character h7 = (char) 00L;\n    static Character h8 = (char) 0123L;\n    static Character h9 = 0x0;\n    static Character h10 = 0x1;\n    static Character h11 = (char) 0x0L;\n    static Character h12 = (char) 0x1L;\n    static Character h13 = '\\u0000';\n    static Character h14 = 'a';\n    static Character h15 = computed();\n\n    static char computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "short",
      "expected-problems": 14,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final short a1 = 0;\n    final short a2 = 1;\n    final short a3 = (short) 0L;\n    final short a4 = (short) 2L;\n    final short a5 = 00;\n    final short a6 = 0123;\n    final short a7 = (short) 00L;\n    final short a8 = (short) 0123L;\n    final short a9 = 0x0;\n    final short a10 = 0x1;\n    final short a11 = (short) 0x0L;\n    final short a12 = (short) 0x1L;\n    final short a13 = '\\u0000';\n    final short a14 = 'a';\n    final short a15 = computed();\n\n    final Short b1 = 0;\n    final Short b2 = 1;\n    final Short b3 = (short) 0L;\n    final Short b4 = (short) 2L;\n    final Short b5 = 00;\n    final Short b6 = 0123;\n    final Short b7 = (short) 00L;\n    final Short b8 = (short) 0123L;\n    final Short b9 = 0x0;\n    final Short b10 = 0x1;\n    final Short b11 = (short) 0x0L;\n    final Short b12 = (short) 0x1L;\n    final Short b13 = '\\u0000';\n    final Short b14 = 'a';\n    final Short b15 = computed();\n\n    static final short c1 = 0;\n    static final short c2 = 1;\n    static final short c3 = (short) 0L;\n    static final short c4 = (short) 2L;\n    static final short c5 = 00;\n    static final short c6 = 0123;\n    static final short c7 = (short) 00L;\n    static final short c8 = (short) 0123L;\n    static final short c9 = 0x0;\n    static final short c10 = 0x1;\n    static final short c11 = (short) 0x0L;\n    static final short c12 = (short) 0x1L;\n    static final short c13 = '\\u0000';\n    static final short c14 = 'a';\n    static final short c15 = computed();\n\n    static final Short d1 = 0;\n    static final Short d2 = 1;\n    static final Short d3 = (short) 0L;\n    static final Short d4 = (short) 2L;\n    static final Short d5 = 00;\n    static final Short d6 = 0123;\n    static final Short d7 = (short) 00L;\n    static final Short d8 = (short) 0123L;\n    static final Short d9 = 0x0;\n    static final Short d10 = 0x1;\n    static final Short d11 = (short) 0x0L;\n    static final Short d12 = (short) 0x1L;\n    static final Short d13 = '\\u0000';\n    static final Short d14 = 'a';\n    static final Short d15 = computed();\n\n    short e1 = 0; // Bad\n    short e2 = 1;\n    short e3 = (short) 0L; // Bad\n    short e4 = (short) 2L;\n    short e5 = 00; // Bad\n    short e6 = 0123;\n    short e7 = (short) 00L; // Bad\n    short e8 = (short) 0123L;\n    short e9 = 0x0; // Bad\n    short e10 = 0x1;\n    short e11 = (short) 0x0L; // Bad\n    short e12 = (short) 0x1L;\n    short e13 = '\\u0000'; // Bad\n    short e14 = 'a';\n    short e15 = computed();\n\n    Short f1 = 0;\n    Short f2 = 1;\n    Short f3 = (short) 0L;\n    Short f4 = (short) 2L;\n    Short f5 = 00;\n    Short f6 = 0123;\n    Short f7 = (short) 00L;\n    Short f8 = (short) 0123L;\n    Short f9 = 0x0;\n    Short f10 = 0x1;\n    Short f11 = (short) 0x0L;\n    Short f12 = (short) 0x1L;\n    Short f13 = '\\u0000';\n    Short f14 = 'a';\n    Short f15 = computed();\n\n    static short g1 = 0; // Bad\n    static short g2 = 1;\n    static short g3 = (short) 0L; // Bad\n    static short g4 = (short) 2L;\n    static short g5 = 00; // Bad\n    static short g6 = 0123;\n    static short g7 = (short) 00L; // Bad\n    static short g8 = (short) 0123L;\n    static short g9 = 0x0; // Bad\n    static short g10 = 0x1;\n    static short g11 = (short) 0x0L; // Bad\n    static short g12 = (short) 0x1L;\n    static short g13 = '\\u0000'; // Bad\n    static short g14 = 'a';\n    static short g15 = computed();\n\n    static Short h1 = 0;\n    static Short h2 = 1;\n    static Short h3 = (short) 0L;\n    static Short h4 = (short) 2L;\n    static Short h5 = 00;\n    static Short h6 = 0123;\n    static Short h7 = (short) 00L;\n    static Short h8 = (short) 0123L;\n    static Short h9 = 0x0;\n    static Short h10 = 0x1;\n    static Short h11 = (short) 0x0L;\n    static Short h12 = (short) 0x1L;\n    static Short h13 = '\\u0000';\n    static Short h14 = 'a';\n    static Short h15 = computed();\n\n    static short computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "int",
      "expected-problems": 14,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final int a1 = 0;\n    final int a2 = 1;\n    final int a3 = (int) 0L;\n    final int a4 = (int) 2L;\n    final int a5 = 00;\n    final int a6 = 0123;\n    final int a7 = (int) 00L;\n    final int a8 = (int) 0123L;\n    final int a9 = 0x0;\n    final int a10 = 0x1;\n    final int a11 = (int) 0x0L;\n    final int a12 = (int) 0x1L;\n    final int a13 = '\\u0000';\n    final int a14 = 'a';\n    final int a15 = computed();\n\n    final Integer b1 = 0;\n    final Integer b2 = 1;\n    final Integer b3 = (int) 0L;\n    final Integer b4 = (int) 2L;\n    final Integer b5 = 00;\n    final Integer b6 = 0123;\n    final Integer b7 = (int) 00L;\n    final Integer b8 = (int) 0123L;\n    final Integer b9 = 0x0;\n    final Integer b10 = 0x1;\n    final Integer b11 = (int) 0x0L;\n    final Integer b12 = (int) 0x1L;\n    final Integer b13 = '\\u0000';\n    final Integer b14 = 'a';\n    final Integer b15 = computed();\n\n    static final int c1 = 0;\n    static final int c2 = 1;\n    static final int c3 = (int) 0L;\n    static final int c4 = (int) 2L;\n    static final int c5 = 00;\n    static final int c6 = 0123;\n    static final int c7 = (int) 00L;\n    static final int c8 = (int) 0123L;\n    static final int c9 = 0x0;\n    static final int c10 = 0x1;\n    static final int c11 = (int) 0x0L;\n    static final int c12 = (int) 0x1L;\n    static final int c13 = '\\u0000';\n    static final int c14 = 'a';\n    static final int c15 = computed();\n\n    static final Integer d1 = 0;\n    static final Integer d2 = 1;\n    static final Integer d3 = (int) 0L;\n    static final Integer d4 = (int) 2L;\n    static final Integer d5 = 00;\n    static final Integer d6 = 0123;\n    static final Integer d7 = (int) 00L;\n    static final Integer d8 = (int) 0123L;\n    static final Integer d9 = 0x0;\n    static final Integer d10 = 0x1;\n    static final Integer d11 = (int) 0x0L;\n    static final Integer d12 = (int) 0x1L;\n    static final Integer d13 = '\\u0000';\n    static final Integer d14 = 'a';\n    static final Integer d15 = computed();\n\n    int e1 = 0; // Bad\n    int e2 = 1;\n    int e3 = (int) 0L; // Bad\n    int e4 = (int) 2L;\n    int e5 = 00; // Bad\n    int e6 = 0123;\n    int e7 = (int) 00L; // Bad\n    int e8 = (int) 0123L;\n    int e9 = 0x0; // Bad\n    int e10 = 0x1;\n    int e11 = (int) 0x0L; // Bad\n    int e12 = (int) 0x1L;\n    int e13 = '\\u0000'; // Bad\n    int e14 = 'a';\n    int e15 = computed();\n\n    Integer f1 = 0;\n    Integer f2 = 1;\n    Integer f3 = (int) 0L;\n    Integer f4 = (int) 2L;\n    Integer f5 = 00;\n    Integer f6 = 0123;\n    Integer f7 = (int) 00L;\n    Integer f8 = (int) 0123L;\n    Integer f9 = 0x0;\n    Integer f10 = 0x1;\n    Integer f11 = (int) 0x0L;\n    Integer f12 = (int) 0x1L;\n    Integer f13 = '\\u0000';\n    Integer f14 = 'a';\n    Integer f15 = computed();\n\n    static int g1 = 0; // Bad\n    static int g2 = 1;\n    static int g3 = (int) 0L; // Bad\n    static int g4 = (int) 2L;\n    static int g5 = 00; // Bad\n    static int g6 = 0123;\n    static int g7 = (int) 00L; // Bad\n    static int g8 = (int) 0123L;\n    static int g9 = 0x0; // Bad\n    static int g10 = 0x1;\n    static int g11 = (int) 0x0L; // Bad\n    static int g12 = (int) 0x1L;\n    static int g13 = '\\u0000'; // Bad\n    static int g14 = 'a';\n    static int g15 = computed();\n\n    static Integer h1 = 0;\n    static Integer h2 = 1;\n    static Integer h3 = (int) 0L;\n    static Integer h4 = (int) 2L;\n    static Integer h5 = 00;\n    static Integer h6 = 0123;\n    static Integer h7 = (int) 00L;\n    static Integer h8 = (int) 0123L;\n    static Integer h9 = 0x0;\n    static Integer h10 = 0x1;\n    static Integer h11 = (int) 0x0L;\n    static Integer h12 = (int) 0x1L;\n    static Integer h13 = '\\u0000';\n    static Integer h14 = 'a';\n    static Integer h15 = computed();\n\n    static int computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "long",
      "expected-problems": 14,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final long a1 = 0;\n    final long a2 = 1;\n    final long a3 = (long) 0L;\n    final long a4 = (long) 2L;\n    final long a5 = 00;\n    final long a6 = 0123;\n    final long a7 = (long) 00L;\n    final long a8 = (long) 0123L;\n    final long a9 = 0x0;\n    final long a10 = 0x1;\n    final long a11 = (long) 0x0L;\n    final long a12 = (long) 0x1L;\n    final long a13 = '\\u0000';\n    final long a14 = 'a';\n    final long a15 = computed();\n\n    final Long b1 = 0L;\n    final Long b2 = 2L;\n    final Long b3 = 00L;\n    final Long b4 = 0123L;\n    final Long b5 = 0x0L;\n    final Long b6 = 0x1L;\n    final Long b7 = (long) '\\u0000';\n    final Long b8 = (long) 'a';\n    final Long b9 = computed();\n\n    static final long c1 = 0;\n    static final long c2 = 1;\n    static final long c3 = (long) 0L;\n    static final long c4 = (long) 2L;\n    static final long c5 = 00;\n    static final long c6 = 0123;\n    static final long c7 = (long) 00L;\n    static final long c8 = (long) 0123L;\n    static final long c9 = 0x0;\n    static final long c10 = 0x1;\n    static final long c11 = (long) 0x0L;\n    static final long c12 = (long) 0x1L;\n    static final long c13 = '\\u0000';\n    static final long c14 = 'a';\n    static final long c15 = computed();\n\n    static final Long d1 = 0L;\n    static final Long d2 = 2L;\n    static final Long d3 = 00L;\n    static final Long d4 = 0123L;\n    static final Long d5 = 0x0L;\n    static final Long d6 = 0x1L;\n    static final Long d7 = (long) '\\u0000';\n    static final Long d8 = (long) 'a';\n    static final Long d9 = computed();\n\n    long e1 = 0; // Bad\n    long e2 = 1;\n    long e3 = (long) 0L; // Bad\n    long e4 = (long) 2L;\n    long e5 = 00; // Bad\n    long e6 = 0123;\n    long e7 = (long) 00L; // Bad\n    long e8 = (long) 0123L;\n    long e9 = 0x0; // Bad\n    long e10 = 0x1;\n    long e11 = (long) 0x0L; // Bad\n    long e12 = (long) 0x1L;\n    long e13 = '\\u0000'; // Bad\n    long e14 = 'a';\n    long e15 = computed();\n\n    Long f1 = 0L;\n    Long f2 = 2L;\n    Long f3 = 00L;\n    Long f4 = 0123L;\n    Long f5 = 0x0L;\n    Long f6 = 0x1L;\n    Long f7 = (long) '\\u0000';\n    Long f8 = (long) 'a';\n    Long f9 = computed();\n\n    static long g1 = 0; // Bad\n    static long g2 = 1;\n    static long g3 = (long) 0L; // Bad\n    static long g4 = (long) 2L;\n    static long g5 = 00; // Bad\n    static long g6 = 0123;\n    static long g7 = (long) 00L; // Bad\n    static long g8 = (long) 0123L;\n    static long g9 = 0x0; // Bad\n    static long g10 = 0x1;\n    static long g11 = (long) 0x0L; // Bad\n    static long g12 = (long) 0x1L;\n    static long g13 = '\\u0000'; // Bad\n    static long g14 = 'a';\n    static long g15 = computed();\n\n    static Long h1 = 0L;\n    static Long h2 = 2L;\n    static Long h3 = 00L;\n    static Long h4 = 0123L;\n    static Long h5 = 0x0L;\n    static Long h6 = 0x1L;\n    static Long h7 = (long) '\\u0000';\n    static Long h8 = (long) 'a';\n    static Long h9 = computed();\n\n    static long computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "float",
      "expected-problems": 22,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final float a1 = 0;\n    final float a2 = 1;\n    final float a3 = (float) 0L;\n    final float a4 = (float) 2L;\n    final float a5 = 00;\n    final float a6 = 0123;\n    final float a7 = (float) 00L;\n    final float a8 = (float) 0123L;\n    final float a9 = 0x0;\n    final float a10 = 0x1;\n    final float a11 = (float) 0x0L;\n    final float a12 = (float) 0x1L;\n    final float a13 = '\\u0000';\n    final float a14 = 'a';\n    final float a15 = computed();\n    final float a16 = 0.0f;\n    final float a17 = 2.0f;\n    final float a18 = 6.022137e+23f;\n    final float a19 = 0x0.0p0f;\n    final float a20 = 0x1.2p3f;\n    final float a21 = (float) 0.0d;\n    final float a22 = (float) 2.0d;\n    final float a23 = (float) 6.022137e+23d;\n    final float a24 = (float) 0x0.0p0d;\n    final float a25 = (float) 0x1.2p3d;\n\n    final Float b1 = (float) 0L;\n    final Float b2 = (float) 2L;\n    final Float b3 = (float) 00L;\n    final Float b4 = (float) 0123L;\n    final Float b5 = (float) 0x0L;\n    final Float b6 = (float) 0x1L;\n    final Float b7 = (float) '\\u0000';\n    final Float b8 = (float) 'a';\n    final Float b9 = computed();\n    final Float b10 = 0.0f;\n    final Float b11 = 2.0f;\n    final Float b12 = 6.022137e+23f;\n    final Float b13 = 0x0.0p0f;\n    final Float b14 = 0x1.2p3f;\n    final Float b15 = (float) 0.0d;\n    final Float b16 = (float) 2.0d;\n    final Float b17 = (float) 6.022137e+23d;\n    final Float b18 = (float) 0x0.0p0d;\n    final Float b19 = (float) 0x1.2p3d;\n\n    static final float c1 = 0;\n    static final float c2 = 1;\n    static final float c3 = (float) 0L;\n    static final float c4 = (float) 2L;\n    static final float c5 = 00;\n    static final float c6 = 0123;\n    static final float c7 = (float) 00L;\n    static final float c8 = (float) 0123L;\n    static final float c9 = 0x0;\n    static final float c10 = 0x1;\n    static final float c11 = (float) 0x0L;\n    static final float c12 = (float) 0x1L;\n    static final float c13 = '\\u0000';\n    static final float c14 = 'a';\n    static final float c15 = computed();\n    static final float c16 = 0.0f;\n    static final float c17 = 2.0f;\n    static final float c18 = 6.022137e+23f;\n    static final float c19 = 0x0.0p0f;\n    static final float c20 = 0x1.2p3f;\n    static final float c21 = (float) 0.0d;\n    static final float c22 = (float) 2.0d;\n    static final float c23 = (float) 6.022137e+23d;\n    static final float c24 = (float) 0x0.0p0d;\n    static final float c25 = (float) 0x1.2p3d;\n\n    static final Float d1 = (float) 0L;\n    static final Float d2 = (float) 2L;\n    static final Float d3 = (float) 00L;\n    static final Float d4 = (float) 0123L;\n    static final Float d5 = (float) 0x0L;\n    static final Float d6 = (float) 0x1L;\n    static final Float d7 = (float) '\\u0000';\n    static final Float d8 = (float) 'a';\n    static final Float d9 = computed();\n    static final Float d10 = 0.0f;\n    static final Float d11 = 2.0f;\n    static final Float d12 = 6.022137e+23f;\n    static final Float d13 = 0x0.0p0f;\n    static final Float d14 = 0x1.2p3f;\n    static final Float d15 = (float) 0.0d;\n    static final Float d16 = (float) 2.0d;\n    static final Float d17 = (float) 6.022137e+23d;\n    static final Float d18 = (float) 0x0.0p0d;\n    static final Float d19 = (float) 0x1.2p3d;\n\n    float e1 = 0; // Bad\n    float e2 = 1;\n    float e3 = (float) 0L; // Bad\n    float e4 = (float) 2L;\n    float e5 = 00; // Bad\n    float e6 = 0123;\n    float e7 = (float) 00L; // Bad\n    float e8 = (float) 0123L;\n    float e9 = 0x0; // Bad\n    float e10 = 0x1;\n    float e11 = (float) 0x0L; // Bad\n    float e12 = (float) 0x1L;\n    float e13 = '\\u0000'; // Bad\n    float e14 = 'a';\n    float e15 = computed();\n    float e16 = 0.0f; // Bad\n    float e17 = 2.0f;\n    float e18 = 6.022137e+23f;\n    float e19 = 0x0.0p0f; // Bad\n    float e20 = 0x1.2p3f;\n    float e21 = (float) 0.0d; // Bad\n    float e22 = (float) 2.0d;\n    float e23 = (float) 6.022137e+23d;\n    float e24 = (float) 0x0.0p0d; // Bad\n    float e25 = (float) 0x1.2p3d;\n\n    Float f1 = (float) 0L;\n    Float f2 = (float) 2L;\n    Float f3 = (float) 00L;\n    Float f4 = (float) 0123L;\n    Float f5 = (float) 0x0L;\n    Float f6 = (float) 0x1L;\n    Float f7 = (float) '\\u0000';\n    Float f8 = (float) 'a';\n    Float f9 = computed();\n    Float f10 = 0.0f;\n    Float f11 = 2.0f;\n    Float f12 = 6.022137e+23f;\n    Float f13 = 0x0.0p0f;\n    Float f14 = 0x1.2p3f;\n    Float f15 = (float) 0.0d;\n    Float f16 = (float) 2.0d;\n    Float f17 = (float) 6.022137e+23d;\n    Float f18 = (float) 0x0.0p0d;\n    Float f19 = (float) 0x1.2p3d;\n\n    static float g1 = 0; // Bad\n    static float g2 = 1;\n    static float g3 = (float) 0L; // Bad\n    static float g4 = (float) 2L;\n    static float g5 = 00; // Bad\n    static float g6 = 0123;\n    static float g7 = (float) 00L; // Bad\n    static float g8 = (float) 0123L;\n    static float g9 = 0x0; // Bad\n    static float g10 = 0x1;\n    static float g11 = (float) 0x0L; // Bad\n    static float g12 = (float) 0x1L;\n    static float g13 = '\\u0000'; // Bad\n    static float g14 = 'a';\n    static float g15 = computed();\n    static float g16 = 0.0f; // Bad\n    static float g17 = 2.0f;\n    static float g18 = 6.022137e+23f;\n    static float g19 = 0x0.0p0f; // Bad\n    static float g20 = 0x1.2p3f;\n    static float g21 = (float) 0.0d; // Bad\n    static float g22 = (float) 2.0d;\n    static float g23 = (float) 6.022137e+23d;\n    static float g24 = (float) 0x0.0p0d; // Bad\n    static float g25 = (float) 0x1.2p3d;\n\n    static Float h1 = (float) 0L;\n    static Float h2 = (float) 2L;\n    static Float h3 = (float) 00L;\n    static Float h4 = (float) 0123L;\n    static Float h5 = (float) 0x0L;\n    static Float h6 = (float) 0x1L;\n    static Float h7 = (float) '\\u0000';\n    static Float h8 = (float) 'a';\n    static Float h9 = computed();\n    static Float h10 = 0.0f;\n    static Float h11 = 2.0f;\n    static Float h12 = 6.022137e+23f;\n    static Float h13 = 0x0.0p0f;\n    static Float h14 = 0x1.2p3f;\n    static Float h15 = (float) 0.0d;\n    static Float h16 = (float) 2.0d;\n    static Float h17 = (float) 6.022137e+23d;\n    static Float h18 = (float) 0x0.0p0d;\n    static Float h19 = (float) 0x1.2p3d;\n\n    static float computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "double",
      "expected-problems": 22,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    final double a1 = 0;\n    final double a2 = 1;\n    final double a3 = (double) 0L;\n    final double a4 = (double) 2L;\n    final double a5 = 00;\n    final double a6 = 0123;\n    final double a7 = (double) 00L;\n    final double a8 = (double) 0123L;\n    final double a9 = 0x0;\n    final double a10 = 0x1;\n    final double a11 = (double) 0x0L;\n    final double a12 = (double) 0x1L;\n    final double a13 = '\\u0000';\n    final double a14 = 'a';\n    final double a15 = computed();\n    final double a16 = 0.0f;\n    final double a17 = 2.0f;\n    final double a18 = 6.022137e+23f;\n    final double a19 = 0x0.0p0f;\n    final double a20 = 0x1.2p3f;\n    final double a21 = (double) 0.0d;\n    final double a22 = (double) 2.0d;\n    final double a23 = (double) 6.022137e+23d;\n    final double a24 = (double) 0x0.0p0d;\n    final double a25 = (double) 0x1.2p3d;\n\n    final Double b1 = (double) 0L;\n    final Double b2 = (double) 2L;\n    final Double b3 = (double) 00L;\n    final Double b4 = (double) 0123L;\n    final Double b5 = (double) 0x0L;\n    final Double b6 = (double) 0x1L;\n    final Double b7 = (double) '\\u0000';\n    final Double b8 = (double) 'a';\n    final Double b9 = computed();\n    final Double b10 = (double) 0.0f;\n    final Double b11 = (double) 2.0f;\n    final Double b12 = (double) 6.022137e+23f;\n    final Double b13 = (double) 0x0.0p0f;\n    final Double b14 = (double) 0x1.2p3f;\n    final Double b15 = (double) 0.0d;\n    final Double b16 = (double) 2.0d;\n    final Double b17 = (double) 6.022137e+23d;\n    final Double b18 = (double) 0x0.0p0d;\n    final Double b19 = (double) 0x1.2p3d;\n\n    static final double c1 = 0;\n    static final double c2 = 1;\n    static final double c3 = (double) 0L;\n    static final double c4 = (double) 2L;\n    static final double c5 = 00;\n    static final double c6 = 0123;\n    static final double c7 = (double) 00L;\n    static final double c8 = (double) 0123L;\n    static final double c9 = 0x0;\n    static final double c10 = 0x1;\n    static final double c11 = (double) 0x0L;\n    static final double c12 = (double) 0x1L;\n    static final double c13 = '\\u0000';\n    static final double c14 = 'a';\n    static final double c15 = computed();\n    static final double c16 = 0.0f;\n    static final double c17 = 2.0f;\n    static final double c18 = 6.022137e+23f;\n    static final double c19 = 0x0.0p0f;\n    static final double c20 = 0x1.2p3f;\n    static final double c21 = (double) 0.0d;\n    static final double c22 = (double) 2.0d;\n    static final double c23 = (double) 6.022137e+23d;\n    static final double c24 = (double) 0x0.0p0d;\n    static final double c25 = (double) 0x1.2p3d;\n\n    static final Double d1 = (double) 0L;\n    static final Double d2 = (double) 2L;\n    static final Double d3 = (double) 00L;\n    static final Double d4 = (double) 0123L;\n    static final Double d5 = (double) 0x0L;\n    static final Double d6 = (double) 0x1L;\n    static final Double d7 = (double) '\\u0000';\n    static final Double d8 = (double) 'a';\n    static final Double d9 = computed();\n    static final Double d10 = (double) 0.0f;\n    static final Double d11 = (double) 2.0f;\n    static final Double d12 = (double) 6.022137e+23f;\n    static final Double d13 = (double) 0x0.0p0f;\n    static final Double d14 = (double) 0x1.2p3f;\n    static final Double d15 = (double) 0.0d;\n    static final Double d16 = (double) 2.0d;\n    static final Double d17 = (double) 6.022137e+23d;\n    static final Double d18 = (double) 0x0.0p0d;\n    static final Double d19 = (double) 0x1.2p3d;\n\n    double e1 = 0; // Bad\n    double e2 = 1;\n    double e3 = (double) 0L; // Bad\n    double e4 = (double) 2L;\n    double e5 = 00; // Bad\n    double e6 = 0123;\n    double e7 = (double) 00L; // Bad\n    double e8 = (double) 0123L;\n    double e9 = 0x0; // Bad\n    double e10 = 0x1;\n    double e11 = (double) 0x0L; // Bad\n    double e12 = (double) 0x1L;\n    double e13 = '\\u0000'; // Bad\n    double e14 = 'a';\n    double e15 = computed();\n    double e16 = 0.0f; // Bad\n    double e17 = 2.0f;\n    double e18 = 6.022137e+23f;\n    double e19 = 0x0.0p0f; // Bad\n    double e20 = 0x1.2p3f;\n    double e21 = (double) 0.0d; // Bad\n    double e22 = (double) 2.0d;\n    double e23 = (double) 6.022137e+23d;\n    double e24 = (double) 0x0.0p0d; // Bad\n    double e25 = (double) 0x1.2p3d;\n\n    Double f1 = (double) 0L;\n    Double f2 = (double) 2L;\n    Double f3 = (double) 00L;\n    Double f4 = (double) 0123L;\n    Double f5 = (double) 0x0L;\n    Double f6 = (double) 0x1L;\n    Double f7 = (double) '\\u0000';\n    Double f8 = (double) 'a';\n    Double f9 = computed();\n    Double f10 = (double) 0.0f;\n    Double f11 = (double) 2.0f;\n    Double f12 = (double) 6.022137e+23f;\n    Double f13 = (double) 0x0.0p0f;\n    Double f14 = (double) 0x1.2p3f;\n    Double f15 = (double) 0.0d;\n    Double f16 = (double) 2.0d;\n    Double f17 = (double) 6.022137e+23d;\n    Double f18 = (double) 0x0.0p0d;\n    Double f19 = (double) 0x1.2p3d;\n\n    static double g1 = 0; // Bad\n    static double g2 = 1;\n    static double g3 = (double) 0L; // Bad\n    static double g4 = (double) 2L;\n    static double g5 = 00; // Bad\n    static double g6 = 0123;\n    static double g7 = (double) 00L; // Bad\n    static double g8 = (double) 0123L;\n    static double g9 = 0x0; // Bad\n    static double g10 = 0x1;\n    static double g11 = (double) 0x0L; // Bad\n    static double g12 = (double) 0x1L;\n    static double g13 = '\\u0000'; // Bad\n    static double g14 = 'a';\n    static double g15 = computed();\n    static double g16 = 0.0f; // Bad\n    static double g17 = 2.0f;\n    static double g18 = 6.022137e+23f;\n    static double g19 = 0x0.0p0f; // Bad\n    static double g20 = 0x1.2p3f;\n    static double g21 = (double) 0.0d; // Bad\n    static double g22 = (double) 2.0d;\n    static double g23 = (double) 6.022137e+23d;\n    static double g24 = (double) 0x0.0p0d; // Bad\n    static double g25 = (double) 0x1.2p3d;\n\n    static Double h1 = (double) 0L;\n    static Double h2 = (double) 2L;\n    static Double h3 = (double) 00L;\n    static Double h4 = (double) 0123L;\n    static Double h5 = (double) 0x0L;\n    static Double h6 = (double) 0x1L;\n    static Double h7 = (double) '\\u0000';\n    static Double h8 = (double) 'a';\n    static Double h9 = computed();\n    static Double h10 = (double) 0.0f;\n    static Double h11 = (double) 2.0f;\n    static Double h12 = (double) 6.022137e+23f;\n    static Double h13 = (double) 0x0.0p0f;\n    static Double h14 = (double) 0x1.2p3f;\n    static Double h15 = (double) 0.0d;\n    static Double h16 = (double) 2.0d;\n    static Double h17 = (double) 6.022137e+23d;\n    static Double h18 = (double) 0x0.0p0d;\n    static Double h19 = (double) 0x1.2p3d;\n\n    static double computed() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "#1298 Member variable int type with value 0xff000000 causes processing error",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class LinePoint {\n    private int mColor = 0xFF000000;\n}\n        "
    },
    {
      "description": "Java7 binary literals and underscores",
      "expected-problems": 5,
      "expected-linenumbers": [
        12,
        13,
        14,
        15,
        16
      ],
      "code": "\npublic class Bar {\n    private int x = 0b0101;\n    private int y = 0B0101;\n    private long xl = 0b0101l;\n    private long yl = 0B0101L;\n\n    private int a = 12_34;\n    private int b = 0xff_00_00_00;\n    private long c = 0b11010010_01101001_10010100_10010010;\n\n    // now problem cases\n    private int iszero1 = 0b0;\n    private int iszero2 = 0B0;\n    private long iszero3 = 0b0l;\n    private long iszero4 = 0B0L;\n    private int iszero5 = 0b0_______0;\n}\n        "
    },
    {
      "description": "#1418 RedundantFieldInitializer false positive with large long value",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class SomeClass {\n    private long someNumber = 0x100000000000L;\n}\n        "
    },
    {
      "description": "#1443 RedundantFieldInitializer: False positive for small floats",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class SomeClass {\n    private float someNumber = 0.1f;\n}\n        "
    },
    {
      "description": "#215 - False positive for annotation fields",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic @interface SomeAnnotation {\n    int CONSTANT = 0;\n}\n        "
    },
    {
      "description": "java7 numeric literals",
      "expected-problems": 4,
      "expected-linenumbers": [
        8,
        21,
        31,
        47
      ],
      "code": "\npublic class Test {\n    int i1 = 0b00011110;\n    int i2 = 0B00011110;\n    int i3 = 0xA;\n    int i4 = 0x1___A_F;\n    int i5 = 0b1;\n    int i6 = 0b1___1_0;\n    int i7 = 0;\n    int i8 = 02;\n    int i9 = 0_123;\n    int i10 = 1;\n    int i11 = 1___3;\n    int i12 = 1_43_43598_7;\n\n    long l1 = 0b00011110L;\n    long l2 = 0B00011110l;\n    long l3 = 0xAL;\n    long l4 = 0x1___A_FL;\n    long l5 = 0b1L;\n    long l6 = 0b1___1_0L;\n    long l7 = 0l;\n    long l8 = 02L;\n    long l9 = 0_123l;\n    long l10 = 1l;\n    long l11 = 1___3l;\n    long l12 = 1_43_43598_7L;\n    long l13 = 1_43_43598_7;\n\n    float f1 = .1f;\n    float f2 = 1.f;\n    float f3 = 0f;\n    float f4 = 1e0F;\n    float f5 = 1e0f;\n    float f6 = 12.345F;\n    float f7 = .5____2_1f;\n    float f8 = 1__42__3.f;\n    float f9 = 0__2_4__324f;\n    float f10 = 1_34e0F;\n    float f11 = 1__1_2e0f;\n    float f12 = 2_1___2.3__4_5F;\n    float f13 = 1_34e0__4__3f;\n    float f14 = 1__1_2e00__000_4f;\n    float f15 = 2_1___2.3__4_5e00______0_5F;\n\n    double d1 = .1d;\n    double d2 = 1.D;\n    double d3 = 0d;\n    double d4 = 1e0D;\n    double d5 = 1e0d;\n    double d6 = 12.345D;\n    double d7 = .5____2_1d;\n    double d8 = 1__42__3.D;\n    double d9 = 0__2_4__324d;\n    double d10 = 1_34e0d;\n    double d11 = 1__1_2e0d;\n    double d12 = 2_1___2.3__4_5D;\n    double d13 = 1_34e0__4__3d;\n    double d14 = 1__1_2e00__000_4d;\n    double d15 = 2_1___2.3__4_5e00______0_5D;\n    double d16 = 0.12___34;\n\n    float hf1 = 0x.1___AFp1;\n    float hf2 = 0x.1___AFp0__0__0f;\n    float hf3 = 0x2__3_34.4___AFP00_00f;\n\n    double hd1 = 0x.1___AFp1;\n    double hd2 = 0x.1___AFp0__0__0d;\n    double hd3 = 0x2__3_34.4___AFP00_00d;\n\n    int doc1 = 1234_5678;\n    long doc2 = 1_2_3_4__5_6_7_8L;\n    int doc3 = 0b0001_0010_0100_1000;\n    double doc4 = 3.141_592_653_589_793d;\n    double doc5 = 0x1.ffff_ffff_ffff_fP1_023;\n}\n        "
    },
    {
      "description": "#1298 [java] RedundantFieldInitializer - NumberFormatException with Long",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class RedundantFieldInitializerTest {\n    private long hexLongMinusOne = 0xffffffffffffffffL;\n    private int hexIntMinusOne = 0xffffffff;\n}\n        "
    },
    {
      "description": "#2441 can not detect a case char c = '\\0';",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\npublic class Foo {\n    char c = '\\0';\n}\n        "
    },
    {
      "description": "Non-literals are ok",
      "expected-problems": 1,
      "expected-linenumbers": [
        9
      ],
      "code": "\npublic class C {\n    public static final int ZERO = 0;\n    public static final long ZEROL = 0L;\n}\n\nclass O {\n    public static final int ZERO = 0;\n    private int s = C.ZERO;\n    private int s2 = 0 * 1000; //not ok\n    private int o = 2 * ZERO;\n}\n        "
    },
    {
      "description": "FP #4070",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\n            public class FP {\n                private static final int BASE = 1;\n                char c = 0 + BASE;  // should not report a warning in this line\n            }\n        "
    },
    {
      "description": "[java] RedundantFieldInitializer: false positive with lombok's @Value #4458",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nimport lombok.Value;\n@Value\npublic class Test {\n    String bar = null;   // false positive warning\n}\n        "
    },
    {
      "description": "[java] RedundantFieldInitializer FN with constant expressions #3684",
      "expected-problems": 2,
      "expected-linenumbers": [
        2,
        3
      ],
      "code": "\nclass Impl {\n    int a = 1 + 0 - 1; // should report a warning\n    int b = 0 + 1 - 1; // can be detected\n}\n"
    },
    {
      "description": "[java] RedundantFieldInitializer FP with expressions that start with zero #3743",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nclass Impl {\n    int b = 0 + 1; // FP\n}\n"
    }
  ]
}