{
  "name": "InaccurateNumericLiteral",
  "language": "javascript",
  "description": "\nThe numeric literal will have a different value at runtime, which can happen if you provide too much\nprecision in a floating point number.  This may result in numeric calculations being in error.\n\n[Numbers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) in JavaScript\nare represented by 64bit double-precision floating point numbers internally and that's why there are some limits\nto the available precision of the number.\nSee [Number.isSafeInteger()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger)\nand [Number.EPSILON](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON).\n\nNote: This rule was named InnaccurateNumericLiteral before PMD 7.4.0.\n        ",
  "example": "var a = 9; // Ok\nvar b = 999999999999999; // Ok\nvar c = 999999999999999999999; // Not good\nvar w = 1.12e-4; // Ok\nvar x = 1.12; // Ok\nvar y = 1.1234567890123; // Ok\nvar z = 1.12345678901234567; // Not good",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": []
}