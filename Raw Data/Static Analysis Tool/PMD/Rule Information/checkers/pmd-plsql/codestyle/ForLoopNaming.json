{
  "name": "ForLoopNaming",
  "language": "plsql",
  "description": "\nIn case you have loops please name the loop variables more meaningful.\n        ",
  "example": "-- good example\nBEGIN\nFOR company IN (SELECT * FROM companies) LOOP\n  FOR contact IN (SELECT * FROM contacts) LOOP\n    FOR party IN (SELECT * FROM parties) LOOP\n      NULL;\n    END LOOP;\n  END LOOP;\nEND LOOP;\nEND;\n/\n\n-- bad example\nBEGIN\nFOR c1 IN (SELECT * FROM companies) LOOP\n  FOR c2 IN (SELECT * FROM contacts) LOOP\n    FOR c3 IN (SELECT * FROM parties) LOOP\n      NULL;\n    END LOOP;\n  END LOOP;\nEND LOOP;\nEND;\n/",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "CursorForLoop Simple case - no nesting",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR c IN (SELECT * FROM companies) LOOP\n    NULL;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "CursorForLoop Simple case - no nesting - allowSimpleLoops",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR c IN (SELECT * FROM companies) LOOP\n    NULL;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "CursorForLoop Nested loops - good example, default pattern",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR company IN (SELECT * FROM companies) LOOP\n    FOR contact IN (SELECT * FROM contacts) LOOP\n        FOR party IN (SELECT * FROM parties) LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "CursorForLoop Nested loops - good example, custom pattern",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR c_cmp IN (SELECT * FROM companies) LOOP\n    FOR c_con IN (SELECT * FROM contacts) LOOP\n        FOR c_pa IN (SELECT * FROM parties) LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "CursorForLoop Nested loops - bad example, default pattern",
      "expected-problems": 3,
      "expected-linenumbers": [
        2,
        3,
        4
      ],
      "code": "\nBEGIN\nFOR cmp IN (SELECT * FROM companies) LOOP\n    FOR con IN (SELECT * FROM contacts) LOOP\n        FOR pa IN (SELECT * FROM parties) LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "CursorForLoop Nested loops - bad example, custom pattern",
      "expected-problems": 3,
      "expected-linenumbers": [
        2,
        3,
        4
      ],
      "code": "\nBEGIN\nFOR c1 IN (SELECT * FROM companies) LOOP\n    FOR c2 IN (SELECT * FROM contacts) LOOP\n        FOR c3 IN (SELECT * FROM parties) LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Simple case - no nesting",
      "expected-problems": 1,
      "expected-linenumbers": [
        2
      ],
      "code": "\nBEGIN\nFOR i IN 1..v_companies.COUNT LOOP\n    NULL;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Simple case - no nesting - allowSimpleLoops",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR i IN 1..v_companies.COUNT LOOP\n    NULL;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Nested loops - good example, default pattern",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR company IN 1..v_companies.COUNT LOOP\n    FOR contact IN 1..v_contacts.COUNT LOOP\n        FOR party IN 1..v_parties.COUNT LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Nested loops - good example, custom pattern",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\nBEGIN\nFOR i_cmp IN 1..v_companies.COUNT LOOP\n    FOR i_con IN 1..v_contacts.COUNT LOOP\n        FOR i_pa IN 1..v_parties.COUNT LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Nested Loops - bad example, default pattern",
      "expected-problems": 3,
      "expected-linenumbers": [
        2,
        3,
        4
      ],
      "code": "\nBEGIN\nFOR i IN 1..v_companies.COUNT LOOP\n    FOR j IN 1..v_contacts.COUNT LOOP\n        FOR k IN 1..v_parties.COUNT LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    },
    {
      "description": "ForLoop Nested Loops - bad example, custom pattern",
      "expected-problems": 3,
      "expected-linenumbers": [
        2,
        3,
        4
      ],
      "code": "\nBEGIN\nFOR i IN 1..v_companies.COUNT LOOP\n    FOR j IN 1..v_contacts.COUNT LOOP\n        FOR k IN 1..v_parties.COUNT LOOP\n            NULL;\n        END LOOP;\n    END LOOP;\nEND LOOP;\nEND;\n/\n        "
    }
  ]
}