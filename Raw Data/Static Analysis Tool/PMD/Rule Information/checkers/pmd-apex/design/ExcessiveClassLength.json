{
  "name": "ExcessiveClassLength",
  "language": "apex",
  "description": "\nExcessive class file lengths are usually indications that the class may be burdened with excessive\nresponsibilities that could be provided by external classes or functions. In breaking these methods\napart the code becomes more managable and ripe for reuse.\n        ",
  "example": "public class Foo {\n    public void bar1() {\n        // 1000 lines of code\n    }\n    public void bar2() {\n        // 1000 lines of code\n    }\n    public void bar3() {\n        // 1000 lines of code\n    }\n    public void barN() {\n        // 1000 lines of code\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 30,
  "branches": 3,
  "apis": 2,
  "test": [
    {
      "description": "short",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {\n        Integer x;\n    }\n}\n        "
    },
    {
      "description": "long",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": null
    },
    {
      "description": "long class - changed minimum",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": null
    },
    {
      "description": "ignore test classes",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\n@isTest\npublic class Foo {\n    public void bar() {\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n        bar();\n    }\n}\n        "
    },
    {
      "description": "#1396 Public method with javadoc",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\n/**\n * Class comment\n */\npublic class SomeClass {\n\n    /**\n     * Comment\n     */\n    public void doSomething() {\n        System.debug('hello world');\n    }\n\n    /** Field comment */\n    private String field;\n}\n       "
    },
    {
      "description": "[apex] ExcessiveClassLength multiple warning on the same class #3142",
      "expected-problems": 1,
      "expected-linenumbers": [
        1
      ],
      "code": "\npublic class FooSmaller {\n\n    public class bar1 {\n        public void m() {\n            System.out.println('foo');\n            System.out.println('foo');\n        }\n    }\n\n    public class bar2 {\n        public void m() {\n            System.out.println('foo');\n            System.out.println('foo');\n        }\n    }\n}\n        "
    }
  ]
}