{
  "name": "EagerlyLoadedDescribeSObjectResult",
  "language": "apex",
  "description": "\nThis rule finds `DescribeSObjectResult`s which could have been loaded eagerly via `SObjectType.getDescribe()`.\n\nWhen using `SObjectType.getDescribe()` or `Schema.describeSObjects()` without supplying a `SObjectDescribeOptions`,\nimplicitly it will be using `SObjectDescribeOptions.DEFAULT` and then all\nchild relationships will be loaded eagerly regardless whether this information is needed or not.\nThis has a potential negative performance impact. Instead [`SObjectType.getDescribe(options)`](https://developer.salesforce.com/docs/atlas.en-us.apexref.meta/apexref/apex_class_Schema_SObjectType.htm#unique_346834793)\nor [`Schema.describeSObjects(SObjectTypes, options)`](https://developer.salesforce.com/docs/atlas.en-us.apexref.meta/apexref/apex_methods_system_schema.htm#apex_System_Schema_describeSObjects)\nshould be used and a `SObjectDescribeOptions` should be supplied. By using\n`SObjectDescribeOptions.DEFERRED` the describe attributes will be lazily initialized at first use.\n\nLazy loading `DescribeSObjectResult` on picklist fields is not always recommended. The lazy loaded\ndescribe objects might not be 100% accurate. It might be safer to explicitly use\n`SObjectDescribeOptions.FULL` in such a case. The same applies when you need the same `DescribeSObjectResult`\nto be consistent across different contexts and API versions.\n\nProperties:\n\n* `noDefault`: The behavior of `SObjectDescribeOptions.DEFAULT` changes from API Version 43 to 44:\n    With API Version 43, the attributes are loaded eagerly. With API Version 44, they are loaded lazily.\n    Simply using `SObjectDescribeOptions.DEFAULT` doesn't automatically make use of lazy loading.\n    (unless \"Use Improved Schema Caching\" critical update is applied, `SObjectDescribeOptions.DEFAULT` does fallback\n    to lazy loading)\n    With this property enabled, such usages are found.\n    You might ignore this, if you can make sure, that you don't run a mix of API Versions.\n        ",
  "example": "public class Foo {\n    public static void bar(List<Account> accounts) {\n        if (Account.SObjectType.getDescribe(SObjectDescribeOptions.DEFERRED).isCreateable()) {\n            insert accounts;\n        }\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "No describer options",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Account.SObjectType.getDescribe().isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "No describer options using Schema class",
      "expected-problems": 1,
      "expected-linenumbers": [
        3
      ],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Schema.describeSObjects(new List<String>{'Account'})[0].isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "Correct describer option check",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Account.SObjectType.getDescribe(SObjectDescribeOptions.DEFERRED).isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "Correct describer option check using Schema class",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Schema.describeSObjects(new List<String>{'Account'}, SObjectDescribeOptions.DEFERRED)[0].isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "Default describer option check allowing default",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Account.SObjectType.getDescribe(SObjectDescribeOptions.DEFAULT).isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "Default describer option check restricting default option",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(List<Account> accounts) {\n        if (Account.SObjectType.getDescribe(SObjectDescribeOptions.DEFAULT).isCreateable()) {\n            insert accounts;\n        }\n    }\n}\n        "
    },
    {
      "description": "False positive with no describer options on SObjectField",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Case case) {\n        String fieldName = Case.Subject.getDescribe().getName();\n    }\n}\n        "
    },
    {
      "description": "False positive on SObjectField with FieldDescribeOptions.FULL_DESCRIBE",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Case case) {\n        String fieldName = Case.Subject.getDescribe(FieldDescribeOptions.FULL_DESCRIBE).getName();\n    }\n}\n        "
    },
    {
      "description": "False positive on SObjectField with FieldDescribeOptions.DEFAULT",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Case case) {\n        String fieldName = Case.Subject.getDescribe(FieldDescribeOptions.DEFAULT).getName();\n    }\n}\n        "
    },
    {
      "description": "False positive on SObjectField with FieldDescribeOptions.DEFAULT with noDefault=true",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar(Case case) {\n        String fieldName = Case.Subject.getDescribe(FieldDescribeOptions.DEFAULT).getName();\n    }\n}\n        "
    }
  ]
}