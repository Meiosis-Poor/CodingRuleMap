{
  "name": "OperationWithHighCostInLoop",
  "language": "apex",
  "description": "\nThis rule finds method calls inside loops that are known to be likely a performance issue. These methods should be\ncalled only once before the loop.\n\nSchema class methods like [Schema.getGlobalDescribe()](https://developer.salesforce.com/docs/atlas.en-us.apexref.meta/apexref/apex_methods_system_schema.htm#apex_System_Schema_getGlobalDescribe)\nand [Schema.describeSObjects()](https://developer.salesforce.com/docs/atlas.en-us.apexref.meta/apexref/apex_methods_system_schema.htm#apex_System_Schema_describeSObjects)\nmight be slow depending on the size of your organization. Calling these methods repeatedly inside a loop creates\na potential performance issue.\n        ",
  "example": "public class GlobalDescribeExample {\n    // incorrect example\n    public void getGlobalDescribeInLoop() {\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            // Schema.getGlobalDescribe() should be called only once before the for-loop\n            if (Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap().containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n\n    // corrected example\n    public void getGlobalDescribeInLoopCorrected() {\n        Map<String, Schema.SObjectField> fieldMap = Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap();\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (fieldMap.containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 52,
  "branches": 4,
  "apis": 3,
  "test": [
    {
      "description": "High cost performance getGlobalDescribe in loop (correct code) #4675",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void testGetGlobalDescribe() {\n        Map<String, Schema.SObjectField> fieldMap = Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap();\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (fieldMap.containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "High cost performance getGlobalDescribe in loop #4675",
      "expected-problems": 1,
      "expected-linenumbers": [
        5
      ],
      "code": "\npublic class Foo {\n    public void testGetGlobalDescribe() {\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap().containsKey(fieldNameOrDefaultValue.trim() )) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "High cost performance getGlobalDescribe in loop - fully qualified #4675",
      "expected-problems": 1,
      "expected-linenumbers": [
        5
      ],
      "code": "\npublic class Foo {\n    public void testGetGlobalDescribe() {\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (System.Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap().containsKey(fieldNameOrDefaultValue.trim() )) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n        "
    },
    {
      "description": "High cost performance describeSObjects in loop (correct code) #4675",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void testDescribeSObjects() {\n        Map<String, Schema.SObjectField> fieldMap = Schema.describeSObjects(new List<String> { 'Account' })[0].fields.getMap();\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (fieldMap.containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n            "
    },
    {
      "description": "High cost performance describeSObjects in loop #4675",
      "expected-problems": 1,
      "expected-linenumbers": [
        6
      ],
      "code": "\npublic class Foo {\n    public void testDescribeSObjects() {\n        String sObjectType = 'Account';\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (Schema.describeSObjects(new List<String> { sObjectType })[0].fields.getMap().containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n            "
    },
    {
      "description": "High cost performance describeSObjects in loop with SObjectDescribeOptions #4675",
      "expected-problems": 1,
      "expected-linenumbers": [
        6
      ],
      "code": "\npublic class Foo {\n    public void testDescribeSObjects() {\n        String sObjectType = 'Account';\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (Schema.describeSObjects(new List<String> { sObjectType }, SObjectDescribeOptions.FULL)[0].fields.getMap().containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n            "
    },
    {
      "description": "High cost performance describeSObjects in loop - fully qualified #4675",
      "expected-problems": 1,
      "expected-linenumbers": [
        6
      ],
      "code": "\npublic class Foo {\n    public void testDescribeSObjects() {\n        String sObjectType = 'Account';\n        Set<String> fieldNameSet = new Set<String> {'Id'};\n        for (String fieldNameOrDefaultValue : fieldNameOrDefaultValueList) {\n            if (System.Schema.describeSObjects(new List<String> { sObjectType })[0].fields.getMap().containsKey(fieldNameOrDefaultValue.trim())) {\n                fieldNameSet.add(fieldNameOrDefaultValue);\n            }\n        }\n    }\n}\n            "
    },
    {
      "description": "#5139 [apex] OperationWithHighCostInLoop not firing in triggers",
      "expected-problems": 1,
      "expected-linenumbers": [
        4
      ],
      "code": "\ntrigger AccountTrigger on Account (before insert, before update) {\n    integer i = 0;\n    for (i = 0; i <15; i++) {\n        SObjectType token = Schema.getGlobalDescribe().get('Account');\n    }\n}\n"
    }
  ]
}