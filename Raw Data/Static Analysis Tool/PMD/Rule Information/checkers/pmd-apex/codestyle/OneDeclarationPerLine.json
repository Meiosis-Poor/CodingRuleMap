{
  "name": "OneDeclarationPerLine",
  "language": "apex",
  "description": "\nApex allows the use of several variables declaration of the same type on one line. However, it\ncan lead to quite messy code. This rule looks for several declarations on the same line.\n        ",
  "example": "Integer a, b;   // not recommended\n\nInteger a,\n        b;      // ok by default, can be flagged setting the strictMode property\n\nInteger a;      // preferred approach\nInteger b;",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "one field declaration per statement",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Integer a, b;\n}\n        "
    },
    {
      "description": "one variable declaration per statement",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        Integer a, b;\n    }\n}\n        "
    },
    {
      "description": "all is well",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Integer a;\n    Integer b;\n    void bar() {\n        Integer c;\n        Integer d;\n    }\n}\n        "
    },
    {
      "description": "one variable declaration per line, ok by default",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        Integer a,\n                b;\n    }\n}\n        "
    },
    {
      "description": "one field declaration per line, ok by default",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Integer a,\n            b;\n}\n        "
    },
    {
      "description": "one variable declaration per line, not ok when strictMode",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    void bar() {\n        Integer a,\n                b;\n    }\n}\n        "
    },
    {
      "description": "one field declaration per line, not ok when strictMode",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    Integer a,\n            b;\n}\n        "
    },
    {
      "description": "#3570 - Verify use of reportInForLoopInitializer, negative test unspecified/default",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (Integer i = 0, maxValue = computeMaxValue(); i < maxValue; i++) {\n        }\n    }\n}\n"
    },
    {
      "description": "#3570 - Verify use of reportInForLoopInitializer, negative test specified",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (Integer i = 0, maxValue = computeMaxValue(); i < maxValue; i++) {\n        }\n    }\n}\n"
    },
    {
      "description": "#3570 - Verify use of reportInForLoopInitializer, positive test",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void bar() {\n        for (Integer i = 0, maxValue = computeMaxValue(); i < maxValue; i++) {\n        }\n    }\n}\n"
    }
  ]
}