{
  "name": "LocalVariableNamingConventions",
  "language": "apex",
  "description": "\n            Configurable naming conventions for local variable declarations.\n            This rule reports variable declarations which do not match the regex that applies to their\n            specific kind (e.g. local variable, or final local variable). Each regex can be configured through\n            properties.\n\n            By default this rule uses the standard Apex naming convention (Camel case).\n        ",
  "example": "public class Foo {\n    public Foo() {\n        Integer localVariable; // This is in camel case, so it's ok\n\n        Integer LOCAL_VARIABLE; // This will be reported unless you change the regex\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 55,
  "branches": 5,
  "apis": 4,
  "test": [
    {
      "description": "all is well",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo() {\n        final Integer finalLocalVariable;\n        Integer localVariable;\n    }\n}\n        "
    },
    {
      "description": "default is camel case",
      "expected-problems": 2,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo() {\n        final Integer FINAL_LOCAL_VARIABLE;\n        Integer LOCAL_VARIABLE;\n    }\n}\n        "
    },
    {
      "description": "custom final local pattern",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo() {\n        Integer LOCAL_VARIABLE;\n        final Integer FINAL_LOCAL_VARIABLE;\n    }\n}\n        "
    },
    {
      "description": "custom local pattern",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Foo() {\n        Integer LOCAL_VARIABLE;\n        final Integer FINAL_LOCAL_VARIABLE;\n    }\n}\n        "
    }
  ]
}