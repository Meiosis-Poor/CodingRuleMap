{
  "name": "OverrideBothEqualsAndHashcode",
  "language": "apex",
  "description": "\n      Override both `public Boolean equals(Object obj)`, and `public Integer hashCode()`, or override neither.\n      Even if you are inheriting a hashCode() from a parent class, consider implementing hashCode and explicitly\n      delegating to your superclass.\n      \n      This is especially important when [Using Custom Types in Map Keys and Sets](https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/langCon_apex_collections_maps_keys_userdefined.htm).\n    ",
  "example": "public class Bar {        // poor, missing a hashCode() method\n    public Boolean equals(Object o) {\n      // do some comparison\n    }\n}\npublic class Baz {        // poor, missing an equals() method\n    public Integer hashCode() {\n      // return some hash value\n    }\n}\npublic class Foo {        // perfect, both methods provided\n    public Boolean equals(Object other) {\n      // do some comparison\n    }\n    public Integer hashCode() {\n      // return some hash value\n    }\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 73,
  "branches": 22,
  "apis": 6,
  "test": [
    {
      "description": "hash code only",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Integer hashCode() {}\n}\n        "
    },
    {
      "description": "nested hash code only",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public class Bar {\n        public Integer hashCode() {}\n    }\n}\n        "
    },
    {
      "description": "equals only",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public boolean equals(Object other) {}\n}\n        "
    },
    {
      "description": "nested equals only, checking case insensitiveness",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public class Bar {\n        public Integer eQuAlS(Object other) {}\n    }\n}\n        "
    },
    {
      "description": "overrides both",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public boolean equals(Object other) {}\n    public Integer hashCode() {}\n}\n        "
    },
    {
      "description": "nested overrides both",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public class Bar {\n        public boolean equals(Object other) {}\n        public Integer hashCode() {}\n    }\n}\n        "
    },
    {
      "description": "overrides neither",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {}\n        "
    },
    {
      "description": "equals sig uses String, not Object",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public boolean equals(String o) {\n        return true;\n    }\n    public Integer hashCode() {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "interface",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic interface Foo {\n    boolean equals(Object o);\n}\n        "
    },
    {
      "description": "implements equals but with 2 args, hashCode overloaded as well",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public boolean equals(java.lang.Object o1, java.lang.Object o2) {\n        return true;\n    }\n    public Integer hashCode(java.lang.Object o) {\n        return 0;\n    }\n}\n        "
    },
    {
      "description": "overloaded hashCode",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo  {\n    public Integer hashCode(Object o1) { return false; }\n}\n        "
    },
    {
      "description": "overloaded both",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo  {\n    public boolean equals(Object o1, Object o2) { return false; }\n    public Integer hashCode(Object o1) { return false; }\n}\n        "
    },
    {
      "description": "overloaded hashCode, should fail on equals",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo  {\n    public boolean equals(Object o1) { return false; }\n    public Integer hashCode(Object o1) { return false; }\n}\n        "
    },
    {
      "description": "implements hashCode but with args",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public Integer hashCode(List<Decimal> a) {\n        return 0;\n    }\n}\n        "
    }
  ]
}