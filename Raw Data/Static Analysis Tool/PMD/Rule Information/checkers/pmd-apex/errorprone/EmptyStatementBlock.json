{
  "name": "EmptyStatementBlock",
  "language": "apex",
  "description": "\n      Empty block statements serve no purpose and should be removed.\n    ",
  "example": "public class Foo {\n\n   private Integer _bar;\n\n   public void setBar(Integer bar) {\n        // empty\n   }\n\n}",
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 0,
  "branches": 0,
  "apis": 0,
  "test": [
    {
      "description": "Failure case: Empty Statement Block",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {\n    }\n\n    public abstract void bar() {}\n}\n        "
    },
    {
      "description": "Success case: Empty Statement Block",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {\n        system.debug(1);\n    }\n    public abstract void bar() {}\n}\n        "
    },
    {
      "description": "#760 - false positive on non existing else block",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {\n        if (something) {\n            system.debug(1);\n        }\n    }\n}\n        "
    },
    {
      "description": "#760 - is reported on existing else block",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void foo() {\n        if (something) {\n            system.debug(1);\n        } else {\n        }\n    }\n}\n        "
    },
    {
      "description": "#3568 - Verify use of reportEmptyPrivateNoArgConstructor, negative test unspecified/default",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Singleton {\n    private Singleton() {\n    }\n}\n"
    },
    {
      "description": "#3568 - Verify use of reportEmptyPrivateNoArgConstructor, negative test specified",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic class Singleton {\n    private Singleton() {\n    }\n}\n"
    },
    {
      "description": "#3568 - Verify use of reportEmptyPrivateNoArgConstructor, positive test",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Singleton {\n    private Singleton() {\n    }\n}\n"
    },
    {
      "description": "#3568 - Verify use of reportEmptyVirtualMethod, negative test unspecified/default",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic abstract class AbstractBaseClass {\n    public virtual void overrideMe() {\n    }\n}\n"
    },
    {
      "description": "#3568 - Verify use of reportEmptyVirtualMethod, negative test specified",
      "expected-problems": 1,
      "expected-linenumbers": [],
      "code": "\npublic abstract class AbstractBaseClass {\n    public virtual void overrideMe() {\n    }\n}\n"
    },
    {
      "description": "#3568 - Verify use of reportEmptyVirtualMethod, positive test",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic abstract class AbstractBaseClass {\n    public virtual void overrideMe() {\n    }\n}\n"
    },
    {
      "description": "Empty catch blocks should not be reported",
      "expected-problems": 0,
      "expected-linenumbers": [],
      "code": "\npublic class Foo {\n    public void myMethod() {\n        try {\n            println('a');\n        } catch (Exception e) {\n            // empty - this is a EmptyCatchBlock violation and not a EmptyStatementBlock!\n        }\n    }\n}\n"
    },
    {
      "description": "EmptyStatementBlock in trigger (#5138)",
      "expected-problems": 1,
      "expected-linenumbers": [
        18
      ],
      "code": "\n// https://github.com/SalesforceLabs/chatter-delete-blocker/blob/master/src/triggers/DisableFeedPostDeletes.trigger\n/**\n * Author: Marcus Ericsson - mericsson@salesforce.com\n */\ntrigger DisableFeedPostDeletes on FeedItem (before delete)\n{\n    if (!DisableChatterDeleteDelegate.allowDelete()) {\n        for(FeedItem f : Trigger.old){\n            if (((String)f.parentId).startsWith('00Q') && f.type == 'TrackedChange') {\n                // ok to ignore\n            }\n            else {\n                f.addError('Your administrator has disabled feed post and comment deletions.');\n            }\n        }\n    }\n\n    public void setBar(Integer bar) {\n         // empty\n    }\n}\n"
    }
  ]
}