{
  "name": "BlockRecognizer",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 140,
  "branches": 24,
  "apis": 53,
  "test": [
    {
      "description": "lengthOfMaximalBlock",
      "expected-problems": null,
      "expected-linenumbers": 11,
      "code": "  public void lengthOfMaximalBlock() {\n\n    /**\n\n     * - line 4 of first sequence is \"d\"\n\n     * - line 4 of second sequence is \"d\"\n\n     * - in each sequence, the 3 lines before and the line after are similar -> block size is 5\n\n     */\n\n    assertThat(compute(seq(\"abcde\"), seq(\"abcde\"), 4, 4)).isEqualTo(5);\n\n\n\n    assertThat(compute(seq(\"abcde\"), seq(\"abcd\"), 4, 4)).isEqualTo(4);\n\n    assertThat(compute(seq(\"bcde\"), seq(\"abcde\"), 4, 4)).isZero();\n\n    assertThat(compute(seq(\"bcde\"), seq(\"abcde\"), 3, 4)).isEqualTo(4);\n\n  }"
    },
    {
      "description": "isOverLimit",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void isOverLimit() {\n\n    assertThat(BlockRecognizer.isOverLimit(20, 40)).isFalse();\n\n    assertThat(BlockRecognizer.isOverLimit(3, 100_000)).isTrue();\n\n\n\n    // multiplication of these two ints is higher than Integer.MAX_VALUE\n\n    assertThat(BlockRecognizer.isOverLimit(50_000, 60_000)).isTrue();\n\n  }"
    }
  ]
}