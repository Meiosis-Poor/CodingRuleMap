{
  "name": "IssueChangeContext",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 100,
  "branches": 2,
  "apis": 13,
  "test": [
    {
      "description": "test_issueChangeContextByScanBuilder",
      "expected-problems": null,
      "expected-linenumbers": 4,
      "code": "  public void test_issueChangeContextByScanBuilder() {\n\n    context = issueChangeContextByScanBuilder(NOW).build();\n\n\n\n    verifyContext(true, false, null, null, null);\n\n  }"
    },
    {
      "description": "test_issueChangeContextByUserBuilder",
      "expected-problems": null,
      "expected-linenumbers": 4,
      "code": "  public void test_issueChangeContextByUserBuilder() {\n\n    context = issueChangeContextByUserBuilder(NOW, USER_UUID).build();\n\n\n\n    verifyContext(false, false, USER_UUID, null, null);\n\n  }"
    },
    {
      "description": "test_newBuilder",
      "expected-problems": null,
      "expected-linenumbers": 11,
      "code": "  public void test_newBuilder() {\n\n    context = IssueChangeContext.newBuilder()\n\n      .withScan()\n\n      .withRefreshMeasures()\n\n      .setUserUuid(USER_UUID)\n\n      .setDate(NOW)\n\n      .setExternalUser(EXTERNAL_USER)\n\n      .setWebhookSource(WEBHOOK_SOURCE)\n\n      .build();\n\n\n\n    verifyContext(true, true, USER_UUID, EXTERNAL_USER, WEBHOOK_SOURCE);\n\n  }"
    },
    {
      "description": "test_equal",
      "expected-problems": null,
      "expected-linenumbers": 20,
      "code": "  public void test_equal() {\n\n    context = IssueChangeContext.newBuilder()\n\n      .setUserUuid(USER_UUID)\n\n      .setDate(NOW)\n\n      .setExternalUser(EXTERNAL_USER)\n\n      .setWebhookSource(WEBHOOK_SOURCE)\n\n      .build();\n\n    IssueChangeContext equalContext = IssueChangeContext.newBuilder()\n\n      .setUserUuid(USER_UUID)\n\n      .setDate(NOW)\n\n      .setExternalUser(EXTERNAL_USER)\n\n      .setWebhookSource(WEBHOOK_SOURCE)\n\n      .build();\n\n    IssueChangeContext notEqualContext = IssueChangeContext.newBuilder().setUserUuid(\"other_user_uuid\").setDate(NOW).build();\n\n\n\n    assertThat(context).isEqualTo(context)\n\n      .isEqualTo(equalContext)\n\n      .isNotEqualTo(notEqualContext)\n\n      .isNotEqualTo(null)\n\n      .isNotEqualTo(new Object());\n\n  }"
    },
    {
      "description": "test_hashCode",
      "expected-problems": null,
      "expected-linenumbers": 4,
      "code": "  public void test_hashCode() {\n\n    context = IssueChangeContext.newBuilder().setUserUuid(USER_UUID).setDate(NOW).build();\n\n\n\n    assertThat(context.hashCode()).isEqualTo(Objects.hash(USER_UUID, NOW, false, false, null, null));\n\n  }"
    }
  ]
}