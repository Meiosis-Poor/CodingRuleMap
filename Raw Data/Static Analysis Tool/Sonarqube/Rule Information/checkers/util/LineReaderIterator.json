{
  "name": "LineReaderIterator",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 22,
  "branches": 2,
  "apis": 2,
  "test": [
    {
      "description": "read_lines",
      "expected-problems": null,
      "expected-linenumbers": 8,
      "code": "  public void read_lines() {\n\n    LineReaderIterator it = new LineReaderIterator(new StringReader(\"line1\\nline2\"));\n\n    assertThat(it.hasNext()).isTrue();\n\n    assertThat(it.next()).isEqualTo(\"line1\");\n\n    assertThat(it.hasNext()).isTrue();\n\n    assertThat(it.next()).isEqualTo(\"line2\");\n\n    assertThat(it.hasNext()).isFalse();\n\n  }"
    },
    {
      "description": "ignore_last_newline",
      "expected-problems": null,
      "expected-linenumbers": 8,
      "code": "  public void ignore_last_newline() {\n\n    LineReaderIterator it = new LineReaderIterator(new StringReader(\"line1\\nline2\\n\"));\n\n    assertThat(it.hasNext()).isTrue();\n\n    assertThat(it.next()).isEqualTo(\"line1\");\n\n    assertThat(it.hasNext()).isTrue();\n\n    assertThat(it.next()).isEqualTo(\"line2\");\n\n    assertThat(it.hasNext()).isFalse();\n\n  }"
    },
    {
      "description": "no_lines",
      "expected-problems": null,
      "expected-linenumbers": 4,
      "code": "  public void no_lines() {\n\n    LineReaderIterator it = new LineReaderIterator(new StringReader(\"\"));\n\n    assertThat(it.hasNext()).isFalse();\n\n  }"
    },
    {
      "description": "do_not_wrap_BufferedReader_in_BufferedReader",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void do_not_wrap_BufferedReader_in_BufferedReader() {\n\n    // TODO how to verify that constructor does not build new BufferedReader(BufferedReader) ?\n\n    LineReaderIterator it = new LineReaderIterator(new BufferedReader(new StringReader(\"line\")));\n\n    assertThat(it.next()).isEqualTo(\"line\");\n\n    assertThat(it.hasNext()).isFalse();\n\n  }"
    }
  ]
}