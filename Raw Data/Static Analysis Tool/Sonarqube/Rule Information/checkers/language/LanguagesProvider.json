{
  "name": "LanguagesProvider",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 10,
  "branches": 2,
  "apis": 3,
  "test": [
    {
      "description": "should_provide_default_instance_when_no_language",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void should_provide_default_instance_when_no_language() {\n\n    LanguagesProvider provider = new LanguagesProvider();\n\n    Languages languages = provider.provide(Optional.empty());\n\n\n\n    assertThat(languages).isNotNull();\n\n    assertThat(languages.all()).isEmpty();\n\n  }"
    },
    {
      "description": "should_provide_instance_when_languages",
      "expected-problems": null,
      "expected-linenumbers": 13,
      "code": "  public void should_provide_instance_when_languages() {\n\n    Language A = mock(Language.class);\n\n    when(A.getKey()).thenReturn(\"a\");\n\n    Language B = mock(Language.class);\n\n    when(B.getKey()).thenReturn(\"b\");\n\n\n\n    LanguagesProvider provider = new LanguagesProvider();\n\n    List<Language> languageList = Arrays.asList(A, B);\n\n    Languages languages = provider.provide(Optional.of(languageList));\n\n\n\n    assertThat(languages).isNotNull();\n\n    assertThat(languages.all())\n\n      .hasSize(2)\n\n      .contains(A, B);\n\n  }"
    }
  ]
}