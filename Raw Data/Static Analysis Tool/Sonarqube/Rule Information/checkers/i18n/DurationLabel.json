{
  "name": "DurationLabel",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 59,
  "branches": 19,
  "apis": 5,
  "test": [
    {
      "description": "age_in_seconds",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void age_in_seconds() {\n\n    long now = System.currentTimeMillis();\n\n    DurationLabel.Result result = DurationLabel.label(now - System.currentTimeMillis());\n\n    assertThat(result.key()).isEqualTo(\"duration.seconds\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "age_in_minute",
      "expected-problems": null,
      "expected-linenumbers": 5,
      "code": "  public void age_in_minute() {\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(MINUTE));\n\n    assertThat(result.key()).isEqualTo(\"duration.minute\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "age_in_minutes",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void age_in_minutes() {\n\n    long minutes = 2;\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(minutes * MINUTE));\n\n    assertThat(result.key()).isEqualTo(\"duration.minutes\");\n\n    assertThat(result.value()).isEqualTo(minutes);\n\n\n\n  }"
    },
    {
      "description": "age_in_hour",
      "expected-problems": null,
      "expected-linenumbers": 5,
      "code": "  public void age_in_hour() {\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(HOUR));\n\n    assertThat(result.key()).isEqualTo(\"duration.hour\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "age_in_hours",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void age_in_hours() {\n\n    long hours = 3;\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(hours * HOUR));\n\n    assertThat(result.key()).isEqualTo(\"duration.hours\");\n\n    assertThat(result.value()).isEqualTo(hours);\n\n  }"
    },
    {
      "description": "age_in_day",
      "expected-problems": null,
      "expected-linenumbers": 5,
      "code": "  public void age_in_day() {\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(30 * HOUR));\n\n    assertThat(result.key()).isEqualTo(\"duration.day\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "age_in_days",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void age_in_days() {\n\n    long days = 4;\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(days * DAY));\n\n    assertThat(result.key()).isEqualTo(\"duration.days\");\n\n    assertThat(result.value()).isEqualTo(days);\n\n  }"
    },
    {
      "description": "age_in_month",
      "expected-problems": null,
      "expected-linenumbers": 5,
      "code": "  public void age_in_month() {\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(35 * DAY));\n\n    assertThat(result.key()).isEqualTo(\"duration.month\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "age_in_months",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void age_in_months() {\n\n    long months = 2;\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(months * MONTH));\n\n    assertThat(result.key()).isEqualTo(\"duration.months\");\n\n    assertThat(result.value()).isEqualTo(months);\n\n  }"
    },
    {
      "description": "year_ago",
      "expected-problems": null,
      "expected-linenumbers": 5,
      "code": "  public void year_ago() {\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(14 * MONTH));\n\n    assertThat(result.key()).isEqualTo(\"duration.year\");\n\n    assertThat(result.value()).isNull();\n\n  }"
    },
    {
      "description": "years_ago",
      "expected-problems": null,
      "expected-linenumbers": 6,
      "code": "  public void years_ago() {\n\n    long years = 7;\n\n    DurationLabel.Result result = DurationLabel.label(now() - ago(years * YEAR));\n\n    assertThat(result.key()).isEqualTo(\"duration.years\");\n\n    assertThat(result.value()).isEqualTo(years);\n\n  }"
    }
  ]
}