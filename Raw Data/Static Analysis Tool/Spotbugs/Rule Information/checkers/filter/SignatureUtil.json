{
  "name": "SignatureUtil",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 115,
  "branches": 22,
  "apis": 19,
  "test": [
    {
      "description": "testCreateFieldSignature",
      "expected-problems": null,
      "expected-linenumbers": [
        35,
        41
      ],
      "code": "@Test\n    void testCreateFieldSignature() {\n        assertThat(SignatureUtil.createFieldSignature(null), is(nullValue()));\n        assertThat(SignatureUtil.createFieldSignature(\"int\"), is(\"I\"));\n        assertThat(SignatureUtil.createFieldSignature(\"double[]\"), is(\"[D\"));\n        assertThat(SignatureUtil.createFieldSignature(\"short[][]\"), is(\"[[S\"));\n    }"
    },
    {
      "description": "testCreateMethodSignature",
      "expected-problems": null,
      "expected-linenumbers": [
        47,
        52
      ],
      "code": "@Test\n    void testCreateMethodSignature() {\n        assertThat(SignatureUtil.createMethodSignature(\"\", \"void\"), is(\"()V\"));\n        assertThat(SignatureUtil.createMethodSignature(\"byte,\\r\\nchar, \\tboolean\", \"void\"), is(\"(BCZ)V\"));\n        assertThat(SignatureUtil.createMethodSignature(\"float\", \"java.lang.String[]\"), is(\"(F)[Ljava/lang/String;\"));\n    }"
    },
    {
      "description": "testCreateMethodSignatureWithNull",
      "expected-problems": null,
      "expected-linenumbers": [
        60,
        65
      ],
      "code": "@Test\n    void testCreateMethodSignatureWithNull() {\n        assertThat(SignatureUtil.createMethodSignature(null, null), is(nullValue()));\n        assertThat(SignatureUtil.createMethodSignature(null, \"long\"), is(\"~\\\\(.*\\\\)J\"));\n        assertThat(SignatureUtil.createMethodSignature(\"\", null), is(\"~\\\\(\\\\).*\"));\n    }"
    },
    {
      "description": "testCreateMethodSignatureWithArrayTypes",
      "expected-problems": null,
      "expected-linenumbers": [
        72,
        76
      ],
      "code": "@Test\n    void testCreateMethodSignatureWithArrayTypes() {\n        assertThat(SignatureUtil.createMethodSignature(null, \"long[]\"), is(\"~\\\\(.*\\\\)\\\\[J\"));\n        assertThat(SignatureUtil.createMethodSignature(\"byte[], short, byte\", null), is(\"~\\\\(\\\\[BSB\\\\).*\"));\n    }"
    }
  ]
}