{
  "name": "NameMatch",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 120,
  "branches": 14,
  "apis": 12,
  "test": [
    {
      "description": "testExactMatch",
      "expected-problems": null,
      "expected-linenumbers": [
        31,
        37
      ],
      "code": "@Test\n    void testExactMatch() {\n        NameMatch match = new NameMatch(SignatureUtil.createMethodSignature(\"\", \"void\"));\n        assertTrue(match.match(\"()V\"));\n        assertFalse(match.match(\"(I)V\"));\n        assertFalse(match.match(\"()J\"));\n    }"
    },
    {
      "description": "testParameterPatternMatch",
      "expected-problems": null,
      "expected-linenumbers": [
        39,
        46
      ],
      "code": "@Test\n    void testParameterPatternMatch() {\n        NameMatch anyParamReturnVoid = new NameMatch(SignatureUtil.createMethodSignature(null, \"void\"));\n        assertTrue(anyParamReturnVoid.match(\"()V\"));\n        assertTrue(anyParamReturnVoid.match(\"(I)V\"));\n        assertTrue(anyParamReturnVoid.match(\"(Ljava/lang/String;)V\"));\n        assertFalse(anyParamReturnVoid.match(\"()J\"));\n    }"
    },
    {
      "description": "testReturnValuePatternMatch",
      "expected-problems": null,
      "expected-linenumbers": [
        48,
        55
      ],
      "code": "@Test\n    void testReturnValuePatternMatch() {\n        NameMatch anyParamReturnVoid = new NameMatch(SignatureUtil.createMethodSignature(\"\", null));\n        assertTrue(anyParamReturnVoid.match(\"()V\"));\n        assertTrue(anyParamReturnVoid.match(\"()I\"));\n        assertTrue(anyParamReturnVoid.match(\"()Ljava/lang/String;\"));\n        assertFalse(anyParamReturnVoid.match(\"(B)J\"));\n    }"
    }
  ]
}