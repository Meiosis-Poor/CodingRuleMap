{
  "name": "IO",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 313,
  "branches": 27,
  "apis": 26,
  "test": [
    {
      "description": "testReadAllWithCorrectSize",
      "expected-problems": null,
      "expected-linenumbers": [
        42,
        50
      ],
      "code": "@Test\n    void testReadAllWithCorrectSize() throws IOException {\n\n        for (int i = 10; i <= 10000; i *= 10) {\n            byte[] input = randomBytes(i);\n            byte[] output = IO.readAll(new ByteArrayInputStream(input), i);\n            Assertions.assertArrayEquals(input, output);\n        }\n    }"
    },
    {
      "description": "testReadAllWithSmallSize",
      "expected-problems": null,
      "expected-linenumbers": [
        52,
        60
      ],
      "code": "@Test\n    void testReadAllWithSmallSize() throws IOException {\n\n        for (int i = 10; i <= 10000; i *= 10) {\n            byte[] input = randomBytes(i);\n            byte[] output = IO.readAll(new ByteArrayInputStream(input), i - 9);\n            Assertions.assertArrayEquals(input, output);\n        }\n    }"
    },
    {
      "description": "testReadAllWithLargeSize",
      "expected-problems": null,
      "expected-linenumbers": [
        62,
        70
      ],
      "code": "@Test\n    void testReadAllWithLargeSize() throws IOException {\n\n        for (int i = 10; i <= 10000; i *= 10) {\n            byte[] input = randomBytes(i);\n            byte[] output = IO.readAll(new ByteArrayInputStream(input), i + 29);\n            Assertions.assertArrayEquals(input, output);\n        }\n    }"
    },
    {
      "description": "testReadAllWithoutSize",
      "expected-problems": null,
      "expected-linenumbers": [
        72,
        80
      ],
      "code": "@Test\n    void testReadAllWithoutSize() throws IOException {\n\n        for (int i = 10; i <= 10000; i *= 10) {\n            byte[] input = randomBytes(i);\n            byte[] output = IO.readAll(new ByteArrayInputStream(input));\n            Assertions.assertArrayEquals(input, output);\n        }\n    }"
    }
  ]
}