{
  "name": "FindNonShortCircuit",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 302,
  "branches": 64,
  "apis": 11,
  "test": [
    {
      "description": "testDefaultBugTypeAndPriority",
      "expected-problems": null,
      "expected-linenumbers": [
        34,
        39
      ],
      "code": "@Test\n    void testDefaultBugTypeAndPriority() {\n        BugInstance bug = check.createBugInstance();\n        assertEquals(FindNonShortCircuit.NS_NON_SHORT_CIRCUIT, bug.getType());\n        assertEquals(Priorities.LOW_PRIORITY, bug.getPriority());\n    }"
    },
    {
      "description": "testBugTypeAndPriorityDangerOld",
      "expected-problems": null,
      "expected-linenumbers": [
        41,
        47
      ],
      "code": "@Test\n    void testBugTypeAndPriorityDangerOld() {\n        check.sawDangerOld = true;\n        BugInstance bug = check.createBugInstance();\n        assertEquals(FindNonShortCircuit.NS_NON_SHORT_CIRCUIT, bug.getType());\n        assertEquals(Priorities.NORMAL_PRIORITY, bug.getPriority());\n    }"
    },
    {
      "description": "testBugTypeAndPriorityNullTestOld",
      "expected-problems": null,
      "expected-linenumbers": [
        49,
        56
      ],
      "code": "@Test\n    void testBugTypeAndPriorityNullTestOld() {\n        check.sawDangerOld = true;\n        check.sawNullTestVeryOld = true;\n        BugInstance bug = check.createBugInstance();\n        assertEquals(FindNonShortCircuit.NS_NON_SHORT_CIRCUIT, bug.getType());\n        assertEquals(Priorities.HIGH_PRIORITY, bug.getPriority());\n    }"
    },
    {
      "description": "testBugTypeAndPriorityMethodCallOld",
      "expected-problems": null,
      "expected-linenumbers": [
        58,
        65
      ],
      "code": "@Test\n    void testBugTypeAndPriorityMethodCallOld() {\n        check.sawDangerOld = true;\n        check.sawMethodCallOld = true;\n        BugInstance bug = check.createBugInstance();\n        assertEquals(FindNonShortCircuit.NS_DANGEROUS_NON_SHORT_CIRCUIT, bug.getType());\n        assertEquals(Priorities.HIGH_PRIORITY, bug.getPriority());\n    }"
    }
  ]
}