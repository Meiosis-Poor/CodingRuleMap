{
  "name": "FindHiddenMethod",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 128,
  "branches": 13,
  "apis": 20,
  "test": [
    {
      "description": "testBadFindHiddenMethodTest",
      "expected-problems": null,
      "expected-linenumbers": [
        9,
        15
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest() {\n        performAnalysis(\"findhiddenmethodtest/GrantAccessStatic.class\",\n                \"findhiddenmethodtest/BadFindHiddenMethodTest.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadFindHiddenMethodTest\", \"displayAccountStatus\", 15);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest2",
      "expected-problems": null,
      "expected-linenumbers": [
        17,
        23
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest2() {\n        performAnalysis(\"findhiddenmethodtest/BadSuperClass.class\",\n                \"findhiddenmethodtest/BadHidingVsOverriding.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadHidingVsOverriding\", \"methodHiding\", 19);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest3",
      "expected-problems": null,
      "expected-linenumbers": [
        26,
        33
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest3() {\n        performAnalysis(\"findhiddenmethodtest/SuperBadInEqualMultipleMethod.class\",\n                \"findhiddenmethodtest/BadInEqualMultipleStaticMethod.class\");\n        assertBugTypeCount(BUG_TYPE, 2);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadInEqualMultipleStaticMethod\", \"display\", 25);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadInEqualMultipleStaticMethod\", \"display2\", 29);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest4",
      "expected-problems": null,
      "expected-linenumbers": [
        35,
        41
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest4() {\n        performAnalysis(\"findhiddenmethodtest/BadMainMethodCheck.class\",\n                \"findhiddenmethodtest/BadSuperClassWithMain.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadMainMethodCheck\", \"main\", 18);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest5",
      "expected-problems": null,
      "expected-linenumbers": [
        43,
        50
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest5() {\n        performAnalysis(\"findhiddenmethodtest/BadGrandClass.class\",\n                \"findhiddenmethodtest/BadParentClass.class\",\n                \"findhiddenmethodtest/BadMultiLevelInheritance.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadMultiLevelInheritance\", \"display\", 20);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest6",
      "expected-problems": null,
      "expected-linenumbers": [
        52,
        59
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest6() {\n        performAnalysis(\"findhiddenmethodtest/SuperBadMultipleMethods.class\",\n                \"findhiddenmethodtest/BadMultipleStaticMethods.class\");\n        assertBugTypeCount(BUG_TYPE, 2);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadMultipleStaticMethods\", \"display\", 19);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadMultipleStaticMethods\", \"display2\", 23);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest7",
      "expected-problems": null,
      "expected-linenumbers": [
        61,
        68
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest7() {\n        performAnalysis(\"findhiddenmethodtest/SuperBadNonOrderedMultipleStaticMethods.class\",\n                \"findhiddenmethodtest/BadNonOrderedMultipleStaticMethods.class\");\n        assertBugTypeCount(BUG_TYPE, 2);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadNonOrderedMultipleStaticMethods\", \"display\", 24);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadNonOrderedMultipleStaticMethods\", \"display2\", 28);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest8",
      "expected-problems": null,
      "expected-linenumbers": [
        70,
        76
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest8() {\n        performAnalysis(\"findhiddenmethodtest/BadOuterInnerClass.class\",\n                \"findhiddenmethodtest/BadOuterInnerClass$BadInner.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadOuterInnerClass$BadInner\", \"badMethod\", 15);\n    }"
    },
    {
      "description": "testBadFindHiddenMethodTest9",
      "expected-problems": null,
      "expected-linenumbers": [
        78,
        84
      ],
      "code": "@Test\n    void testBadFindHiddenMethodTest9() {\n        performAnalysis(\"findhiddenmethodtest/SuperBadProtected.class\",\n                \"findhiddenmethodtest/BadProtected.class\");\n        assertBugTypeCount(BUG_TYPE, 1);\n        assertBugInMethodAtLine(BUG_TYPE, \"BadProtected\", \"display\", 15);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest",
      "expected-problems": null,
      "expected-linenumbers": [
        86,
        91
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest() {\n        performAnalysis(\"findhiddenmethodtest/GrantAccess.class\",\n                \"findhiddenmethodtest/GoodFindHiddenMethodTest.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest2",
      "expected-problems": null,
      "expected-linenumbers": [
        93,
        98
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest2() {\n        performAnalysis(\"findhiddenmethodtest/SuperGoodInEqualMultipleMethod.class\",\n                \"findhiddenmethodtest/GoodInEqualNonStaticMethods.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest3",
      "expected-problems": null,
      "expected-linenumbers": [
        100,
        105
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest3() {\n        performAnalysis(\"findhiddenmethodtest/GoodSuperClassWithMain.class\",\n                \"findhiddenmethodtest/GoodMainMethodCheck.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest4",
      "expected-problems": null,
      "expected-linenumbers": [
        107,
        113
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest4() {\n        performAnalysis(\"findhiddenmethodtest/GoodGrandNonStatic.class\",\n                \"findhiddenmethodtest/GoodParentNonStatic.class\",\n                \"findhiddenmethodtest/GoodMultiLevelInheritanceNonStatic.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest5",
      "expected-problems": null,
      "expected-linenumbers": [
        115,
        121
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest5() {\n        performAnalysis(\"findhiddenmethodtest/GoodGrandClassPrivate.class\",\n                \"findhiddenmethodtest/GoodParentClassPrivate.class\",\n                \"findhiddenmethodtest/GoodMultiLevelInheritancePrivate.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest6",
      "expected-problems": null,
      "expected-linenumbers": [
        123,
        128
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest6() {\n        performAnalysis(\"findhiddenmethodtest/SuperMultipleNonStatic.class\",\n                \"findhiddenmethodtest/GoodMultipleNonStaticMethods.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest7",
      "expected-problems": null,
      "expected-linenumbers": [
        130,
        135
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest7() {\n        performAnalysis(\"findhiddenmethodtest/SuperGoodMultipleStaticMethod.class\",\n                \"findhiddenmethodtest/GoodMultipleStaticMethod.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest8",
      "expected-problems": null,
      "expected-linenumbers": [
        137,
        142
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest8() {\n        performAnalysis(\"findhiddenmethodtest/SuperGoodNonOrderedMultipleStaticMethods.class\",\n                \"findhiddenmethodtest/GoodNonOrderedMultipleNonStaticMethods.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest9",
      "expected-problems": null,
      "expected-linenumbers": [
        144,
        149
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest9() {\n        performAnalysis(\"findhiddenmethodtest/GoodOuterInnerClassNonStatic.class\",\n                \"findhiddenmethodtest/GoodOuterInnerClassNonStatic$GoodInnerNonStaticGood.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest10",
      "expected-problems": null,
      "expected-linenumbers": [
        151,
        156
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest10() {\n        performAnalysis(\"findhiddenmethodtest/GoodOuterInnerClassPrivate.class\",\n                \"findhiddenmethodtest/GoodOuterInnerClassPrivate$GoodInnerClassPrivate.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    },
    {
      "description": "testGoodFindHiddenMethodTest11",
      "expected-problems": null,
      "expected-linenumbers": [
        158,
        163
      ],
      "code": "@Test\n    void testGoodFindHiddenMethodTest11() {\n        performAnalysis(\"findhiddenmethodtest/SuperGoodProtected.class\",\n                \"findhiddenmethodtest/GoodProtected.class\");\n        assertNoBugType(BUG_TYPE);\n    }"
    }
  ]
}