{
  "name": "FindBadEndOfStreamCheck",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 115,
  "branches": 14,
  "apis": 38,
  "test": [
    {
      "description": "testBadEndOfFileChecks",
      "expected-problems": null,
      "expected-linenumbers": [
        11,
        34
      ],
      "code": "@Test\n    void testBadEndOfFileChecks() {\n        performAnalysis(\"endOfStreamCheck/BadEndOfStreamCheck.class\");\n\n        assertBugTypeCount(EOS_BUG_TYPE, 16);\n\n        final String className = \"BadEndOfStreamCheck\";\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream1\", 12);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream2\", 25);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream3\", 39);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream4\", 55);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream5\", 70);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream6\", 83);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream7\", 97);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileInputStream8\", 113);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader1\", 128);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader2\", 141);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader3\", 155);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader4\", 171);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader5\", 186);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader6\", 199);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader7\", 213);\n        assertBugInMethodAtLine(EOS_BUG_TYPE, className, \"badFileReader8\", 229);\n    }"
    },
    {
      "description": "testGoodEndOfFileChecks",
      "expected-problems": null,
      "expected-linenumbers": [
        36,
        41
      ],
      "code": "@Test\n    void testGoodEndOfFileChecks() {\n        performAnalysis(\"endOfStreamCheck/GoodEndOfStreamCheck.class\");\n\n        assertNoBugType(EOS_BUG_TYPE);\n    }"
    }
  ]
}