{
  "name": "FindArgumentAssertions",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 159,
  "branches": 38,
  "apis": 12,
  "test": [
    {
      "description": "testArgumentAssertions",
      "expected-problems": null,
      "expected-linenumbers": [
        12,
        50
      ],
      "code": "@Test\n    void testArgumentAssertions() {\n        performAnalysis(\"ArgumentAssertions.class\");\n\n        assertBugTypeCount(BUG_TYPE, 23);\n\n        assertDABug(\"getAbsAdd\", 4);\n        assertDABug(\"getAbsAdd\", 5);\n        assertDABug(\"getAbsAdd2\", 14);\n        assertDABug(\"getAbsAdd2\", 15);\n        assertDABug(\"getAbsAdd3\", 28);\n        assertDABug(\"getAbsAdd3\", 29);\n        assertDABug(\"getAbsAdd3\", 30);\n        assertDABug(\"getAbsAdd4\", 39);\n        assertDABug(\"print\", 47);\n        assertDABug(\"indirect\", 59);\n        assertDABug(\"compBool1\", 64);\n        assertDABug(\"compBool2\", 70);\n        assertDABug(\"getAbs\", 76);\n        assertDABug(\"getAbs\", 83);\n        assertDABug(\"compShor\", 90);\n        assertDABug(\"getAbs\", 96);\n        assertDABug(\"compLong\", 103);\n        assertDABug(\"getAbs\", 109);\n        assertDABug(\"compFloat\", 116);\n        assertDABug(\"getAbs\", 122);\n        assertDABug(\"compDouble\", 129);\n        assertDABug(\"indirect\", 136);\n        // assertDABug(\"indirect2\", 143); -- indirect assertions of arguments are not supported yet (except copies)\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"literal\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"literalAndMessage\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"literalAndMessageStr\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"conditionallyInMessage\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"privateMethod\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"privateFinalMethod\");\n        assertNoBugInMethod(BUG_TYPE, \"ArgumentAssertions\", \"privateStaticMethod\");\n        assertDABug(\"assertingArgInFor\", 198);\n        // assertDABug(\"lambda$assertingArgInStream$0\", 206); // assertions inside streams are not supported yet\n    }"
    }
  ]
}