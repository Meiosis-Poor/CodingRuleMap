{
  "name": "SAXBugCollectionHandler",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 807,
  "branches": 142,
  "apis": 200,
  "test": [
    {
      "description": "testBugInstanceXmlPropsNoReviews",
      "expected-problems": null,
      "expected-linenumbers": [
        33,
        64
      ],
      "code": "@Test\n    void testBugInstanceXmlPropsNoReviews() throws Exception {\n        SortedBugCollection bc = new SortedBugCollection();\n        bc.readXML(new StringReader(\n                \"<BugCollection version='1.3.10-dev-20100728' sequence='0' timestamp='1280333223462' analysisTimestamp='1280333224881' release=''>\"\n                        + \"  <BugInstance type='MS_MUTABLE_ARRAY' priority='1' abbrev='MS' category='MALICIOUS_CODE' instanceHash='1acc5c5b9b7ab9efacede805afe1e53a' instanceOccurrenceNum='0' instanceOccurrenceMax='0' rank='16' ageInDays='108' firstSeen='4/11/10 11:24 AM'>\"\n                        + \"    <ShortMessage>Field is a mutable array</ShortMessage>\"\n                        + \"    <LongMessage>org.apache.bcel.Const.ACCESS_NAMES is a mutable array</LongMessage>\"\n                        + \"    <Class classname='org.apache.bcel.Constants' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' start='210' end='1443' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>At Const.java:[lines 210-1443]</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>In class org.apache.bcel.Constants</Message>\"\n                        + \"    </Class>\"\n                        + \"    <Field classname='org.apache.bcel.Constants' name='ACCESS_NAMES' signature='[Ljava/lang/String;' isStatic='true' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>In Const.java</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>Field org.apache.bcel.Const.ACCESS_NAMES</Message>\"\n                        + \"    </Field>\"\n                        + \"    <SourceLine classname='org.apache.bcel.Constants' primary='true' start='210' end='210' startBytecode='89' endBytecode='89' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"      <Message>At Const.java:[line 210]</Message>\"\n                        + \"    </SourceLine>\"\n                        + \"  </BugInstance>\"\n                        + \"</BugCollection>\"));\n        assertEquals(1, bc.getCollection().size());\n        assertEquals(\"edu.umd.cs.findbugs.plugins.core\", DetectorFactoryCollection.instance().getCorePlugin().getPluginId());\n        BugInstance bug = bc.getCollection().iterator().next();\n        assertEquals(\"MS_MUTABLE_ARRAY\", bug.getBugPattern().getType());\n        assertEquals(\"1acc5c5b9b7ab9efacede805afe1e53a\", bug.getInstanceHash());\n        assertEquals(16, bug.getBugRank());\n    }"
    },
    {
      "description": "testBugInstanceXmlPropsWithReviews",
      "expected-problems": null,
      "expected-linenumbers": [
        66,
        96
      ],
      "code": "@Test\n    void testBugInstanceXmlPropsWithReviews() throws Exception {\n        SortedBugCollection bc = new SortedBugCollection();\n        bc.readXML(new StringReader(\n                \"<BugCollection version='1.3.10-dev-20100728' sequence='0' timestamp='1280333223462' analysisTimestamp='1280333224881' release=''>\"\n                        + \"  <BugInstance type='MS_MUTABLE_ARRAY' priority='1' abbrev='MS' category='MALICIOUS_CODE' instanceHash='1acc5c5b9b7ab9efacede805afe1e53a' instanceOccurrenceNum='0' instanceOccurrenceMax='0' rank='16' ageInDays='108' firstSeen='4/11/10 11:24 AM' reviews='4' consensus='NOT_A_BUG' notAProblem='true'>\"\n                        + \"    <ShortMessage>Field is a mutable array</ShortMessage>\"\n                        + \"    <LongMessage>org.apache.bcel.Const.ACCESS_NAMES is a mutable array</LongMessage>\"\n                        + \"    <Class classname='org.apache.bcel.Constants' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' start='210' end='1443' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>At Const.java:[lines 210-1443]</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>In class org.apache.bcel.Constants</Message>\"\n                        + \"    </Class>\"\n                        + \"    <Field classname='org.apache.bcel.Constants' name='ACCESS_NAMES' signature='[Ljava/lang/String;' isStatic='true' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>In Const.java</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>Field org.apache.bcel.Const.ACCESS_NAMES</Message>\"\n                        + \"    </Field>\"\n                        + \"    <SourceLine classname='org.apache.bcel.Constants' primary='true' start='210' end='210' startBytecode='89' endBytecode='89' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"      <Message>At Const.java:[line 210]</Message>\"\n                        + \"    </SourceLine>\"\n                        + \"  </BugInstance>\"\n                        + \"</BugCollection>\"));\n        assertEquals(1, bc.getCollection().size());\n        BugInstance bug = bc.getCollection().iterator().next();\n        assertEquals(\"MS_MUTABLE_ARRAY\", bug.getBugPattern().getType());\n        assertEquals(\"1acc5c5b9b7ab9efacede805afe1e53a\", bug.getInstanceHash());\n        assertEquals(16, bug.getBugRank());\n    }"
    },
    {
      "description": "testBugInstanceXmlPropsWithReviewsShouldFix",
      "expected-problems": null,
      "expected-linenumbers": [
        98,
        128
      ],
      "code": "@Test\n    void testBugInstanceXmlPropsWithReviewsShouldFix() throws Exception {\n        SortedBugCollection bc = new SortedBugCollection();\n        bc.readXML(new StringReader(\n                \"<BugCollection version='1.3.10-dev-20100728' sequence='0' timestamp='1280333223462' analysisTimestamp='1280333224881' release=''>\"\n                        + \"  <BugInstance type='MS_MUTABLE_ARRAY' priority='1' abbrev='MS' category='MALICIOUS_CODE' instanceHash='1acc5c5b9b7ab9efacede805afe1e53a' instanceOccurrenceNum='0' instanceOccurrenceMax='0' rank='16' ageInDays='108' firstSeen='4/11/10 11:24 AM' reviews='4' consensus='SHOULD_FIX' shouldFix='true'>\"\n                        + \"    <ShortMessage>Field is a mutable array</ShortMessage>\"\n                        + \"    <LongMessage>org.apache.bcel.Const.ACCESS_NAMES is a mutable array</LongMessage>\"\n                        + \"    <Class classname='org.apache.bcel.Constants' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' start='210' end='1443' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>At Const.java:[lines 210-1443]</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>In class org.apache.bcel.Constants</Message>\"\n                        + \"    </Class>\"\n                        + \"    <Field classname='org.apache.bcel.Constants' name='ACCESS_NAMES' signature='[Ljava/lang/String;' isStatic='true' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>In Const.java</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>Field org.apache.bcel.Const.ACCESS_NAMES</Message>\"\n                        + \"    </Field>\"\n                        + \"    <SourceLine classname='org.apache.bcel.Constants' primary='true' start='210' end='210' startBytecode='89' endBytecode='89' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"      <Message>At Const.java:[line 210]</Message>\"\n                        + \"    </SourceLine>\"\n                        + \"  </BugInstance>\"\n                        + \"</BugCollection>\"));\n        assertEquals(1, bc.getCollection().size());\n        BugInstance bug = bc.getCollection().iterator().next();\n        assertEquals(\"MS_MUTABLE_ARRAY\", bug.getBugPattern().getType());\n        assertEquals(\"1acc5c5b9b7ab9efacede805afe1e53a\", bug.getInstanceHash());\n        assertEquals(16, bug.getBugRank());\n    }"
    },
    {
      "description": "testReadAndThenStoreXmlProps",
      "expected-problems": null,
      "expected-linenumbers": [
        130,
        170
      ],
      "code": "@Test\n    void testReadAndThenStoreXmlProps() throws Exception {\n        SortedBugCollection origBC = new SortedBugCollection();\n        // read it in\n        origBC.readXML(new StringReader(\n                \"<BugCollection version='1.3.10-dev-20100728' sequence='0' timestamp='1280333223462' analysisTimestamp='1280333224881' release=''>\"\n                        + \"  <BugInstance type='MS_MUTABLE_ARRAY' priority='1' abbrev='MS' category='MALICIOUS_CODE' instanceHash='1acc5c5b9b7ab9efacede805afe1e53a' instanceOccurrenceNum='0' instanceOccurrenceMax='0' rank='16' ageInDays='108' firstSeen='4/11/10 11:24 AM' reviews='4' consensus='SHOULD_FIX' shouldFix='true'>\"\n                        + \"    <ShortMessage>Field is a mutable array</ShortMessage>\"\n                        + \"    <LongMessage>org.apache.bcel.Const.ACCESS_NAMES is a mutable array</LongMessage>\"\n                        + \"    <Class classname='org.apache.bcel.Constants' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' start='210' end='1443' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>At Const.java:[lines 210-1443]</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>In class org.apache.bcel.Constants</Message>\"\n                        + \"    </Class>\"\n                        + \"    <Field classname='org.apache.bcel.Constants' name='ACCESS_NAMES' signature='[Ljava/lang/String;' isStatic='true' primary='true'>\"\n                        + \"      <SourceLine classname='org.apache.bcel.Constants' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"        <Message>In Const.java</Message>\"\n                        + \"      </SourceLine>\"\n                        + \"      <Message>Field org.apache.bcel.Const.ACCESS_NAMES</Message>\"\n                        + \"    </Field>\"\n                        + \"    <SourceLine classname='org.apache.bcel.Constants' primary='true' start='210' end='210' startBytecode='89' endBytecode='89' sourcefile='Const.java' sourcepath='org/apache/bcel/Const.java'>\"\n                        + \"      <Message>At Const.java:[line 210]</Message>\"\n                        + \"    </SourceLine>\"\n                        + \"  </BugInstance>\"\n                        + \"</BugCollection>\"));\n        // write it out\n        ByteArrayOutputStream outBytes = new ByteArrayOutputStream();\n        origBC.writeXML(outBytes);\n\n        // read it back in\n        SortedBugCollection bc = new SortedBugCollection();\n        bc.readXML(new StringReader(new String(outBytes.toByteArray(), StandardCharsets.UTF_8)));\n\n        // check it\n        assertEquals(1, bc.getCollection().size());\n        BugInstance bug = bc.getCollection().iterator().next();\n        assertEquals(\"MS_MUTABLE_ARRAY\", bug.getBugPattern().getType());\n        assertEquals(\"1acc5c5b9b7ab9efacede805afe1e53a\", bug.getInstanceHash());\n        assertEquals(16, bug.getBugRank());\n    }"
    },
    {
      "description": "testReadAndThenStoreJasAttribute",
      "expected-problems": null,
      "expected-linenumbers": [
        172,
        207
      ],
      "code": "@Test\n    void testReadAndThenStoreJasAttribute() throws Exception {\n        SortedBugCollection origBC = new SortedBugCollection();\n        // read it in\n        origBC.readXML(new StringReader(\n                \"<BugCollection version='1.3.10-dev-20100728' sequence='0' timestamp='1280333223462' analysisTimestamp='1280333224881' release=''>\"\n                        + \"<BugInstance type=\\\"UUF_UNUSED_FIELD\\\" priority=\\\"1\\\" rank=\\\"16\\\" abbrev=\\\"UuF\\\" category=\\\"PERFORMANCE\\\">\\n\"\n                        + \"  <Class classname=\\\"ghIssues.issue543.ImmutableFoobarValue.class\\\" classAnnotationNames=\\\"org.immutables.value.Generated\\\">\\n\"\n                        + \"    <SourceLine classname=\\\"ghIssues.issue543.ImmutableFoobarValue.class\\\"/>\\n\"\n                        + \"  </Class>\\n\"\n                        + \"  <Method classname=\\\"ghIssues.issue543.ImmutableFoobarValue.class\\\" name=\\\"foo\\\" signature=\\\"int\\\" isStatic=\\\"false\\\" classAnnotationNames=\\\"org.immutables.value.Generated\\\"/>\\n\"\n                        + \"  <Field classname=\\\"ghIssues.issue543.ImmutableFoobarValue.class\\\" name=\\\"foo\\\" signature=\\\"int\\\" isStatic=\\\"false\\\" classAnnotationNames=\\\"org.immutables.value.Generated\\\">\\n\"\n                        + \"    <SourceLine classname=\\\"ghIssues.issue543.ImmutableFoobarValue.class\\\"/>\\n\"\n                        + \"  </Field>\\n\"\n                        + \"</BugInstance>\\n\"\n                        + \"</BugCollection>\"));\n        // write it out\n        ByteArrayOutputStream outBytes = new ByteArrayOutputStream();\n        origBC.writeXML(outBytes);\n\n        // read it back in\n        SortedBugCollection bc = new SortedBugCollection();\n        bc.readXML(new StringReader(new String(outBytes.toByteArray(), StandardCharsets.UTF_8)));\n\n        // check it\n        assertEquals(1, bc.getCollection().size());\n        BugInstance bug = bc.getCollection().iterator().next();\n        assertEquals(\"UUF_UNUSED_FIELD\", bug.getBugPattern().getType());\n        assertEquals(3, bug.getAnnotations().size());\n        for (BugAnnotation annotation : bug.getAnnotations()) {\n            assertTrue(annotation instanceof PackageMemberAnnotation);\n            List<String> javaAnnotationNames = ((PackageMemberAnnotation) annotation).getJavaAnnotationNames();\n            assertEquals(1, javaAnnotationNames.size());\n            assertEquals(\"org.immutables.value.Generated\", javaAnnotationNames.get(0));\n        }\n    }"
    }
  ]
}