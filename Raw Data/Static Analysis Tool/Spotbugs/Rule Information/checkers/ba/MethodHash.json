{
  "name": "MethodHash",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 194,
  "branches": 11,
  "apis": 13,
  "test": [
    {
      "description": "testHashToString",
      "expected-problems": null,
      "expected-linenumbers": [
        56,
        60
      ],
      "code": "@Test\n    void testHashToString() {\n        String s2 = ClassHash.hashToString(hash);\n        Assertions.assertEquals(s, s2);\n    }"
    },
    {
      "description": "testStringToHash",
      "expected-problems": null,
      "expected-linenumbers": [
        62,
        66
      ],
      "code": "@Test\n    void testStringToHash() {\n        byte[] hash2 = ClassHash.stringToHash(s);\n        Assertions.assertArrayEquals(hash, hash2);\n    }"
    },
    {
      "description": "testSame",
      "expected-problems": null,
      "expected-linenumbers": [
        68,
        72
      ],
      "code": "@Test\n    void testSame() {\n        Assertions.assertEquals(0, MethodHash.compareHashes(hash, sameHash));\n        Assertions.assertEquals(0, MethodHash.compareHashes(sameHash, hash));\n    }"
    },
    {
      "description": "testGreater",
      "expected-problems": null,
      "expected-linenumbers": [
        74,
        77
      ],
      "code": "@Test\n    void testGreater() {\n        Assertions.assertTrue(MethodHash.compareHashes(hash, greaterHash) < 0);\n    }"
    },
    {
      "description": "testLesser",
      "expected-problems": null,
      "expected-linenumbers": [
        79,
        82
      ],
      "code": "@Test\n    void testLesser() {\n        Assertions.assertTrue(MethodHash.compareHashes(hash, lesserHash) > 0);\n    }"
    },
    {
      "description": "testShorter",
      "expected-problems": null,
      "expected-linenumbers": [
        84,
        87
      ],
      "code": "@Test\n    void testShorter() {\n        Assertions.assertTrue(MethodHash.compareHashes(hash, shorterHash) > 0);\n    }"
    },
    {
      "description": "testLonger",
      "expected-problems": null,
      "expected-linenumbers": [
        89,
        92
      ],
      "code": "@Test\n    void testLonger() {\n        Assertions.assertTrue(MethodHash.compareHashes(hash, longerHash) < 0);\n    }"
    }
  ]
}