{
  "name": "AbstractBugReporter",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 424,
  "branches": 35,
  "apis": 46,
  "test": [
    {
      "description": "verifyPriorityThresholdWorks",
      "expected-problems": null,
      "expected-linenumbers": [
        58,
        68
      ],
      "code": "@Test\n    void verifyPriorityThresholdWorks() {\n        assertReported(false, \"Normal bug report blocked on high\",\n                BugRanker.VISIBLE_RANK_MAX, Priorities.HIGH_PRIORITY);\n\n        assertReported(true, \"Normal bug report reported on normal\",\n                BugRanker.VISIBLE_RANK_MAX, Priorities.NORMAL_PRIORITY);\n\n        assertReported(true, \"Normal bug report reported on low\",\n                BugRanker.VISIBLE_RANK_MAX, Priorities.LOW_PRIORITY);\n    }"
    },
    {
      "description": "verifyRankThresholdWorks",
      "expected-problems": null,
      "expected-linenumbers": [
        70,
        82
      ],
      "code": "@Test\n    void verifyRankThresholdWorks() {\n        int bugRank = bugInstance.getBugRank();\n\n        assertReported(false, \"Rank \" + bugRank + \" bug report blocked on min visible\",\n                BugRanker.VISIBLE_RANK_MIN, Priorities.LOW_PRIORITY);\n\n        assertReported(true, \"Rank \" + bugRank + \" bug report works on equal\",\n                bugRank, Priorities.LOW_PRIORITY);\n\n        assertReported(true, \"Rank \" + bugRank + \" bug report works on max visible\",\n                BugRanker.VISIBLE_RANK_MAX, Priorities.LOW_PRIORITY);\n    }"
    },
    {
      "description": "verifyRelaxedOperationWorks",
      "expected-problems": null,
      "expected-linenumbers": [
        84,
        93
      ],
      "code": "@Test\n    void verifyRelaxedOperationWorks() {\n        reporter.setIsRelaxed(true);\n        assertReported(true, \"Relaxed bug reported even when it would not\",\n                BugRanker.VISIBLE_RANK_MIN, Priorities.HIGH_PRIORITY);\n\n        reporter.setIsRelaxed(false);\n        assertReported(false, \"No report when not relaxed and blocked\",\n                BugRanker.VISIBLE_RANK_MIN, Priorities.HIGH_PRIORITY);\n    }"
    }
  ]
}