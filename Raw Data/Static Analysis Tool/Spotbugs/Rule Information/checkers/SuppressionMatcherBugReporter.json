{
  "name": "SuppressionMatcherBugReporter",
  "language": "java",
  "description": null,
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 20,
  "branches": 0,
  "apis": 2,
  "test": [
    {
      "description": "shouldNotCallUpstreamReporterIfBugSuppressed",
      "expected-problems": null,
      "expected-linenumbers": [
        27,
        36
      ],
      "code": "@Test\n    void shouldNotCallUpstreamReporterIfBugSuppressed() {\n        // given\n        when(matcher.match(bugInstance)).thenReturn(true);\n        // when\n        reporter.reportBug(bugInstance);\n        // then\n        verify(matcher).match(bugInstance);\n        verifyNoInteractions(upstreamReporter);\n    }"
    },
    {
      "description": "shouldCallUpstreamReporterIfBugNotSuppressed",
      "expected-problems": null,
      "expected-linenumbers": [
        38,
        47
      ],
      "code": "@Test\n    void shouldCallUpstreamReporterIfBugNotSuppressed() {\n        // given\n        when(matcher.match(bugInstance)).thenReturn(false);\n        // when\n        reporter.reportBug(bugInstance);\n        // then\n        verify(matcher).match(bugInstance);\n        verify(upstreamReporter).reportBug(bugInstance);\n    }"
    },
    {
      "description": "shouldCallMatcherAndUpstreamReporterOnFinish",
      "expected-problems": null,
      "expected-linenumbers": [
        49,
        56
      ],
      "code": "@Test\n    void shouldCallMatcherAndUpstreamReporterOnFinish() {\n        // when\n        reporter.finish();\n        // then\n        verify(matcher).validateSuppressionUsage(eq(reporter), any());\n        verify(upstreamReporter).finish();\n    }"
    }
  ]
}