{
  "name": "UnnecessarilyUsedValue",
  "language": "java",
  "description": "The result of this API is ignorable, so it does not need to be captured / assigned into an `unused` variable.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 87,
  "branches": 5,
  "apis": 2,
  "test": [
    {
      "description": "methods",
      "expected-problems": null,
      "expected-linenumbers": [
        30
      ],
      "code": "package com.google.frobber;\n\n            public final class Client {\n              public void varNotUnused() {\n                var notUnused = ignorable();\n              }\n\n              public void varUnused() {\n                var unused = ignorable();\n              }\n\n              public void varUnusedFoo() {\n                var unusedFoo = ignorable();\n              }\n\n              public void varUnused0() {\n                var unused0 = ignorable();\n              }\n\n              public void varUnused1() {\n                var unused1 = ignorable();\n              }\n\n              public void varUnused10() {\n                var unused10 = ignorable();\n              }\n\n              public void objectUnused() {\n                Object unused = ignorable();\n              }\n\n              public void objectUnusedFoo() {\n                Object unusedFoo = ignorable();\n              }\n\n              public void reuseOfUnusedVariable(String unused) {\n                unused = ignorable();\n              }\n\n              @com.google.errorprone.annotations.CanIgnoreReturnValue\n              public String ignorable() {\n                return \"hi\";\n              }\n            }\n            \n\n            package com.google.frobber;\n\n            public final class Client {\n              public void varNotUnused() {\n                var notUnused = ignorable();\n              }\n\n              public void varUnused() {\n                ignorable();\n              }\n\n              public void varUnusedFoo() {\n                var unusedFoo = ignorable();\n              }\n\n              public void varUnused0() {\n                ignorable();\n              }\n\n              public void varUnused1() {\n                ignorable();\n              }\n\n              public void varUnused10() {\n                ignorable();\n              }\n\n              public void objectUnused() {\n                ignorable();\n              }\n\n              public void objectUnusedFoo() {\n                Object unusedFoo = ignorable();\n              }\n\n              public void reuseOfUnusedVariable(String unused) {\n                ignorable();\n              }\n\n              @com.google.errorprone.annotations.CanIgnoreReturnValue\n              public String ignorable() {\n                return \"hi\";\n              }\n            }"
    },
    {
      "description": "constructors",
      "expected-problems": null,
      "expected-linenumbers": [
        132
      ],
      "code": "package com.google.frobber;\n\n            public final class Client {\n              public void varNotUnused() {\n                var notUnused = new Client();\n              }\n\n              public void varUnused() {\n                var unused = new Client();\n              }\n\n              public void varUnusedFoo() {\n                var unusedFoo = new Client();\n              }\n\n              public void objectUnused() {\n                Object unused = new Client();\n              }\n\n              public void objectUnusedFoo() {\n                Object unusedFoo = new Client();\n              }\n\n              public void reuseOfUnusedVariable(Client unused) {\n                unused = new Client();\n              }\n\n              @com.google.errorprone.annotations.CanIgnoreReturnValue\n              public Client() {}\n            }\n            \n\n            package com.google.frobber;\n\n            public final class Client {\n              public void varNotUnused() {\n                var notUnused = new Client();\n              }\n\n              public void varUnused() {\n                new Client();\n              }\n\n              public void varUnusedFoo() {\n                var unusedFoo = new Client();\n              }\n\n              public void objectUnused() {\n                new Client();\n              }\n\n              public void objectUnusedFoo() {\n                Object unusedFoo = new Client();\n              }\n\n              public void reuseOfUnusedVariable(Client unused) {\n                new Client();\n              }\n\n              @com.google.errorprone.annotations.CanIgnoreReturnValue\n              public Client() {}\n            }"
    },
    {
      "description": "tryWithResources",
      "expected-problems": null,
      "expected-linenumbers": [
        206
      ],
      "code": "package com.google.frobber;\n\n            public final class Client {\n              public void varNotUnused() throws Exception {\n                try (java.io.Closeable unused = getCloseable()) {}\n              }\n\n              @com.google.errorprone.annotations.CanIgnoreReturnValue\n              private java.io.Closeable getCloseable() {\n                return null;\n              }\n            }"
    }
  ]
}