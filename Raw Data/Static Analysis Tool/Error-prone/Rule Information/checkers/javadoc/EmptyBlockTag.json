{
  "name": "EmptyBlockTag",
  "language": "java",
  "description": "A block tag (@param, @return, @throws, @deprecated) has an empty description. Block tags without descriptions don't add much value for future readers of the code; consider removing the tag entirely or adding a description.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 115,
  "branches": 6,
  "apis": 3,
  "test": [
    {
      "description": "removes_emptyParam",
      "expected-problems": null,
      "expected-linenumbers": [
        34
      ],
      "code": "interface Test {\n              /**\n               * @param p\n               */\n              void foo(int p);\n            }\n            \n\n            interface Test {\n              /** */\n              void foo(int p);\n            }"
    },
    {
      "description": "removes_emptyThrows",
      "expected-problems": null,
      "expected-linenumbers": [
        58
      ],
      "code": "interface Test {\n              /**\n               * @throws Exception\n               */\n              void foo() throws Exception;\n            }\n            \n\n            interface Test {\n              /** */\n              void foo() throws Exception;\n            }"
    },
    {
      "description": "removes_emptyReturn",
      "expected-problems": null,
      "expected-linenumbers": [
        82
      ],
      "code": "interface Test {\n              /**\n               * @return\n               */\n              int foo();\n            }\n            \n\n            interface Test {\n              /** */\n              int foo();\n            }"
    },
    {
      "description": "removes_emptyDeprecated",
      "expected-problems": null,
      "expected-linenumbers": [
        106
      ],
      "code": "interface Test {\n              /**\n               * @deprecated\n               */\n              int foo();\n            }"
    },
    {
      "description": "removes_emptyParamOnClass",
      "expected-problems": null,
      "expected-linenumbers": [
        142
      ],
      "code": "/**\n             * @param <T>\n             */\n            interface Test<T> {\n              T foo();\n            }\n            \n\n            /** */\n            interface Test<T> {\n              T foo();\n            }"
    },
    {
      "description": "removes_emptyParamOnClass",
      "expected-problems": null,
      "expected-linenumbers": [
        142
      ],
      "code": "/**\n             * @param <T>\n             */\n            interface Test<T> {\n              T foo();\n            }\n            \n\n            /** */\n            interface Test<T> {\n              T foo();\n            }"
    },
    {
      "description": "removes_emptyAllTheThings",
      "expected-problems": null,
      "expected-linenumbers": [
        166
      ],
      "code": "interface Test {\n              /**\n               * @param p\n               * @return\n               * @throws Exception\n               */\n              @Deprecated\n              int foo(int p) throws Exception;\n            }\n            \n\n            interface Test {\n              /** */\n              @Deprecated\n              int foo(int p) throws Exception;\n            }"
    },
    {
      "description": "keeps_paramWithDescription",
      "expected-problems": null,
      "expected-linenumbers": [
        194
      ],
      "code": "interface Test {\n              /**\n               * @param p is important\n               */\n              void foo(int p);\n            }"
    },
    {
      "description": "keeps_throwsWithDescription",
      "expected-problems": null,
      "expected-linenumbers": [
        210
      ],
      "code": "interface Test {\n              /**\n               * @throws Exception because blah\n               */\n              void foo() throws Exception;\n            }"
    },
    {
      "description": "keeps_returnWithDescription",
      "expected-problems": null,
      "expected-linenumbers": [
        226
      ],
      "code": "interface Test {\n              /**\n               * @return A value\n               */\n              int foo();\n            }"
    },
    {
      "description": "keeps_deprecatedWithDescription",
      "expected-problems": null,
      "expected-linenumbers": [
        242
      ],
      "code": "interface Test {\n              /**\n               * @deprecated Very old\n               */\n              @Deprecated\n              void foo();\n            }"
    },
    {
      "description": "keeps_allTheThingsWithDescriptions",
      "expected-problems": null,
      "expected-linenumbers": [
        259
      ],
      "code": "interface Test {\n              /**\n               * @param p is important\n               * @return a value\n               * @throws Exception because\n               * @deprecated Very old\n               */\n              @Deprecated\n              int foo(int p) throws Exception;\n            }"
    },
    {
      "description": "keeps_deprecatedOnClass",
      "expected-problems": null,
      "expected-linenumbers": [
        279
      ],
      "code": "/**\n             * @deprecated Use other Test2 instead\n             */\n            @Deprecated\n            interface Test {\n              void foo();\n            }"
    },
    {
      "description": "keeps_paramOnClass",
      "expected-problems": null,
      "expected-linenumbers": [
        296
      ],
      "code": "/**\n             * @param <T> the input type param\n             */\n            interface Test<T> {\n              T foo();\n            }"
    },
    {
      "description": "keeps_whenSuppressed",
      "expected-problems": null,
      "expected-linenumbers": [
        312
      ],
      "code": "interface Test {\n              /**\n               * @param p\n               */\n              @SuppressWarnings(\"EmptyBlockTag\")\n              void foo(int p);\n            }"
    }
  ]
}