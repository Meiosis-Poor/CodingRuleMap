{
  "name": "MissingSummary",
  "language": "java",
  "description": "A summary line is required on public/protected Javadocs.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 185,
  "branches": 17,
  "apis": 1,
  "test": [
    {
      "description": "replaceReturn",
      "expected-problems": null,
      "expected-linenumbers": [
        36
      ],
      "code": "interface Test {\n              /**\n               * @param n foo\n               * @return n\n               */\n              int test(int n);\n            }\n            \n\n            interface Test {\n              /**\n               * Returns n.\n               *\n               * @param n foo\n               */\n              int test(int n);\n            }"
    },
    {
      "description": "replaceSee",
      "expected-problems": null,
      "expected-linenumbers": [
        65
      ],
      "code": "interface Test {\n              /**\n               * @param n foo\n               * @see List other impl\n               */\n              void test(int n);\n\n              /**\n               * @param n foo\n               * @see List\n               */\n              void test2(int n);\n            }\n            \n\n            interface Test {\n              /**\n               * See {@link List other impl}.\n               *\n               * @param n foo\n               */\n              void test(int n);\n\n              /**\n               * See {@link List}.\n               *\n               * @param n foo\n               */\n              void test2(int n);\n            }"
    },
    {
      "description": "privateCase",
      "expected-problems": null,
      "expected-linenumbers": [
        125
      ],
      "code": "class Test {\n              /**\n               * @throws IllegalStateException\n               */\n              private void test() {}\n            }"
    },
    {
      "description": "privateCase",
      "expected-problems": null,
      "expected-linenumbers": [
        125
      ],
      "code": "class Test {\n              /**\n               * @throws IllegalStateException\n               */\n              private void test() {}\n            }"
    },
    {
      "description": "effectivelyPrivateCase",
      "expected-problems": null,
      "expected-linenumbers": [
        141
      ],
      "code": "class Test {\n              private class Inner {\n                /**\n                 * @throws IllegalStateException\n                 */\n                public void test() {}\n              }\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        159
      ],
      "code": "interface Test {\n              /**\n               * Summary line!\n               *\n               * @return n\n               */\n              int test();\n            }"
    },
    {
      "description": "negativeAnnotations",
      "expected-problems": null,
      "expected-linenumbers": [
        177
      ],
      "code": "class Test {\n              /**\n               * @param o thing to compare\n               */\n              @Override\n              public boolean equals(Object o) {\n                return true;\n              }\n\n              /**\n               * @deprecated use something else\n               */\n              @Deprecated\n              public void frobnicate() {}\n            }"
    },
    {
      "description": "negativeConstructor",
      "expected-problems": null,
      "expected-linenumbers": [
        202
      ],
      "code": "class Test {\n              /**\n               * @param o thing to compare\n               */\n              public Test(Object o) {}\n            }"
    },
    {
      "description": "negativePrivate",
      "expected-problems": null,
      "expected-linenumbers": [
        218
      ],
      "code": "class Test {\n              /**\n               * @param o thing to compare\n               */\n              private Test(Object o) {}\n            }"
    },
    {
      "description": "negativeOverride",
      "expected-problems": null,
      "expected-linenumbers": [
        234
      ],
      "code": "class Test implements java.util.function.Predicate<Object> {\n              /**\n               * @param o thing to compare\n               */\n              public boolean test(Object o) {\n                return false;\n              }\n            }"
    },
    {
      "description": "emptyComment",
      "expected-problems": null,
      "expected-linenumbers": [
        282
      ],
      "code": "package test;\n\n            /** */\n            // BUG: Diagnostic contains: summary line is required\n            public class Test {}"
    },
    {
      "description": "emptyComment",
      "expected-problems": null,
      "expected-linenumbers": [
        282
      ],
      "code": "package test;\n\n            /** */\n            // BUG: Diagnostic contains: summary line is required\n            public class Test {}"
    },
    {
      "description": "emptyComment",
      "expected-problems": null,
      "expected-linenumbers": [
        282
      ],
      "code": "package test;\n\n            /** */\n            // BUG: Diagnostic contains: summary line is required\n            public class Test {}"
    }
  ]
}