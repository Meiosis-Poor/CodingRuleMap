{
  "name": "InvalidParam",
  "language": "java",
  "description": "This @param tag doesn't refer to a parameter of the method.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 220,
  "branches": 17,
  "apis": 5,
  "test": [
    {
      "description": "badParameterName_positioning",
      "expected-problems": null,
      "expected-linenumbers": [
        36
      ],
      "code": "interface Test {\n              /**\n               * @param <T> baz // BUG: Diagnostic contains: Parameter name `c` is unknown\n               * @param c foo\n               * @param b bar\n               */\n              <T> void foo(int a, int b);\n            }"
    },
    {
      "description": "badColon",
      "expected-problems": null,
      "expected-linenumbers": [
        54
      ],
      "code": "interface Test {\n              /**\n               * @param c: foo\n               */\n              <T> void foo(int c);\n            }\n            \n\n            interface Test {\n              /**\n               * @param c foo\n               */\n              <T> void foo(int c);\n            }"
    },
    {
      "description": "badParameterName",
      "expected-problems": null,
      "expected-linenumbers": [
        80
      ],
      "code": "interface Test {\n              /**\n               * @param <T> baz\n               * @param c foo\n               * @param b bar\n               */\n              <T> void foo(int a, int b);\n            }\n            \n\n            interface Test {\n              /**\n               * @param <T> baz\n               * @param a foo\n               * @param b bar\n               */\n              <T> void foo(int a, int b);\n            }"
    },
    {
      "description": "badTypeParameterName",
      "expected-problems": null,
      "expected-linenumbers": [
        110
      ],
      "code": "interface Test {\n              /**\n               * @param <S> baz\n               * @param a bar\n               */\n              <T> void foo(int a);\n            }\n            \n\n            interface Test {\n              /**\n               * @param <T> baz\n               * @param a bar\n               */\n              <T> void foo(int a);\n            }"
    },
    {
      "description": "verySimilarCodeParam",
      "expected-problems": null,
      "expected-linenumbers": [
        138
      ],
      "code": "interface Test {\n              /** {@code foabar}, {@code barfoo} */\n              void foo(int foobar);\n            }\n            \n\n            interface Test {\n              /** {@code foobar}, {@code barfoo} */\n              void foo(int foobar);\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        179
      ],
      "code": "interface Test {\n              /**\n               * Frobnicates a {@code foobarbaz}.\n               *\n               * @param <T> baz\n               * @param a bar\n               * @param b quux\n               */\n              <T> void foo(int a, int b, int foobarbaz);\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        179
      ],
      "code": "interface Test {\n              /**\n               * Frobnicates a {@code foobarbaz}.\n               *\n               * @param <T> baz\n               * @param a bar\n               * @param b quux\n               */\n              <T> void foo(int a, int b, int foobarbaz);\n            }"
    },
    {
      "description": "excludedName_noMatchDespiteSimilarParam",
      "expected-problems": null,
      "expected-linenumbers": [
        199
      ],
      "code": "interface Test {\n              /** Returns {@code true}. */\n              boolean foo(int tree);\n            }"
    },
    {
      "description": "negative_record",
      "expected-problems": null,
      "expected-linenumbers": [
        213
      ],
      "code": "/**\n             * @param name Name.\n             */\n            public record Test(String name) {}"
    },
    {
      "description": "compactConstructor_record",
      "expected-problems": null,
      "expected-linenumbers": [
        299
      ],
      "code": "/**\n             * @param name Name.\n             */\n            public record Test(String name) {\n              public Test {}\n            }"
    },
    {
      "description": "compactConstructor_record",
      "expected-problems": null,
      "expected-linenumbers": [
        299
      ],
      "code": "/**\n             * @param name Name.\n             */\n            public record Test(String name) {\n              public Test {}\n            }"
    },
    {
      "description": "compactConstructor_record",
      "expected-problems": null,
      "expected-linenumbers": [
        299
      ],
      "code": "/**\n             * @param name Name.\n             */\n            public record Test(String name) {\n              public Test {}\n            }"
    },
    {
      "description": "compactConstructor_record",
      "expected-problems": null,
      "expected-linenumbers": [
        299
      ],
      "code": "/**\n             * @param name Name.\n             */\n            public record Test(String name) {\n              public Test {}\n            }"
    }
  ]
}