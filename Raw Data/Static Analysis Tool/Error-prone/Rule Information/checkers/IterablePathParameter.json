{
  "name": "IterablePathParameter",
  "language": "java",
  "description": "Path implements Iterable<Path>; prefer Collection<Path> for clarity",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 81,
  "branches": 9,
  "apis": 1,
  "test": [
    {
      "description": "positive",
      "expected-problems": null,
      "expected-linenumbers": [
        30
      ],
      "code": "import java.nio.file.Path;\n\n            class Test {\n              // BUG: Diagnostic contains: f(Collection<? extends Path> xs)\n              void f(Iterable<? extends Path> xs) {}\n\n              // BUG: Diagnostic contains: g(Collection<? super Path> xs)\n              void g(Iterable<? super Path> xs) {}\n\n              // BUG: Diagnostic contains: h(Collection<Path> xs)\n              void h(Iterable<Path> xs) {}\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        52
      ],
      "code": "import java.nio.file.Path;\n            import java.util.Collection;\n\n            class Test {\n              void f(Collection<Path> xs) {}\n            }"
    },
    {
      "description": "raw",
      "expected-problems": null,
      "expected-linenumbers": [
        68
      ],
      "code": "class Test {\n              void f(Iterable xs) {}\n            }"
    },
    {
      "description": "implicitLambda",
      "expected-problems": null,
      "expected-linenumbers": [
        81
      ],
      "code": "import java.nio.file.Path;\n            import java.util.function.Consumer;\n\n            class Test {\n              // BUG: Diagnostic contains:\n              Consumer<Iterable<Path>> c = (paths) -> {};\n            }"
    }
  ]
}