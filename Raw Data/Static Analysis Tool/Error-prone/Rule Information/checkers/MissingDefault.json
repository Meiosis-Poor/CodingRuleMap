{
  "name": "MissingDefault",
  "language": "java",
  "description": "The Google Java Style Guide requires that each switch statement includes a default statement group, even if it contains no code. (This requirement is lifted for any switch statement that covers all values of an enum.)",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 108,
  "branches": 24,
  "apis": 3,
  "test": [
    {
      "description": "positive",
      "expected-problems": null,
      "expected-linenumbers": [
        35
      ],
      "code": "class Test {\n              boolean f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    return true;\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              boolean f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    return true;\n                  default: // fall out\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "positiveBreak",
      "expected-problems": null,
      "expected-linenumbers": [
        70
      ],
      "code": "class Test {\n              void f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    System.err.println(42);\n                }\n              }\n            }\n            \n\n            class Test {\n              void f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    System.err.println(42);\n                    break;\n                  default: // fall out\n                }\n              }\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        104
      ],
      "code": "class Test {\n              boolean f(int i) {\n                switch (i) {\n                  case 42:\n                    return true;\n                  default:\n                    return false;\n                }\n              }\n            }"
    },
    {
      "description": "enumSwitch",
      "expected-problems": null,
      "expected-linenumbers": [
        124
      ],
      "code": "class Test {\n              enum E {\n                ONE,\n                TWO\n              }\n\n              boolean f(E e) {\n                switch (e) {\n                  case ONE:\n                    return true;\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "empty",
      "expected-problems": null,
      "expected-linenumbers": [
        148
      ],
      "code": "class Test {\n              boolean f(int i) {\n                switch (i) {\n                  case 42:\n                    return true;\n                  default: // fall out\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "emptyNoComment",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "class Test {\n              boolean f(int i) {\n                switch (i) {\n                  case 42:\n                    return true;\n                  default:\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              boolean f(int i) {\n                switch (i) {\n                  case 42:\n                    return true;\n                  default: // fall out\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "interiorEmptyNoComment",
      "expected-problems": null,
      "expected-linenumbers": [
        202
      ],
      "code": "class Test {\n              boolean f(int i) {\n                switch (i) {\n                  default:\n                  case 42:\n                    return true;\n                }\n              }\n            }"
    },
    {
      "description": "multipleStatementsInGroup",
      "expected-problems": null,
      "expected-linenumbers": [
        221
      ],
      "code": "class Test {\n              boolean f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    System.err.println();\n                    return true;\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              boolean f(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 42:\n                    System.err.println();\n                    return true;\n                  default: // fall out\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "arrowSwitch",
      "expected-problems": null,
      "expected-linenumbers": [
        258
      ],
      "code": "class Test {\n              void m(int i) {\n                // BUG: Diagnostic contains:\n                switch (i) {\n                  case 1 -> {}\n                  case 2 -> {}\n                }\n              }\n            }"
    },
    {
      "description": "arrowSwitchNegative",
      "expected-problems": null,
      "expected-linenumbers": [
        277
      ],
      "code": "class Test {\n              void m(int i) {\n                switch (i) {\n                  case 1 -> {}\n                  case 2 -> {}\n                  default -> {} // fall out\n                }\n              }\n            }"
    },
    {
      "description": "arrowComment",
      "expected-problems": null,
      "expected-linenumbers": [
        296
      ],
      "code": "class Test {\n              void f() {}\n\n              void m(int i) {\n                switch (i) {\n                  case 0 -> f();\n                  case 1 -> f();\n                  default -> f();\n                }\n              }\n            }"
    },
    {
      "description": "exhaustiveExpressionSwitch",
      "expected-problems": null,
      "expected-linenumbers": [
        317
      ],
      "code": "class Test {\n              sealed interface I permits A, B {}\n\n              abstract static class S {}\n\n              static final class A extends S implements I {}\n\n              static final class B extends S implements I {}\n\n              void f(I i) {\n                switch (i) {\n                  case A a -> System.err.println(a);\n                  case B b -> System.err.println(b);\n                }\n                ;\n              }\n            }"
    }
  ]
}