{
  "name": "OverridingMethodInconsistentArgumentNamesChecker",
  "language": "java",
  "description": "Arguments of overriding method are inconsistent with overridden method.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 82,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "positiveSwap",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "class A {\n              void m(int p1, int p2) {}\n            }\n            \n\n            class B extends A {\n              @Override\n              // BUG: Diagnostic contains: A consistent order would be: m(p1, p2)\n              void m(int p2, int p1) {}\n            }"
    },
    {
      "description": "positivePermutation",
      "expected-problems": null,
      "expected-linenumbers": [
        53
      ],
      "code": "class A {\n              void m(int p1, int p2, int p3) {}\n            }\n            \n\n            class B extends A {\n              @Override\n              // BUG: Diagnostic contains: A consistent order would be: m(p1, p2, p3)\n              void m(int p3, int p1, int p2) {}\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        75
      ],
      "code": "class A {\n              void m(int p1, int p2) {}\n            }\n            \n\n            class B extends A {\n              @Override\n              void m(int p1, int p2) {}\n            }"
    },
    {
      "description": "negative2",
      "expected-problems": null,
      "expected-linenumbers": [
        96
      ],
      "code": "class A {\n              void m(int p1, int p2) {}\n            }\n            \n\n            class B extends A {\n              @Override\n              void m(int p1, int p3) {}\n            }"
    }
  ]
}