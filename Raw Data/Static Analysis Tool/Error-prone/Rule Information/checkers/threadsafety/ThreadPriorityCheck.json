{
  "name": "ThreadPriorityCheck",
  "language": "java",
  "description": "Relying on the thread scheduler is discouraged.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 48,
  "branches": 1,
  "apis": 1,
  "test": [
    {
      "description": "yieldThread",
      "expected-problems": null,
      "expected-linenumbers": [
        36
      ],
      "code": "class Test {\n              public void foo() {\n                Thread myThread =\n                    new Thread(\n                        new Runnable() {\n                          @Override\n                          public void run() {\n                            System.out.println(\"Run, thread, run!\");\n                          }\n                        });\n                myThread.start();\n                // BUG: Diagnostic contains: ThreadPriorityCheck\n                Thread.yield();\n              }\n            }"
    },
    {
      "description": "setPriority",
      "expected-problems": null,
      "expected-linenumbers": [
        61
      ],
      "code": "class Test {\n              public void foo() {\n                Thread thread =\n                    new Thread(\n                        new Runnable() {\n                          @Override\n                          public void run() {\n                            System.out.println(\"Run, thread, run!\");\n                          }\n                        });\n                thread.start();\n                // BUG: Diagnostic contains: ThreadPriorityCheck\n                thread.setPriority(Thread.MAX_PRIORITY);\n              }\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        86
      ],
      "code": "class Test {\n              public void foo() {\n                Thread thread =\n                    new Thread(\n                        new Runnable() {\n                          @Override\n                          public void run() {\n                            System.out.println(\"Run, thread, run!\");\n                          }\n                        });\n                thread.start();\n              }\n            }"
    }
  ]
}