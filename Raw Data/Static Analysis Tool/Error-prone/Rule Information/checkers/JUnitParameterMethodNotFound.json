{
  "name": "JUnitParameterMethodNotFound",
  "language": "java",
  "description": "The method for providing parameters was not found.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 149,
  "branches": 14,
  "apis": 1,
  "test": [
    {
      "description": "negativeCase_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        30
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport junitparams.JUnitParamsRunner;\nimport junitparams.Parameters;\nimport junitparams.naming.TestCaseName;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\n/** Negative cases for {@link com.google.errorprone.bugpatterns.JUnitParameterMethodNotFound} */\n@RunWith(JUnitParamsRunner.class)\npublic class JUnitParameterMethodNotFoundNegativeCase {\n\n  private static final String METHOD = \"named1\";\n\n  private static Object[] dataProvider() {\n    return new Object[] {1};\n  }\n\n  private static Object[] dataProvider1() {\n    return new Object[] {2};\n  }\n\n  @Test\n  @Parameters(method = \"dataProvider, dataProvider1\")\n  public void paramStaticProvider(int a) {}\n\n  @Test\n  @Parameters(source = Inner.class, method = \"dataProviderInner\")\n  public void testSource(int a) {}\n\n  @Test\n  @Parameters({\"AAA,1\", \"BBB,2\"})\n  public void paramsInAnnotation(String p1, Integer p2) {}\n\n  @Test\n  @Parameters({\"AAA|1\", \"BBB|2\"})\n  public void paramsInAnnotationPipeSeparated(String p1, Integer p2) {}\n\n  @Test\n  @Parameters\n  public void paramsInDefaultMethod(String p1, Integer p2) {}\n\n  private Object parametersForParamsInDefaultMethod() {\n    return new Object[] {new Object[] {\"AAA\", 1}, new Object[] {\"BBB\", 2}};\n  }\n\n  @Test\n  @Parameters(method = METHOD)\n  public void paramsInNamedMethod(String p1, Integer p2) {}\n\n  private Object named1() {\n    return new Object[] {\"AAA\", 1};\n  }\n\n  @Test\n  @Parameters(method = \"named2,named3\")\n  public void paramsInMultipleMethods(String p1, Integer p2) {}\n\n  private Object named2() {\n    return new Object[] {\"AAA\", 1};\n  }\n\n  private Object named3() {\n    return new Object[] {\"BBB\", 2};\n  }\n\n  @Test\n  @Parameters\n  public void paramsInCollection(String p1) {}\n\n  private List<String> parametersForParamsInCollection() {\n    return Arrays.asList(\"a\");\n  }\n\n  @Test\n  @Parameters\n  public void paramsInIterator(String p1) {}\n\n  private Iterator<String> parametersForParamsInIterator() {\n    return Arrays.asList(\"a\").iterator();\n  }\n\n  @Test\n  @Parameters\n  public void paramsInIterableOfIterables(String p1, String p2) {}\n\n  private List<List<String>> parametersForParamsInIterableOfIterables() {\n    return Arrays.asList(Arrays.asList(\"s01e01\", \"s01e02\"), Arrays.asList(\"s02e01\", \"s02e02\"));\n  }\n\n  @Test\n  @Parameters(\n      \"please\\\\\\\\, escape commas if you use it here and don't want your parameters to be split\")\n  public void commasInParametersUsage(String phrase) {}\n\n  @Test\n  @Parameters({\"1,1\", \"2,2\", \"3,6\"})\n  @TestCaseName(\"factorial({0}) = {1}\")\n  public void customNamesForTestCase(int argument, int result) {}\n\n  @Test\n  @Parameters({\"value1, value2\", \"value3, value4\"})\n  @TestCaseName(\"[{index}] {method}: {params}\")\n  public void predefinedMacroForTestCaseNames(String param1, String param2) {}\n\n  public Object mixedParameters() {\n    boolean booleanValue = true;\n    int[] primitiveArray = {1, 2, 3};\n    String stringValue = \"Test\";\n    String[] stringArray = {\"one\", \"two\", null};\n    return new Object[] {new Object[] {booleanValue, primitiveArray, stringValue, stringArray}};\n  }\n\n  @Test\n  @Parameters(method = \"mixedParameters\")\n  @TestCaseName(\"{0}, {1}, {2}, {3}\")\n  public void usageOfMultipleTypesOfParameters(\n      boolean booleanValue, int[] primitiveArray, String stringValue, String[] stringArray) {}\n\n  static class Inner {\n    public Object dataProviderInner() {\n      return new Object[] {1};\n    }\n  }\n}\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_nonJUnitParamsRunner_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n\n            @RunWith(JUnit4.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseNonJUnitParamsRunner {\n              @Test\n              @Parameters(method = \"named1\")\n              public void paramStaticProvider() {}\n            }\\"
    },
    {
      "description": "negativeCase_inheritedMethods_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        191
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.JUnitParamsRunner;\n            import org.junit.runner.RunWith;\n\n            @RunWith(JUnitParamsRunner.class)\n            public abstract class JUnitParameterMethodNotFoundNegativeCaseBaseClass {\n              public Object named1() {\n                return new Object[] {1};\n              }\n            }\\\n            \n\n            package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.JUnitParamsRunner;\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n\n            @RunWith(JUnitParamsRunner.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseSuperClass\n                extends JUnitParameterMethodNotFoundNegativeCaseBaseClass {\n              @Test\n              @Parameters(method = \"named1\")\n              public void testNamed(int a) {}\n            }\\"
    },
    {
      "description": "negativeCase_inheritedMethods_noErrorsFound",
      "expected-problems": null,
      "expected-linenumbers": [
        191
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.JUnitParamsRunner;\n            import org.junit.runner.RunWith;\n\n            @RunWith(JUnitParamsRunner.class)\n            public abstract class JUnitParameterMethodNotFoundNegativeCaseBaseClass {\n              public Object named1() {\n                return new Object[] {1};\n              }\n            }\\\n            \n\n            package com.google.errorprone.bugpatterns.testdata;\n\n            import junitparams.JUnitParamsRunner;\n            import junitparams.Parameters;\n            import org.junit.Test;\n            import org.junit.runner.RunWith;\n\n            @RunWith(JUnitParamsRunner.class)\n            public class JUnitParameterMethodNotFoundNegativeCaseSuperClass\n                extends JUnitParameterMethodNotFoundNegativeCaseBaseClass {\n              @Test\n              @Parameters(method = \"named1\")\n              public void testNamed(int a) {}\n            }\\"
    },
    {
      "description": "positiveCase_errorReported",
      "expected-problems": null,
      "expected-linenumbers": [
        230
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\nimport junitparams.JUnitParamsRunner;\nimport junitparams.Parameters;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\n@RunWith(JUnitParamsRunner.class)\npublic class JUnitParameterMethodNotFoundPositiveCase {\n\n  @Test\n  @Parameters\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void paramsInDefaultMethod(String p1, Integer p2) {}\n\n  @Test\n  @Parameters(method = \"named2,named3\")\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void paramsInMultipleMethods(String p1, Integer p2) {}\n\n  @Test\n  @Parameters(source = JUnitParameterMethodNotFoundPositiveCase.class, method = \"dataProvider\")\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void testSource(int a) {}\n\n  static class Inner {\n    public Object dataProvider() {\n      return new Object[] {1};\n    }\n  }\n}\\"
    },
    {
      "description": "positiveCase_errorReported",
      "expected-problems": null,
      "expected-linenumbers": [
        230
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\nimport junitparams.JUnitParamsRunner;\nimport junitparams.Parameters;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\n@RunWith(JUnitParamsRunner.class)\npublic class JUnitParameterMethodNotFoundPositiveCase {\n\n  @Test\n  @Parameters\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void paramsInDefaultMethod(String p1, Integer p2) {}\n\n  @Test\n  @Parameters(method = \"named2,named3\")\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void paramsInMultipleMethods(String p1, Integer p2) {}\n\n  @Test\n  @Parameters(source = JUnitParameterMethodNotFoundPositiveCase.class, method = \"dataProvider\")\n  // BUG: Diagnostic contains: [JUnitParameterMethodNotFound]\n  public void testSource(int a) {}\n\n  static class Inner {\n    public Object dataProvider() {\n      return new Object[] {1};\n    }\n  }\n}\\"
    }
  ]
}