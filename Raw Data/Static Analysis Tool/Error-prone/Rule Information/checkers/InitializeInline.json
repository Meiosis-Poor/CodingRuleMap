{
  "name": "InitializeInline",
  "language": "java",
  "description": "Initializing variables in their declaring statement is clearer, where possible.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 90,
  "branches": 7,
  "apis": 1,
  "test": [
    {
      "description": "simple",
      "expected-problems": null,
      "expected-linenumbers": [
        30
      ],
      "code": "class Test {\n              void test() {\n                int a;\n                a = 1;\n                final int b;\n                b = 1;\n              }\n            }\n            \n\n            class Test {\n              void test() {\n                int a = 1;\n                final int b = 1;\n              }\n            }"
    },
    {
      "description": "multipleAssignment_noMatch",
      "expected-problems": null,
      "expected-linenumbers": [
        58
      ],
      "code": "class Test {\n              void test() {\n                int a;\n                a = 1;\n                a = 2;\n              }\n            }"
    },
    {
      "description": "multipleAssignment_withinBlock",
      "expected-problems": null,
      "expected-linenumbers": [
        76
      ],
      "code": "class Test {\n              int test() {\n                int a;\n                if (true) {\n                  a = 1;\n                  return a;\n                }\n                a = 2;\n                return a;\n              }\n            }"
    },
    {
      "description": "assignedWithinTry_noMatch",
      "expected-problems": null,
      "expected-linenumbers": [
        98
      ],
      "code": "class Test {\n              int test() {\n                int c;\n                try {\n                  c = 1;\n                } catch (Exception e) {\n                  throw e;\n                }\n                return c;\n              }\n            }"
    },
    {
      "description": "unstylishBlocks",
      "expected-problems": null,
      "expected-linenumbers": [
        120
      ],
      "code": "class Test {\n              int test() {\n                int c;\n                if (hashCode() == 0) c = 1;\n                else c = 2;\n                return c;\n              }\n            }"
    }
  ]
}