{
  "name": "MisformattedTestData",
  "language": "java",
  "description": "This test data will be more readable if correctly formatted.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 120,
  "branches": 10,
  "apis": 3,
  "test": [
    {
      "description": "alreadyFormatted_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        34
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\",\n                    \\\n);\n              }\n            }"
    },
    {
      "description": "onlyDiffersByFinalNewline_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        61
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\",\n                    \\\n);\n              }\n            }"
    },
    {
      "description": "misformatted_suggestsFix",
      "expected-problems": null,
      "expected-linenumbers": [
        87
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                        \"Test.java\",\n                        \\\n)\n                    .addOutputLines(\n                        \"Test.java\",\n                        \\\n);\n              }\n            }\n            \n\n            import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                        \"Test.java\",\n                        \\\n)\n                  .addOutputLines(\n                        \"Test.java\",\n                        \\\n);\n               }\n            }"
    },
    {
      "description": "trailingComments_notIncludedInPrefix",
      "expected-problems": null,
      "expected-linenumbers": [
        157
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\", //\n                    \"package foo; class Test {}\");\n              }\n            }\n            \n\n            import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\", //\n                    \\\n);\n               }\n            }"
    },
    {
      "description": "onlyDiffersByIndentation_notReindented",
      "expected-problems": null,
      "expected-linenumbers": [
        193
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\",\n                    \\\n);\n              }\n            }"
    },
    {
      "description": "escapesSpecialCharacters",
      "expected-problems": null,
      "expected-linenumbers": [
        221
      ],
      "code": "import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\",\n                    \\\n);\n              }\n            }\n            \n\n            import com.google.errorprone.BugCheckerRefactoringTestHelper;\n\n            class Test {\n              void method(BugCheckerRefactoringTestHelper h) {\n                h.addInputLines(\n                    \"Test.java\",\n                    \\\n);\n               }\n            }"
    }
  ]
}