{
  "name": "NegativeCharLiteral",
  "language": "java",
  "description": "Casting a negative signed literal to an (unsigned) char might be misleading.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 58,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "positive_literalNegativeOne",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: 'char x = Character.MAX_VALUE;'\n              char x = (char) -1;\n            }"
    },
    {
      "description": "positive_literalNegativeTwo",
      "expected-problems": null,
      "expected-linenumbers": [
        45
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: 'char x = Character.MAX_VALUE - 1;'\n              char x = (char) -2;\n            }"
    },
    {
      "description": "positive_literalOneLessThanMultipleOf65536",
      "expected-problems": null,
      "expected-linenumbers": [
        59
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: 'char x = Character.MAX_VALUE;'\n              char x = (char) -65537;\n            }"
    },
    {
      "description": "positive_longLiteral",
      "expected-problems": null,
      "expected-linenumbers": [
        73
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: 'char x = Character.MAX_VALUE;'\n              char x = (char) -1L;\n            }"
    },
    {
      "description": "positive_multipleOverflow",
      "expected-problems": null,
      "expected-linenumbers": [
        87
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: 'char x = Character.MAX_VALUE - 38527;'\n              char x = (char) -10000000;\n            }"
    },
    {
      "description": "negative_zeroLiteral",
      "expected-problems": null,
      "expected-linenumbers": [
        101
      ],
      "code": "class Test {\n              char x = (char) 0;\n            }"
    },
    {
      "description": "negative_positiveLiteral",
      "expected-problems": null,
      "expected-linenumbers": [
        114
      ],
      "code": "class Test {\n              char x = (char) 1;\n            }"
    },
    {
      "description": "negative_castToTypeNotChar",
      "expected-problems": null,
      "expected-linenumbers": [
        127
      ],
      "code": "class Test {\n              int x = (int) -1;\n            }"
    }
  ]
}