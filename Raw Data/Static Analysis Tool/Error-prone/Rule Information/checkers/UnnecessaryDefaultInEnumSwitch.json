{
  "name": "UnnecessaryDefaultInEnumSwitch",
  "language": "java",
  "description": "Switch handles all enum values: an explicit default case is unnecessary and defeats error checking for non-exhaustive switches.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 263,
  "branches": 87,
  "apis": 3,
  "test": [
    {
      "description": "switchCannotComplete",
      "expected-problems": null,
      "expected-linenumbers": [
        37
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                    // This is a comment\n                    throw new AssertionError(c);\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                }\n                // This is a comment\n                throw new AssertionError(c);\n              }\n            }"
    },
    {
      "description": "switchCannotCompleteUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        88
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                    // This is a comment\n                    throw new AssertionError(c);\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  case UNRECOGNIZED:\n                    break;\n                }\n                // This is a comment\n                throw new AssertionError(c);\n              }\n            }"
    },
    {
      "description": "emptyDefault",
      "expected-problems": null,
      "expected-linenumbers": [
        143
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "emptyDefaultUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        192
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  case UNRECOGNIZED:\n                    // continue below\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "defaultBreak",
      "expected-problems": null,
      "expected-linenumbers": [
        245
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                    break;\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "defaultBreakUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        295
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default:\n                    break;\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  case UNRECOGNIZED:\n                    // continue below\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "completes_noUnassignedVars_priorCaseExits",
      "expected-problems": null,
      "expected-linenumbers": [
        349
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    break;\n                  case THREE:\n                    return true;\n                  default:\n                    throw new AssertionError(c);\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    break;\n                  case THREE:\n                    return true;\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "completes_noUnassignedVars_priorCaseExitsUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        401
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    break;\n                  case THREE:\n                    return true;\n                  default:\n                    throw new AssertionError(c);\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    break;\n                  case THREE:\n                    return true;\n                  case UNRECOGNIZED:\n                    throw new AssertionError(c);\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "completes_noUnassignedVars_priorCaseDoesntExit",
      "expected-problems": null,
      "expected-linenumbers": [
        457
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case THREE:\n                  default:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case THREE:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "completes_noUnassignedVars_priorCaseDoesntExitUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        510
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case THREE:\n                  default:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case THREE:\n                  case UNRECOGNIZED:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "completes_unassignedVars",
      "expected-problems": null,
      "expected-linenumbers": [
        566
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                int x;\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    x = 1;\n                    break;\n                  case THREE:\n                    x = 2;\n                    break;\n                  default:\n                    x = 3;\n                }\n                return x == 1;\n              }\n            }"
    },
    {
      "description": "completes_unassignedVarsUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        599
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                int x;\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    x = 1;\n                    break;\n                  case THREE:\n                    x = 2;\n                    break;\n                  default:\n                    x = 3;\n                }\n                return x == 1;\n              }\n            }"
    },
    {
      "description": "notExhaustive",
      "expected-problems": null,
      "expected-linenumbers": [
        633
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  default:\n                    throw new AssertionError(c);\n                }\n              }\n            }"
    },
    {
      "description": "notExhaustiveUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        660
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  default:\n                    throw new AssertionError(c);\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case UNRECOGNIZED:\n                    break;\n                }\n                throw new AssertionError(c);\n              }\n            }"
    },
    {
      "description": "notExhaustive2",
      "expected-problems": null,
      "expected-linenumbers": [
        709
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(boolean f, Case c) {\n                if (f) {\n                  switch (c) {\n                    case ONE:\n                    case TWO:\n                    case THREE:\n                      return true;\n                    default:\n                      return false;\n                  }\n                } else {\n                  return false;\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(boolean f, Case c) {\n                if (f) {\n                  switch (c) {\n                    case ONE:\n                    case TWO:\n                    case THREE:\n                      return true;\n                  }\n                  return false;\n                } else {\n                  return false;\n                }\n              }\n            }"
    },
    {
      "description": "notExhaustive2Unrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        766
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(boolean f, Case c) {\n                if (f) {\n                  switch (c) {\n                    case ONE:\n                    case TWO:\n                    case THREE:\n                      return true;\n                    default:\n                      return false;\n                  }\n                } else {\n                  return false;\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(boolean f, Case c) {\n                if (f) {\n                  switch (c) {\n                    case ONE:\n                    case TWO:\n                    case THREE:\n                      return true;\n                    case UNRECOGNIZED:\n                      break;\n                  }\n                  return false;\n                } else {\n                  return false;\n                }\n              }\n            }"
    },
    {
      "description": "defaultForSkew_switchStatement",
      "expected-problems": null,
      "expected-linenumbers": [
        827
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                  default: // in case of library skew\n                    return false;\n                }\n              }\n\n              boolean o(Case c) {\n                switch (c) {\n                  // in case of library skew\n                  default:\n                    return false;\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    return true;\n                }\n              }\n            }"
    },
    {
      "description": "defaultForSkew_switchStatement_body",
      "expected-problems": null,
      "expected-linenumbers": [
        867
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE, TWO, THREE -> {\n                    return true;\n                  }\n                  // in case of library skew\n                  default -> {\n                    return false;\n                  }\n                }\n              }\n            }"
    },
    {
      "description": "defaultForSkew_switchStatement_noFollowingStatement",
      "expected-problems": null,
      "expected-linenumbers": [
        896
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                  case THREE:\n                    break;\n                  default: // skew\n                }\n              }\n            }"
    },
    {
      "description": "defaultForSkew_switchExpression",
      "expected-problems": null,
      "expected-linenumbers": [
        923
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE\n              }\n\n              void m(Case c) {\n                boolean unused;\n                unused =\n                    switch (c) {\n                      case ONE, TWO -> true;\n                      case THREE -> false;\n                      // present for skew\n                      default -> false;\n                    };\n                unused =\n                    switch (c) {\n                      case ONE, TWO -> true;\n                      case THREE -> false;\n                      default -> // present for skew\n                          false;\n                    };\n                unused =\n                    switch (c) {\n                      // present for skew\n                      default -> false;\n                      case ONE, TWO -> true;\n                      case THREE -> false;\n                    };\n              }\n            }"
    },
    {
      "description": "unrecognizedIgnore",
      "expected-problems": null,
      "expected-linenumbers": [
        965
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                    return true;\n                  default:\n                    throw new AssertionError(c);\n                }\n              }\n            }"
    },
    {
      "description": "defaultAboveCaseUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        992
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  default:\n                  case THREE:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                  case TWO:\n                    return true;\n                  case UNRECOGNIZED:\n                  case THREE:\n                    // This is a comment\n                    System.out.println(\"Test\");\n                }\n                return false;\n              }\n            }"
    },
    {
      "description": "messageMovedAssertion",
      "expected-problems": null,
      "expected-linenumbers": [
        1048
      ],
      "code": "class Test {\n              enum Case {\n                ONE\n              }\n\n              boolean m(Case c) {\n                switch (c) {\n                  case ONE:\n                    return true;\n                  // BUG: Diagnostic contains: after the switch statement\n                  default:\n                    throw new AssertionError(c);\n                }\n              }\n            }"
    },
    {
      "description": "messageRemovedAssertion",
      "expected-problems": null,
      "expected-linenumbers": [
        1073
      ],
      "code": "class Test {\n              enum Case {\n                ONE\n              }\n\n              void m(Case c) {\n                int i = 0;\n                switch (c) {\n                  case ONE:\n                    i = 1;\n                    break;\n                  // BUG: Diagnostic contains: case can be omitted\n                  default:\n                    throw new AssertionError();\n                }\n              }\n            }"
    },
    {
      "description": "switchCompletesUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        1100
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE:\n                    break;\n                  case TWO:\n                    break;\n                  case THREE:\n                    break;\n                  default:\n                    // This is a comment\n                    throw new AssertionError(c);\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                THREE,\n                UNRECOGNIZED\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE:\n                    break;\n                  case TWO:\n                    break;\n                  case THREE:\n                    break;\n                  case UNRECOGNIZED:\n                    // This is a comment\n                    throw new AssertionError(c);\n                }\n              }\n            }"
    },
    {
      "description": "messages",
      "expected-problems": null,
      "expected-linenumbers": [
        1158
      ],
      "code": "class Test {\n              enum NormalEnum {\n                A,\n                B\n              }\n\n              enum ProtoEnum {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              void normal(NormalEnum e) {\n                switch (e) {\n                  case A:\n                  case B:\n                  // BUG: Diagnostic contains: default case can be omitted\n                  default:\n                    break;\n                }\n              }\n\n              void proto(ProtoEnum e) {\n                switch (e) {\n                  case ONE:\n                  case TWO:\n                  // BUG: Diagnostic contains: UNRECOGNIZED\n                  default:\n                    break;\n                }\n              }\n            }"
    },
    {
      "description": "defaultCaseKindRule",
      "expected-problems": null,
      "expected-linenumbers": [
        1200
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE -> {}\n                  case TWO -> {}\n                  default -> {}\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE -> {}\n                  case TWO -> {}\n                }\n              }\n            }"
    },
    {
      "description": "defaultCaseKindRule_initialisation",
      "expected-problems": null,
      "expected-linenumbers": [
        1241
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO\n              }\n\n              void m(Case c) {\n                int x;\n                switch (c) {\n                  case ONE -> x = 1;\n                  case TWO -> x = 2;\n                  // Removing this would not compile.\n                  default -> throw new AssertionError();\n                }\n                System.out.println(x);\n              }\n            }"
    },
    {
      "description": "unrecognizedCaseKindRule",
      "expected-problems": null,
      "expected-linenumbers": [
        1268
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE -> {}\n                  case TWO -> {}\n                  default -> {}\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              void m(Case c) {\n                switch (c) {\n                  case ONE -> {}\n                  case TWO -> {}\n                  case UNRECOGNIZED -> {}\n                }\n              }\n            }"
    },
    {
      "description": "unrecognizedCaseKindRule_initialization",
      "expected-problems": null,
      "expected-linenumbers": [
        1315
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              void m(Case c) {\n                int x;\n                switch (c) {\n                  case ONE -> x = 1;\n                  case TWO -> x = 2;\n                  // Removing this would not compile.\n                  default -> throw new AssertionError();\n                }\n                System.out.println(x);\n              }\n            }"
    },
    {
      "description": "multipleLabels",
      "expected-problems": null,
      "expected-linenumbers": [
        1343
      ],
      "code": "class Test {\n              enum Type {\n                FOO,\n                BAR,\n                BAZ,\n              }\n\n              public static void main(String[] args) {\n                var type = Type.valueOf(args[0]);\n                switch (type) {\n                  case FOO -> {\n                    System.out.println(\"Hi foo\");\n                  }\n                  case BAR, BAZ -> {}\n                  default -> throw new AssertionError(type);\n                }\n              }\n            }\n            \n\n            class Test {\n              enum Type {\n                FOO,\n                BAR,\n                BAZ,\n              }\n\n              public static void main(String[] args) {\n                var type = Type.valueOf(args[0]);\n                switch (type) {\n                  case FOO -> {\n                    System.out.println(\"Hi foo\");\n                  }\n                  case BAR, BAZ -> {}\n                }\n              }\n            }"
    },
    {
      "description": "expressionSwitch",
      "expected-problems": null,
      "expected-linenumbers": [
        1392
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n              }\n\n              boolean m(Case c) {\n                return switch (c) {\n                  case ONE -> true;\n                  case TWO -> false;\n                  default -> throw new AssertionError();\n                };\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n              }\n\n              boolean m(Case c) {\n                return switch (c) {\n                  case ONE -> true;\n                  case TWO -> false;\n                };\n              }\n            }"
    },
    {
      "description": "expressionSwitchUnrecognized",
      "expected-problems": null,
      "expected-linenumbers": [
        1433
      ],
      "code": "class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                return switch (c) {\n                  case ONE -> true;\n                  case TWO -> false;\n                  default -> throw new AssertionError();\n                };\n              }\n            }\n            \n\n            class Test {\n              enum Case {\n                ONE,\n                TWO,\n                UNRECOGNIZED\n              }\n\n              boolean m(Case c) {\n                return switch (c) {\n                  case ONE -> true;\n                  case TWO -> false;\n                  case UNRECOGNIZED -> throw new AssertionError();\n                };\n              }\n            }"
    }
  ]
}