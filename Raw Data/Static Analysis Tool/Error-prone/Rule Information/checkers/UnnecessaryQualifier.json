{
  "name": "UnnecessaryQualifier",
  "language": "java",
  "description": "A qualifier annotation has no effect here.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 201,
  "branches": 20,
  "apis": 1,
  "test": [
    {
      "description": "unannotatedField",
      "expected-problems": null,
      "expected-linenumbers": [
        53
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains:\n              @Qual int x;\n            }"
    },
    {
      "description": "unannotatedLocal",
      "expected-problems": null,
      "expected-linenumbers": [
        67
      ],
      "code": "class Test {\n              void foo() {\n                // BUG: Diagnostic contains:\n                @Qual int x;\n              }\n            }"
    },
    {
      "description": "parameterOnNonInjectionPointMethod",
      "expected-problems": null,
      "expected-linenumbers": [
        83
      ],
      "code": "class Test {\n              void foo(\n                  // BUG: Diagnostic contains:\n                  @Qual int x) {}\n            }"
    },
    {
      "description": "methodReturnType_notProvider_finding",
      "expected-problems": null,
      "expected-linenumbers": [
        98
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains:\n              @Qual\n              int foo() {\n                return 1;\n              }\n            }"
    },
    {
      "description": "methodReturnType_provider_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        115
      ],
      "code": "import com.google.inject.Provides;\n\n            class Test {\n              @Provides\n              @Qual\n              int foo() {\n                return 1;\n              }\n            }"
    },
    {
      "description": "customProvidesMethod_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        134
      ],
      "code": "class Test {\n              @ProvidesSomething\n              @Qual\n              int foo() {\n                return 1;\n              }\n            }"
    },
    {
      "description": "unannotatedConstructor_finding",
      "expected-problems": null,
      "expected-linenumbers": [
        151
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains:\n              Test(@Qual int x) {}\n            }"
    },
    {
      "description": "injectedField_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        165
      ],
      "code": "import javax.inject.Inject;\n\n            class Test {\n              @Inject @Qual int x;\n            }"
    },
    {
      "description": "exemptedClassAnnotation_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        180
      ],
      "code": "import dagger.Component;\n\n            @Component.Builder\n            interface Builder {\n              Builder setName(@Qual String name);\n\n              String build();\n            }"
    },
    {
      "description": "exemptedClassAnnotation_subcomponentFactory_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        198
      ],
      "code": "import dagger.BindsInstance;\n            import dagger.Subcomponent;\n\n            @Subcomponent.Factory\n            interface Factory {\n              Object create(@BindsInstance @Qual boolean isEnabled);\n            }"
    },
    {
      "description": "lambdas_neverMeaningful",
      "expected-problems": null,
      "expected-linenumbers": [
        215
      ],
      "code": "import java.util.function.Function;\n\n            interface Test {\n              // BUG: Diagnostic contains:\n              Function<Integer, Integer> F = (@Qual Integer a) -> a;\n            }"
    },
    {
      "description": "interface_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        231
      ],
      "code": "interface Test {\n              @Qual\n              Object frobnicator();\n            }"
    }
  ]
}