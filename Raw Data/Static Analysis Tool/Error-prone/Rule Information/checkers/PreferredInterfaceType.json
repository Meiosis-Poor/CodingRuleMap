{
  "name": "PreferredInterfaceType",
  "language": "java",
  "description": "This type can be more specific.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 310,
  "branches": 17,
  "apis": 5,
  "test": [
    {
      "description": "assigned",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "import com.google.common.graph.Graph;\n            import com.google.common.graph.GraphBuilder;\n            import com.google.common.graph.ImmutableGraph;\n            import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              private static final Iterable<Integer> FOO = new ArrayList<>();\n              public static final Iterable<Integer> BAR = new ArrayList<>();\n              public static final Iterable<Integer> RAW = new ArrayList<>();\n              public static final Graph<Integer> GRAPH =\n                  ImmutableGraph.copyOf(GraphBuilder.undirected().build());\n            }\n            \n\n            import com.google.common.graph.Graph;\n            import com.google.common.graph.GraphBuilder;\n            import com.google.common.graph.ImmutableGraph;\n            import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              private static final List<Integer> FOO = new ArrayList<>();\n              public static final List<Integer> BAR = new ArrayList<>();\n              public static final List<Integer> RAW = new ArrayList<>();\n              public static final ImmutableGraph<Integer> GRAPH =\n                  ImmutableGraph.copyOf(GraphBuilder.undirected().build());\n            }"
    },
    {
      "description": "assignedMultipleTypesCompatibleWithSuper",
      "expected-problems": null,
      "expected-linenumbers": [
        73
      ],
      "code": "import java.util.ArrayList;\n            import java.util.Collection;\n            import java.util.HashSet;\n\n            class Test {\n              void test() {\n                Collection<Integer> foo = new ArrayList<>();\n                foo = new HashSet<>();\n              }\n            }"
    },
    {
      "description": "referringToCollectionAsIterable_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        93
      ],
      "code": "import java.util.Collection;\n            import java.util.HashSet;\n\n            class Test {\n              Collection<Integer> test() {\n                Iterable<Integer> foo = test();\n                return null;\n              }\n            }"
    },
    {
      "description": "alreadyTightenedType",
      "expected-problems": null,
      "expected-linenumbers": [
        112
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              void test() {\n                List<Integer> foo = new ArrayList<>();\n              }\n            }"
    },
    {
      "description": "parameters_notFlagged",
      "expected-problems": null,
      "expected-linenumbers": [
        130
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              void test(Iterable<Object> xs) {\n                xs = new ArrayList<>();\n              }\n            }"
    },
    {
      "description": "nonPrivateNonFinalFields_notFlagged",
      "expected-problems": null,
      "expected-linenumbers": [
        148
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              Iterable<Object> xs;\n\n              Test(List<Object> xs) {\n                this.xs = xs;\n              }\n            }"
    },
    {
      "description": "nonFinalButPrivateFields",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains:\n              private Iterable<Object> xs;\n\n              void test(List<Object> xs) {\n                this.xs = xs;\n              }\n            }"
    },
    {
      "description": "nonFinalButFieldInPrivateClass",
      "expected-problems": null,
      "expected-linenumbers": [
        189
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              private static class Inner {\n                // BUG: Diagnostic contains:\n                Iterable<Object> xs;\n\n                void test(List<Object> xs) {\n                  this.xs = xs;\n                }\n              }\n            }"
    },
    {
      "description": "immutables",
      "expected-problems": null,
      "expected-linenumbers": [
        212
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              void test() {\n                List<Integer> foo = ImmutableList.of(1);\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              void test() {\n                ImmutableList<Integer> foo = ImmutableList.of(1);\n              }\n            }"
    },
    {
      "description": "immutableMap",
      "expected-problems": null,
      "expected-linenumbers": [
        242
      ],
      "code": "import com.google.common.collect.ImmutableMap;\n            import java.util.Map;\n\n            class Test {\n              void test() {\n                Map<Integer, Integer> foo = ImmutableMap.of(1, 1);\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableMap;\n            import java.util.Map;\n\n            class Test {\n              void test() {\n                ImmutableMap<Integer, Integer> foo = ImmutableMap.of(1, 1);\n              }\n            }"
    },
    {
      "description": "constructor_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        272
      ],
      "code": "class Test {\n              Test() {}\n            }"
    },
    {
      "description": "returnTypeVoid_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        285
      ],
      "code": "class Test {\n              void foo() {}\n            }"
    },
    {
      "description": "nonFinalNonPrivateNonStaticMethodInNonFinalClass_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        298
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "providesAnnotatedMethod_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        316
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import dagger.Provides;\n            import java.util.List;\n\n            class Test {\n              @Provides\n              static List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "producesAnnotatedMethod_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        336
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import dagger.producers.Produces;\n            import java.util.List;\n\n            class Test {\n              @Produces\n              static List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "nonFinalNonPrivateNonStaticMethodInFinalClass",
      "expected-problems": null,
      "expected-linenumbers": [
        356
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            final class Test {\n              // BUG: Diagnostic contains: immutable type\n              List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "finalMethodInNonFinalClass",
      "expected-problems": null,
      "expected-linenumbers": [
        375
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: final ImmutableList<String> foo()\n              final List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "privateMethodInNonFinalClass",
      "expected-problems": null,
      "expected-linenumbers": [
        394
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: private ImmutableList<String> foo()\n              private List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "staticMethodInNonFinalClass",
      "expected-problems": null,
      "expected-linenumbers": [
        413
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: static ImmutableList<String> foo()\n              static List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "returnTypeImmutableList_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        432
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              final ImmutableList<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "returnTypeImmutableCollection_suggestsTighterType",
      "expected-problems": null,
      "expected-linenumbers": [
        450
      ],
      "code": "import com.google.common.collect.ImmutableCollection;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: convey more information\n              final ImmutableCollection<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "returnTypeList_singleReturnStatementImmutableList_suggestsImmutableList",
      "expected-problems": null,
      "expected-linenumbers": [
        470
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: final ImmutableList<String> foo()\n              final List<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "returnTypeList_singleReturnStatementArrayList_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        489
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              final List<String> foo() {\n                return new ArrayList<>();\n              }\n            }"
    },
    {
      "description": "returnTypeList_singleReturnStatementList_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        507
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              final List<String> foo() {\n                return new ArrayList<>();\n              }\n            }"
    },
    {
      "description": "returnTypeList_multipleReturnStatementsImmutableList_suggestsImmutableList",
      "expected-problems": null,
      "expected-linenumbers": [
        525
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: ImmutableList<String> foo()\n              final List<String> foo() {\n                if (true) {\n                  return ImmutableList.of();\n                } else {\n                  return ImmutableList.of();\n                }\n              }\n            }"
    },
    {
      "description": "returnTypeList_multipleReturnStatementsArrayListImmutableList_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        548
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              final List<String> foo() {\n                if (true) {\n                  return ImmutableList.of();\n                } else {\n                  return new ArrayList<>();\n                }\n              }\n            }"
    },
    {
      "description": "returnTypeList_multipleReturnStatementsImmutableSetImmutableList_suggestsImmutableCollection",
      "expected-problems": null,
      "expected-linenumbers": [
        571
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.common.collect.ImmutableSet;\n            import java.util.Collection;\n\n            class Test {\n              // BUG: Diagnostic contains: ImmutableCollection<String> foo()\n              final Collection<String> foo() {\n                if (true) {\n                  return ImmutableList.of();\n                } else {\n                  return ImmutableSet.of();\n                }\n              }\n            }"
    },
    {
      "description": "returnTypeList_multipleReturnStatementsImmutableSetImmutableMap_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        596
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.common.collect.ImmutableMap;\n\n            class Test {\n              final Object foo() {\n                if (true) {\n                  return ImmutableList.of();\n                } else {\n                  return ImmutableMap.of();\n                }\n              }\n            }"
    },
    {
      "description": "returnTypeList_multipleReturnStatementsImmutableMapImmutableBiMap_suggestsImmutableMap",
      "expected-problems": null,
      "expected-linenumbers": [
        618
      ],
      "code": "import com.google.common.collect.ImmutableBiMap;\n            import com.google.common.collect.ImmutableMap;\n            import java.util.Map;\n\n            class Test {\n              // BUG: Diagnostic contains: final ImmutableMap<String, String> foo()\n              final Map<String, String> foo() {\n                if (true) {\n                  return ImmutableBiMap.of();\n                } else {\n                  return ImmutableMap.of();\n                }\n              }\n            }"
    },
    {
      "description": "returnTypeList_insideAnonymousNested_suggestsImmutableList",
      "expected-problems": null,
      "expected-linenumbers": [
        643
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.inject.Provider;\n            import java.util.List;\n\n            class Test {\n              private static final int getFooLength() {\n                final Provider<List<String>> fooProvider =\n                    new Provider<List<String>>() {\n                      @Override\n                      // BUG: Diagnostic contains: ImmutableList<String> get\n                      public List<String> get() {\n                        return ImmutableList.of(\"foo\", \"bar\");\n                      }\n                    };\n                List<String> foo = fooProvider.get();\n                return foo.size();\n              }\n            }"
    },
    {
      "description": "returnTypeList_anonymousLambda_suggestsNothing",
      "expected-problems": null,
      "expected-linenumbers": [
        671
      ],
      "code": "import java.util.function.Function;\n            import java.util.List;\n\n            public interface ApplyInterface {\n              int applyAndGetSize(Function<String, List<String>> fun);\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import java.util.function.Function;\n            import java.util.List;\n\n            public class ApplyImpl implements ApplyInterface {\n              public int applyAndGetSize(Function<String, List<String>> fun) {\n                List<String> result = fun.apply(\"foo,bar\");\n                return result.size();\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import java.util.function.Function;\n            import java.util.List;\n\n            class Test {\n              private static final ApplyInterface APPLY = new ApplyImpl();\n\n              private int doApply() {\n                int result =\n                    APPLY.applyAndGetSize(\n                        str -> {\n                          ImmutableList<String> res = ImmutableList.of(str, str);\n                          return res;\n                        });\n                return result;\n              }\n            }"
    },
    {
      "description": "overridingMethod_specialNotice",
      "expected-problems": null,
      "expected-linenumbers": [
        722
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.inject.Provider;\n            import java.util.List;\n\n            class Test {\n              private static final int getFooLength() {\n                final Provider<List<String>> fooProvider =\n                    new Provider<List<String>>() {\n                      @Override\n                      // BUG: Diagnostic contains: even when overriding a method\n                      public List<String> get() {\n                        return ImmutableList.of(\"foo\", \"bar\");\n                      }\n                    };\n                List<String> foo = fooProvider.get();\n                return foo.size();\n              }\n            }"
    },
    {
      "description": "iterable_givenMoreTypeInformationAvailable_refactored",
      "expected-problems": null,
      "expected-linenumbers": [
        750
      ],
      "code": "import com.google.common.collect.ImmutableList;\n\n            class Test {\n              final ImmutableList<String> foo() {\n                return ImmutableList.of();\n              }\n            }"
    },
    {
      "description": "immutableMap_notReplacedWithBiMap",
      "expected-problems": null,
      "expected-linenumbers": [
        767
      ],
      "code": "import com.google.common.collect.ImmutableBiMap;\n            import com.google.common.collect.ImmutableMap;\n\n            class Test {\n              final ImmutableMap<String, String> foo() {\n                return ImmutableBiMap.of();\n              }\n            }"
    },
    {
      "description": "diagnosticMessage_whenReplacingWithNonImmutableType",
      "expected-problems": null,
      "expected-linenumbers": [
        785
      ],
      "code": "import com.google.common.collect.ArrayListMultimap;\n            import com.google.common.collect.HashMultimap;\n            import com.google.common.collect.Multimap;\n            import com.google.common.collect.ImmutableListMultimap;\n            import com.google.common.collect.ImmutableMultimap;\n            import com.google.common.collect.ImmutableSetMultimap;\n\n            class Test {\n              // BUG: Diagnostic contains: convey more information\n              final Multimap<?, ?> foo() {\n                return ArrayListMultimap.create();\n              }\n\n              // BUG: Diagnostic contains: convey more information\n              final Multimap<?, ?> bar() {\n                return HashMultimap.create();\n              }\n\n              // BUG: Diagnostic contains: convey more information\n              final ImmutableMultimap<?, ?> baz() {\n                return ImmutableListMultimap.of();\n              }\n\n              // BUG: Diagnostic contains: convey more information\n              final ImmutableMultimap<?, ?> quux() {\n                return ImmutableSetMultimap.of();\n              }\n            }"
    },
    {
      "description": "staticFinalIterableInitializedInDeclarationWithImmutableSetOf",
      "expected-problems": null,
      "expected-linenumbers": [
        823
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableSet<String> FOO =\n              static final Iterable<String> FOO = ImmutableSet.of();\n            }"
    },
    {
      "description": "bind",
      "expected-problems": null,
      "expected-linenumbers": [
        839
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.inject.testing.fieldbinder.Bind;\n            import java.util.List;\n\n            class Test {\n              @Bind private static final List<String> LABELS = ImmutableList.of(\"MiniCluster\");\n            }"
    },
    {
      "description": "staticFinalMapInitializedInDeclarationWithImmutableBiMapOf",
      "expected-problems": null,
      "expected-linenumbers": [
        856
      ],
      "code": "import com.google.common.collect.ImmutableBiMap;\n            import java.util.Map;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableMap<String, String> FOO =\n              static final Map<String, String> FOO = ImmutableBiMap.of();\n            }"
    },
    {
      "description": "staticFinalSetInitializedInDeclarationWithImmutableSetOf",
      "expected-problems": null,
      "expected-linenumbers": [
        873
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n            import java.util.Set;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableSet<String> FOO =\n              static final Set<String> FOO = ImmutableSet.of();\n            }"
    },
    {
      "description": "staticFinalRawSetInitializedInDeclarationWithImmutableSetOf",
      "expected-problems": null,
      "expected-linenumbers": [
        890
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n            import java.util.Set;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableSet FOO =\n              static final Set FOO = ImmutableSet.of();\n            }"
    },
    {
      "description": "staticFinalSetInitializedInDeclarationWithImmutableSetBuilder",
      "expected-problems": null,
      "expected-linenumbers": [
        907
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n            import java.util.Set;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableSet<String> FOO =\n              static final Set<String> FOO = ImmutableSet.<String>builder().build();\n            }"
    },
    {
      "description": "staticFinalListInitializedInDeclarationWithImmutableListOf",
      "expected-problems": null,
      "expected-linenumbers": [
        924
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableList<String> FOO =\n              static final List<String> FOO = ImmutableList.of();\n            }"
    },
    {
      "description": "staticFinalMapInitializedInDeclarationWithImmutableMapOf",
      "expected-problems": null,
      "expected-linenumbers": [
        941
      ],
      "code": "import com.google.common.collect.ImmutableMap;\n            import java.util.Map;\n\n            class Test {\n              // BUG: Diagnostic contains: static final ImmutableMap<Integer, String> FOO =\n              static final Map<Integer, String> FOO = ImmutableMap.of();\n            }"
    },
    {
      "description": "staticFinalImmutableSetInitializedInDeclarationWithImmutableSet_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        958
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Test {\n              static final ImmutableSet<String> FOO = ImmutableSet.of();\n            }"
    },
    {
      "description": "staticFinalSetInitializedInStaticBlock",
      "expected-problems": null,
      "expected-linenumbers": [
        973
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Test {\n              private static final ImmutableSet<String> FOO;\n\n              static {\n                FOO = ImmutableSet.of();\n              }\n            }"
    },
    {
      "description": "nonStatic",
      "expected-problems": null,
      "expected-linenumbers": [
        992
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Test {\n              final ImmutableSet<String> NON_STATIC = ImmutableSet.of();\n            }"
    },
    {
      "description": "nonFinal",
      "expected-problems": null,
      "expected-linenumbers": [
        1007
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n            import java.util.Set;\n\n            class Test {\n              static Set<String> NON_FINAL = ImmutableSet.of();\n            }"
    },
    {
      "description": "nonCapitalCase_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        1023
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n            import java.util.Set;\n\n            class Test {\n              static final ImmutableSet<String> nonCapitalCase = ImmutableSet.of();\n            }"
    },
    {
      "description": "mutable_doesNotSuggestFix",
      "expected-problems": null,
      "expected-linenumbers": [
        1039
      ],
      "code": "import java.util.ArrayList;\n            import java.util.List;\n\n            class Test {\n              static Iterable<String> mutable = new ArrayList<>();\n            }"
    },
    {
      "description": "replacementNotSubtypeOfDeclaredType_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        1055
      ],
      "code": "import java.util.Deque;\n            import java.util.LinkedList;\n\n            class Test {\n              private final Deque<String> foos = new LinkedList<>();\n            }"
    },
    {
      "description": "charSequences",
      "expected-problems": null,
      "expected-linenumbers": [
        1071
      ],
      "code": "class Test {\n              // BUG: Diagnostic contains: String\n              private final CharSequence a = \"foo\";\n            }"
    },
    {
      "description": "obeysKeep",
      "expected-problems": null,
      "expected-linenumbers": [
        1085
      ],
      "code": "import com.google.errorprone.annotations.Keep;\n            import java.util.ArrayList;\n\n            class Test {\n              @Keep private static final Iterable<Integer> FOO = new ArrayList<>();\n            }"
    },
    {
      "description": "javaLangNotQualified",
      "expected-problems": null,
      "expected-linenumbers": [
        1102
      ],
      "code": "class Test {\n              private CharSequence cs() {\n                return \"\";\n              }\n            }\n            \n\n            class Test {\n              private String cs() {\n                return \"\";\n              }\n            }"
    }
  ]
}