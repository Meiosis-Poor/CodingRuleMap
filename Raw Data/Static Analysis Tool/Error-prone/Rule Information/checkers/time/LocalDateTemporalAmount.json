{
  "name": "LocalDateTemporalAmount",
  "language": "java",
  "description": "LocalDate.plus() and minus() does not work with Durations. LocalDate represents civil time (years/months/days), so java.time.Period is the appropriate thing to add or subtract instead.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 55,
  "branches": 2,
  "apis": 2,
  "test": [
    {
      "description": "localDatePlus_good",
      "expected-problems": null,
      "expected-linenumbers": [
        29
      ],
      "code": "import java.time.LocalDate;\n            import java.time.Period;\n            import java.time.temporal.ChronoUnit;\n\n            public class TestClass {\n              private static final LocalDate LD = LocalDate.of(1985, 5, 31);\n              private static final Period PERIOD = Period.ofDays(1);\n              private static final LocalDate LD1 = LD.plus(PERIOD);\n              private static final LocalDate LD2 = LD.plus(1, ChronoUnit.DAYS);\n            }"
    },
    {
      "description": "localDatePlus_bad",
      "expected-problems": null,
      "expected-linenumbers": [
        49
      ],
      "code": "import java.time.Duration;\n            import java.time.LocalDate;\n\n            public class TestClass {\n              private static final LocalDate LD = LocalDate.of(1985, 5, 31);\n              private static final Duration DURATION = Duration.ofDays(1);\n              // BUG: Diagnostic contains: LocalDateTemporalAmount\n              private static final LocalDate LD0 = LD.plus(DURATION);\n            }"
    },
    {
      "description": "localDatePlus_zero",
      "expected-problems": null,
      "expected-linenumbers": [
        68
      ],
      "code": ""
    },
    {
      "description": "localDateMinus_good",
      "expected-problems": null,
      "expected-linenumbers": [
        84
      ],
      "code": "import java.time.LocalDate;\n            import java.time.Period;\n            import java.time.temporal.ChronoUnit;\n\n            public class TestClass {\n              private static final LocalDate LD = LocalDate.of(1985, 5, 31);\n              private static final Period PERIOD = Period.ofDays(1);\n              private static final LocalDate LD1 = LD.minus(PERIOD);\n              private static final LocalDate LD2 = LD.minus(1, ChronoUnit.DAYS);\n            }"
    },
    {
      "description": "localDateMinus_bad",
      "expected-problems": null,
      "expected-linenumbers": [
        104
      ],
      "code": "import java.time.Duration;\n            import java.time.LocalDate;\n\n            public class TestClass {\n              private static final LocalDate LD = LocalDate.of(1985, 5, 31);\n              private static final Duration DURATION = Duration.ofDays(1);\n              // BUG: Diagnostic contains: LocalDateTemporalAmount\n              private static final LocalDate LD0 = LD.minus(DURATION);\n            }"
    },
    {
      "description": "localDateMinus_zero",
      "expected-problems": null,
      "expected-linenumbers": [
        123
      ],
      "code": ""
    }
  ]
}