{
  "name": "JodaWithDurationAddedLong",
  "language": "java",
  "description": "Use of JodaTime's type.withDurationAdded(long, int) (where <type> = {Duration,Instant,DateTime}). Please use type.withDurationAdded(Duration.millis(long), int) instead.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 104,
  "branches": 12,
  "apis": 1,
  "test": [
    {
      "description": "instantWithDurationAddedDuration",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import org.joda.time.Duration;\n            import org.joda.time.Instant;\n\n            public class TestClass {\n              private static final Instant NOW = Instant.now();\n              private static final Instant A = NOW.withDurationAdded(Duration.millis(42), 1);\n              private static final Instant B =\n                  // BUG: Diagnostic contains: NOW.plus(Duration.millis(42));\n                  NOW.withDurationAdded(Duration.millis(42).getMillis(), 1);\n            }"
    },
    {
      "description": "instantWithDurationAddedLong",
      "expected-problems": null,
      "expected-linenumbers": [
        51
      ],
      "code": "import org.joda.time.Duration;\n            import org.joda.time.Instant;\n\n            public class TestClass {\n              private static final Instant NOW = Instant.now();\n              // BUG: Diagnostic contains: NOW.withDurationAdded(Duration.millis(42), 2);\n              private static final Instant A = NOW.withDurationAdded(42, 2);\n              private static final Instant B =\n                  // BUG: Diagnostic contains: NOW.withDurationAdded(Duration.millis(42), 2);\n                  NOW.withDurationAdded(Duration.millis(42).getMillis(), 2);\n\n              // BUG: Diagnostic contains: NOW.plus(Duration.millis(42));\n              private static final Instant PLUS = NOW.withDurationAdded(42, 1);\n              // BUG: Diagnostic contains: NOW;\n              private static final Instant ZERO = NOW.withDurationAdded(42, 0);\n              // BUG: Diagnostic contains: NOW.minus(Duration.millis(42));\n              private static final Instant MINUS = NOW.withDurationAdded(42, -1);\n            }"
    },
    {
      "description": "instantWithDurationAddedLong_insideJodaTime",
      "expected-problems": null,
      "expected-linenumbers": [
        79
      ],
      "code": "package org.joda.time;\n\n            public class TestClass {\n              private static final Instant A = Instant.now().withDurationAdded(42, 1);\n            }"
    },
    {
      "description": "durationWithDurationAddedDuration",
      "expected-problems": null,
      "expected-linenumbers": [
        96
      ],
      "code": "import static org.joda.time.Duration.ZERO;\n            import org.joda.time.Duration;\n\n            public class TestClass {\n              private static final Duration A = ZERO.withDurationAdded(Duration.millis(42), 1);\n              private static final Duration B =\n                  // BUG: Diagnostic contains: ZERO.plus(Duration.millis(42));\n                  ZERO.withDurationAdded(Duration.millis(42).getMillis(), 1);\n            }"
    },
    {
      "description": "durationWithDurationAddedLong",
      "expected-problems": null,
      "expected-linenumbers": [
        115
      ],
      "code": "import static org.joda.time.Duration.ZERO;\n            import org.joda.time.Duration;\n\n            public class TestClass {\n              // BUG: Diagnostic contains: ZERO.withDurationAdded(Duration.millis(42), 2);\n              private static final Duration A = ZERO.withDurationAdded(42, 2);\n              private static final Duration B =\n                  // BUG: Diagnostic contains: ZERO.withDurationAdded(Duration.millis(42), 2);\n                  ZERO.withDurationAdded(Duration.millis(42).getMillis(), 2);\n\n              // BUG: Diagnostic contains: ZERO.plus(Duration.millis(42));\n              private static final Duration PLUS = ZERO.withDurationAdded(42, 1);\n              // BUG: Diagnostic contains: ZERO;\n              private static final Duration ZEROX = ZERO.withDurationAdded(42, 0);\n              // BUG: Diagnostic contains: ZERO.minus(Duration.millis(42));\n              private static final Duration MINUS = ZERO.withDurationAdded(42, -1);\n            }"
    },
    {
      "description": "durationWithDurationAddedLong_insideJodaTime",
      "expected-problems": null,
      "expected-linenumbers": [
        142
      ],
      "code": "package org.joda.time;\n\n            import static org.joda.time.Duration.ZERO;\n\n            public class TestClass {\n              private static final Duration A = ZERO.withDurationAdded(42, 1);\n            }"
    },
    {
      "description": "dateTimeWithDurationAddedDuration",
      "expected-problems": null,
      "expected-linenumbers": [
        161
      ],
      "code": "import org.joda.time.Duration;\n            import org.joda.time.DateTime;\n\n            public class TestClass {\n              private static final DateTime NOW = DateTime.now();\n              private static final DateTime A = NOW.withDurationAdded(Duration.millis(42), 1);\n              private static final DateTime B =\n                  // BUG: Diagnostic contains: NOW.plus(Duration.millis(42));\n                  NOW.withDurationAdded(Duration.millis(42).getMillis(), 1);\n            }"
    },
    {
      "description": "dateTimeWithDurationAddedLong",
      "expected-problems": null,
      "expected-linenumbers": [
        181
      ],
      "code": "import org.joda.time.DateTime;\n            import org.joda.time.Duration;\n\n            public class TestClass {\n              private static final DateTime NOW = DateTime.now();\n              // BUG: Diagnostic contains: NOW.withDurationAdded(Duration.millis(42), 2);\n              private static final DateTime A = NOW.withDurationAdded(42, 2);\n              private static final DateTime B =\n                  // BUG: Diagnostic contains: NOW.withDurationAdded(Duration.millis(42), 2);\n                  NOW.withDurationAdded(Duration.millis(42).getMillis(), 2);\n\n              // BUG: Diagnostic contains: NOW.plus(Duration.millis(42));\n              private static final DateTime PLUS = NOW.withDurationAdded(42, 1);\n              // BUG: Diagnostic contains: NOW;\n              private static final DateTime ZERO = NOW.withDurationAdded(42, 0);\n              // BUG: Diagnostic contains: NOW.minus(Duration.millis(42));\n              private static final DateTime MINUS = NOW.withDurationAdded(42, -1);\n            }"
    },
    {
      "description": "dateTimeWithDurationAddedLong_insideJodaTime",
      "expected-problems": null,
      "expected-linenumbers": [
        209
      ],
      "code": "package org.joda.time;\n\n            public class TestClass {\n              private static final DateTime A = DateTime.now().withDurationAdded(42, 1);\n            }"
    }
  ]
}