{
  "name": "AssertThrowsMultipleStatements",
  "language": "java",
  "description": "The lambda passed to assertThrows should contain exactly one statement",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 75,
  "branches": 9,
  "apis": 1,
  "test": [
    {
      "description": "ignoreInThrowingRunnables",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import static org.junit.Assert.assertThrows;\n\n            class Test {\n              void f() {\n                assertThrows(\n                    IllegalStateException.class,\n                    () -> {\n                      System.err.println();\n                    });\n                IllegalStateException e =\n                    assertThrows(\n                        IllegalStateException.class,\n                        () -> {\n                          System.err.println(1);\n                          System.err.println(2);\n                        });\n                assertThrows(\n                    IllegalStateException.class,\n                    () -> {\n                      int x = 2;\n                      int y = x;\n                    });\n              }\n            }\n            \n\n            import static org.junit.Assert.assertThrows;\n\n            class Test {\n              void f() {\n                assertThrows(\n                    IllegalStateException.class,\n                    () -> {\n                      System.err.println();\n                    });\n                System.err.println(1);\n                IllegalStateException e =\n                    assertThrows(IllegalStateException.class, () -> System.err.println(2));\n                int x = 2;\n                assertThrows(\n                    IllegalStateException.class,\n                    () -> {\n                      int y = x;\n                    });\n              }\n            }"
    }
  ]
}