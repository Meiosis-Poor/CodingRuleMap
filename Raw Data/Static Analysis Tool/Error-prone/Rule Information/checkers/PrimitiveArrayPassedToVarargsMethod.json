{
  "name": "PrimitiveArrayPassedToVarargsMethod",
  "language": "java",
  "description": "Passing a primitive array to a varargs method is usually wrong",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 79,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import java.util.Arrays;\n\n            /**\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class PrimitiveArrayPassedToVarargsMethodPositiveCases {\n\n              public void objectVarargsMethod(Object... objs) {}\n\n              public <T> void genericVarargsMethod(T... genericArrays) {}\n\n              public void objectVarargsMethodWithMultipleParams(Object obj1, Object... objs) {}\n\n              public void doIt() {\n                int[] intArray = {1, 2, 3};\n\n                // BUG: Diagnostic contains:\n                objectVarargsMethod(intArray);\n\n                // BUG: Diagnostic contains:\n                genericVarargsMethod(intArray);\n\n                // BUG: Diagnostic contains:\n                objectVarargsMethodWithMultipleParams(new Object(), intArray);\n\n                // BUG: Diagnostic contains:\n                Arrays.asList(intArray);\n              }\n            }\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        74
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            /**\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class PrimitiveArrayPassedToVarargsMethodNegativeCases {\n\n              public void intVarargsMethod(int... ints) {}\n\n              public void intArrayVarargsMethod(int[]... intArrays) {}\n\n              public void objectVarargsMethodWithMultipleParams(Object obj1, Object... objs) {}\n\n              public void doIt() {\n                int[] intArray = {1, 2, 3};\n\n                intVarargsMethod(intArray);\n                intArrayVarargsMethod(intArray);\n                objectVarargsMethodWithMultipleParams(new Object());\n              }\n            }\\"
    }
  ]
}