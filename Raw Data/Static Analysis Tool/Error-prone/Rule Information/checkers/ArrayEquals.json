{
  "name": "ArrayEquals",
  "language": "java",
  "description": "Reference equality used to compare arrays",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 69,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import com.google.common.base.Objects;\n\n            /**\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class ArrayEqualsPositiveCases {\n\n              public void intArray() {\n                int[] a = {1, 2, 3};\n                int[] b = {1, 2, 3};\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (a.equals(b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (Objects.equal(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void objectArray() {\n                Object[] a = new Object[3];\n                Object[] b = new Object[3];\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (a.equals(b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (Objects.equal(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void firstMethodCall() {\n                String s = \"hello\";\n                char[] b = new char[3];\n\n                // BUG: Diagnostic contains: Arrays.equals(s.toCharArray(), b)\n                if (s.toCharArray().equals(b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void secondMethodCall() {\n                char[] a = new char[3];\n                String s = \"hello\";\n\n                // BUG: Diagnostic contains: Arrays.equals(a, s.toCharArray())\n                if (a.equals(s.toCharArray())) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void bothMethodCalls() {\n                String s1 = \"hello\";\n                String s2 = \"world\";\n\n                // BUG: Diagnostic contains: Arrays.equals(s1.toCharArray(), s2.toCharArray())\n                if (s1.toCharArray().equals(s2.toCharArray())) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n            }\\"
    },
    {
      "description": "java7PositiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        126
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import java.util.Objects;\n\n            /**\n             * Tests that only run with Java 7 and above.\n             *\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class ArrayEqualsPositiveCases2 {\n\n              public void intArray() {\n                int[] a = {1, 2, 3};\n                int[] b = {1, 2, 3};\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (Objects.equals(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void objectArray() {\n                Object[] a = new Object[3];\n                Object[] b = new Object[3];\n\n                // BUG: Diagnostic contains: Arrays.equals(a, b)\n                if (Objects.equals(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n            }\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        171
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import com.google.common.base.Objects;\n\n            /**\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class ArrayEqualsNegativeCases {\n              public void neitherArray() {\n                Object a = new Object();\n                Object b = new Object();\n\n                if (a.equals(b)) {\n                  System.out.println(\"Objects are equal!\");\n                } else {\n                  System.out.println(\"Objects are not equal!\");\n                }\n\n                if (Objects.equal(a, b)) {\n                  System.out.println(\"Objects are equal!\");\n                } else {\n                  System.out.println(\"Objects are not equal!\");\n                }\n              }\n\n              public void firstArray() {\n                Object[] a = new Object[3];\n                Object b = new Object();\n\n                if (a.equals(b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n\n                if (Objects.equal(a, b)) {\n                  System.out.println(\"Objects are equal!\");\n                } else {\n                  System.out.println(\"Objects are not equal!\");\n                }\n              }\n\n              public void secondArray() {\n                Object a = new Object();\n                Object[] b = new Object[3];\n\n                if (a.equals(b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n\n                if (Objects.equal(a, b)) {\n                  System.out.println(\"Objects are equal!\");\n                } else {\n                  System.out.println(\"Objects are not equal!\");\n                }\n              }\n            }\\"
    },
    {
      "description": "java7NegativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        240
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import java.util.Objects;\n\n            /**\n             * Tests that only run with Java 7 and above.\n             *\n             * @author eaftan@google.com (Eddie Aftandilian)\n             */\n            public class ArrayEqualsNegativeCases2 {\n              public void neitherArray() {\n                Object a = new Object();\n                Object b = new Object();\n\n                if (Objects.equals(a, b)) {\n                  System.out.println(\"Objects are equal!\");\n                } else {\n                  System.out.println(\"Objects are not equal!\");\n                }\n              }\n\n              public void firstArray() {\n                Object[] a = new Object[3];\n                Object b = new Object();\n\n                if (Objects.equals(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n\n              public void secondArray() {\n                Object a = new Object();\n                Object[] b = new Object[3];\n\n                if (Objects.equals(a, b)) {\n                  System.out.println(\"arrays are equal!\");\n                } else {\n                  System.out.println(\"arrays are not equal!\");\n                }\n              }\n            }\\"
    }
  ]
}