{
  "name": "InvalidZoneId",
  "language": "java",
  "description": "Invalid zone identifier. ZoneId.of(String) will throw exception at runtime.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 66,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "package a;\n\n            import java.time.ZoneId;\n\n            class A {\n              private static final String TIMEZONE_ID = \"unknown\";\n\n              public static void test() {\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"unknown\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(TIMEZONE_ID);\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"America/Los_Angele\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"America/Los Angeles\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"KST\");\n              }\n\n              public static void invalidCustomIDs() {\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"GMT+24\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"GMT1\");\n                // BUG: Diagnostic contains:\n                ZoneId.of(\"GMT/0\");\n              }\n            }"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        74
      ],
      "code": "package a;\n\n            import java.time.ZoneId;\n\n            class A {\n              private static final String TIMEZONE_ID = \"America/New_York\";\n\n              public static void ianaIDs() {\n                ZoneId.of(\"America/Los_Angeles\");\n                ZoneId.of(TIMEZONE_ID);\n                ZoneId.of(\"Europe/London\");\n              }\n\n              public static void customIDs() {\n                // Custom IDs\n                ZoneId.of(\"GMT+0\");\n                ZoneId.of(\"GMT+00\");\n                ZoneId.of(\"GMT+00:00\");\n                ZoneId.of(\"GMT+00:00:00\");\n              }\n\n              public static void twoLetterIDs() {\n                ZoneId.of(\"UT\");\n              }\n\n              public static void threeLetterIDs() {\n                ZoneId.of(\"GMT\");\n                ZoneId.of(\"UTC\");\n              }\n            }"
    }
  ]
}