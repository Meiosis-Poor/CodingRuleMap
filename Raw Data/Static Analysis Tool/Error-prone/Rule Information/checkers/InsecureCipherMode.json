{
  "name": "InsecureCipherMode",
  "language": "java",
  "description": "A standard cryptographic operation is used in a mode that is prone to vulnerabilities",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 106,
  "branches": 16,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        32
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\nimport java.security.KeyFactory;\nimport java.security.KeyPairGenerator;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.NoSuchProviderException;\nimport javax.crypto.Cipher;\nimport javax.crypto.KeyAgreement;\nimport javax.crypto.NoSuchPaddingException;\n\n/**\n * @author avenet@google.com (Arnaud J. Venet)\n */\npublic class InsecureCipherModePositiveCases {\n  static Cipher defaultAesCipher;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: the mode and padding must be explicitly specified\n      defaultAesCipher = Cipher.getInstance(\"AES\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher defaultRsaCipher;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: the mode and padding must be explicitly specified\n      defaultRsaCipher = Cipher.getInstance(\"RSA\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static final String AES_STRING = \"AES\";\n  static Cipher defaultAesCipherWithConstantString;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: the mode and padding must be explicitly specified\n      defaultAesCipherWithConstantString = Cipher.getInstance(AES_STRING);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher explicitAesCipher;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: ECB mode must not be used\n      explicitAesCipher = Cipher.getInstance(\"AES/ECB/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher explicitDesCipher;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: ECB mode must not be used\n      explicitDesCipher = Cipher.getInstance(\"DES/ECB/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher explicitDesCipherWithProvider;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: ECB mode must not be used\n      explicitDesCipherWithProvider = Cipher.getInstance(\"DES/ECB/NoPadding\", \"My Provider\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchProviderException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static String transformation;\n\n  static {\n    try {\n      transformation = \"DES/CBC/NoPadding\";\n      // BUG: Diagnostic contains: the transformation is not a compile-time constant\n      Cipher cipher = Cipher.getInstance(transformation);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static void transformationAsParameter(String transformation) {\n    try {\n      // BUG: Diagnostic contains: the transformation is not a compile-time constant\n      Cipher cipher = Cipher.getInstance(transformation);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  class CipherWrapper {\n    Cipher cipher;\n\n    // Make sure that the checker is enabled inside constructors.\n    public CipherWrapper() {\n      try {\n        // BUG: Diagnostic contains: the mode and padding must be explicitly specified\n        cipher = Cipher.getInstance(\"AES\");\n      } catch (NoSuchAlgorithmException e) {\n        // We don't handle any exception as this code is not meant to be executed.\n      } catch (NoSuchPaddingException e) {\n        // We don't handle any exception as this code is not meant to be executed.\n      }\n    }\n  }\n\n  static Cipher complexCipher1;\n\n  static {\n    try {\n      String algorithm = \"AES\";\n      // BUG: Diagnostic contains: the transformation is not a compile-time constant\n      complexCipher1 = Cipher.getInstance(algorithm);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher complexCipher2;\n\n  static {\n    try {\n      String transformation = \"AES\";\n      transformation += \"/ECB\";\n      transformation += \"/NoPadding\";\n      // BUG: Diagnostic contains: the transformation is not a compile-time constant\n      complexCipher2 = Cipher.getInstance(transformation);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher IesCipher;\n\n  static {\n    try {\n      // BUG: Diagnostic contains: the mode and padding must be explicitly specified\n      IesCipher = Cipher.getInstance(\"ECIES\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIES/DHAES/NoPadding\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIESWITHAES/NONE/PKCS5Padding\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"DHIESWITHAES/DHAES/PKCS7Padding\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIESWITHDESEDE/NONE/NOPADDING\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"DHIESWITHDESEDE/DHAES/PKCS5PADDING\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIESWITHAES/CBC/PKCS7PADDING\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIESWITHAES-CBC/NONE/PKCS5PADDING\");\n      // BUG: Diagnostic contains: IES\n      IesCipher = Cipher.getInstance(\"ECIESwithDESEDE-CBC/DHAES/NOPADDING\");\n\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  interface StringProvider {\n    String get();\n  }\n\n  public void keyOperations(StringProvider provider) {\n    KeyFactory keyFactory;\n    KeyAgreement keyAgreement;\n    KeyPairGenerator keyPairGenerator;\n    final String dh = \"DH\";\n    try {\n      // BUG: Diagnostic contains: compile-time constant\n      keyFactory = KeyFactory.getInstance(provider.get());\n      // BUG: Diagnostic contains: Diffie-Hellman on prime fields\n      keyFactory = KeyFactory.getInstance(dh);\n      // BUG: Diagnostic contains: DSA\n      keyAgreement = KeyAgreement.getInstance(\"DSA\");\n      // BUG: Diagnostic contains: compile-time constant\n      keyAgreement = KeyAgreement.getInstance(provider.get());\n      // BUG: Diagnostic contains: Diffie-Hellman on prime fields\n      keyPairGenerator = KeyPairGenerator.getInstance(dh);\n      // BUG: Diagnostic contains: compile-time constant\n      keyPairGenerator = KeyPairGenerator.getInstance(provider.get());\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n}\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        265
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\nimport java.security.KeyFactory;\nimport java.security.KeyPairGenerator;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.NoSuchProviderException;\nimport javax.crypto.Cipher;\nimport javax.crypto.KeyAgreement;\nimport javax.crypto.NoSuchPaddingException;\n\n/**\n * @author avenet@google.com (Arnaud J. Venet)\n */\npublic class InsecureCipherModeNegativeCases {\n  static Cipher aesCipher;\n\n  static {\n    // We don't handle any exception as this code is not meant to be executed.\n    try {\n      aesCipher = Cipher.getInstance(\"AES/CBC/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static final String AES_STRING = \"AES/CBC/NoPadding\";\n  static Cipher aesCipherWithConstantString;\n\n  static {\n    try {\n      aesCipherWithConstantString = Cipher.getInstance(AES_STRING);\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher aesCipherWithProvider;\n\n  static {\n    try {\n      aesCipherWithProvider = Cipher.getInstance(\"AES/CBC/NoPadding\", \"My Provider\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchProviderException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher arc4CipherConscrypt;\n\n  static {\n    try {\n      arc4CipherConscrypt = Cipher.getInstance(\"ARC4\", \"Conscrypt\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchProviderException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher rc4CipherJsch;\n\n  static {\n    try {\n      rc4CipherJsch = Cipher.getInstance(\"RC4\", \"JSch\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchProviderException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher arcfourCipherSunJce;\n\n  static {\n    try {\n      arcfourCipherSunJce = Cipher.getInstance(\"ARCFOUR/ECB/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher desCipher;\n\n  static {\n    try {\n      desCipher = Cipher.getInstance(\"DES/CBC/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher rsaCipher;\n\n  static {\n    try {\n      rsaCipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  static Cipher aesWrapCipher;\n\n  static {\n    try {\n      aesWrapCipher = Cipher.getInstance(\"AESWrap/ECB/NoPadding\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    } catch (NoSuchPaddingException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n\n  public void ellipticCurveDiffieHellman() {\n    KeyFactory keyFactory;\n    KeyAgreement keyAgreement;\n    KeyPairGenerator keyPairGenerator;\n    final String ecdh = \"ECDH\";\n    try {\n      keyFactory = KeyFactory.getInstance(ecdh);\n      keyAgreement = KeyAgreement.getInstance(\"ECDH\");\n      keyPairGenerator = KeyPairGenerator.getInstance(\"EC\" + \"DH\");\n    } catch (NoSuchAlgorithmException e) {\n      // We don't handle any exception as this code is not meant to be executed.\n    }\n  }\n}\\"
    }
  ]
}