{
  "name": "EqualsHashCode",
  "language": "java",
  "description": "Classes that override equals should also override hashCode.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 101,
  "branches": 10,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "public class EqualsHashCodeTestPositiveCases {\n\n  public static class EqualsOnly {\n    // BUG: Diagnostic contains: Classes that override equals should also override hashCode\n    public boolean equals(Object o) {\n      return false;\n    }\n  }\n}\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        50
      ],
      "code": "public class EqualsHashCodeTestNegativeCases {\n\n              public static class EqualsAndHashCode {\n                public boolean equals(Object o) {\n                  return false;\n                }\n\n                public int hashCode() {\n                  return 42;\n                }\n              }\n\n              public static class HashCodeOnly {\n                public int hashCode() {\n                  return 42;\n                }\n              }\n\n              public static class Neither {}\n            }\\"
    },
    {
      "description": "superClassWithoutHashCode",
      "expected-problems": null,
      "expected-linenumbers": [
        80
      ],
      "code": "class Test extends Super {\n              // BUG: Diagnostic contains:\n              public boolean equals(Object o) {\n                return false;\n              }\n            }"
    },
    {
      "description": "inherited",
      "expected-problems": null,
      "expected-linenumbers": [
        97
      ],
      "code": "class Super {\n              public int hashCode() {\n                return 42;\n              }\n            }\n            \n\n            class Test extends Super {\n              public boolean equals(Object o) {\n                return false;\n              }\n            }"
    },
    {
      "description": "interfaceEquals",
      "expected-problems": null,
      "expected-linenumbers": [
        121
      ],
      "code": "interface I {\n              boolean equals(Object o);\n            }"
    },
    {
      "description": "abstractHashCode",
      "expected-problems": null,
      "expected-linenumbers": [
        134
      ],
      "code": "abstract class Super {\n              public abstract boolean equals(Object o);\n\n              public abstract int hashCode();\n            }"
    },
    {
      "description": "abstractNoHashCode",
      "expected-problems": null,
      "expected-linenumbers": [
        149
      ],
      "code": "abstract class Super {\n              // BUG: Diagnostic contains:\n              public abstract boolean equals(Object o);\n            }"
    },
    {
      "description": "suppressOnEquals",
      "expected-problems": null,
      "expected-linenumbers": [
        163
      ],
      "code": "class Test {\n              @SuppressWarnings(\"EqualsHashCode\")\n              public boolean equals(Object o) {\n                return false;\n              }\n            }"
    },
    {
      "description": "nopEquals",
      "expected-problems": null,
      "expected-linenumbers": [
        179
      ],
      "code": "class Test {\n              public boolean equals(Object o) {\n                return super.equals(o);\n              }\n            }"
    },
    {
      "description": "nopEqualsWithNullable",
      "expected-problems": null,
      "expected-linenumbers": [
        194
      ],
      "code": "import javax.annotation.Nullable;\n\n            class Test {\n              public boolean equals(@Nullable Object o) {\n                return super.equals(o);\n              }\n            }"
    }
  ]
}