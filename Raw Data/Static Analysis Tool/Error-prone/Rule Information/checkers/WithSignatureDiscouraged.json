{
  "name": "WithSignatureDiscouraged",
  "language": "java",
  "description": "withSignature is discouraged. Prefer .named and/or .withParameters where possible.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 106,
  "branches": 12,
  "apis": 1,
  "test": [
    {
      "description": "named",
      "expected-problems": null,
      "expected-linenumbers": [
        32
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  instanceMethod().anyClass().withSignature(\"toString\");\n            }\n            \n\n            import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  instanceMethod().anyClass().named(\"toString\");\n            }"
    },
    {
      "description": "withEmptyParameterList",
      "expected-problems": null,
      "expected-linenumbers": [
        62
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  instanceMethod().anyClass().withSignature(\"toString()\");\n            }\n            \n\n            import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  instanceMethod().anyClass().named(\"toString\").withNoParameters();\n            }"
    },
    {
      "description": "withParameters",
      "expected-problems": null,
      "expected-linenumbers": [
        92
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> VALUE_OF =\n                  instanceMethod().anyClass().withSignature(\"valueOf(double)\");\n            }\n            \n\n            import static com.google.errorprone.matchers.Matchers.instanceMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> VALUE_OF =\n                  instanceMethod().anyClass().named(\"valueOf\").withParameters(\"double\");\n            }"
    },
    {
      "description": "leaveVarargs",
      "expected-problems": null,
      "expected-linenumbers": [
        122
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.staticMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> STRING_FORMAT =\n                  staticMethod()\n                      .onClass(\"java.lang.String\")\n                      .withSignature(\"format(java.lang.String,java.lang.Object...)\");\n            }"
    },
    {
      "description": "leaveGenerics",
      "expected-problems": null,
      "expected-linenumbers": [
        143
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.staticMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  staticMethod()\n                      .onClass(\"com.google.common.collect.ImmutableList\")\n                      .withSignature(\"<E>builder()\");\n            }"
    },
    {
      "description": "dontMigrateArrays",
      "expected-problems": null,
      "expected-linenumbers": [
        164
      ],
      "code": "import static com.google.errorprone.matchers.Matchers.staticMethod;\n            import com.google.errorprone.matchers.Matcher;\n            import com.sun.source.tree.ExpressionTree;\n\n            public class Test {\n              private static final Matcher<ExpressionTree> TO_STRING =\n                  staticMethod().onClass(\"java.lang.String\").withSignature(\"copyValueOf(char[])\");\n            }"
    }
  ]
}