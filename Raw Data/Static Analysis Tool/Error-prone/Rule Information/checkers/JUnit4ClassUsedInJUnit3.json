{
  "name": "JUnit4ClassUsedInJUnit3",
  "language": "java",
  "description": "Some JUnit4 construct cannot be used in a JUnit3 context. Convert your class to JUnit4 style to use them.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 81,
  "branches": 5,
  "apis": 1,
  "test": [
    {
      "description": "negative_regular_junit3",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "import junit.framework.TestCase;\n\n            public class Foo extends TestCase {\n              public void testName1() {\n                System.out.println(\"here\");\n              }\n\n              public void testName2() {}\n            }"
    },
    {
      "description": "negative_assume_in_junit4",
      "expected-problems": null,
      "expected-linenumbers": [
        52
      ],
      "code": "import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n            import org.junit.Assume;\n            import org.junit.Test;\n\n            @RunWith(JUnit4.class)\n            public class Foo {\n              @Test\n              public void testOne() {\n                Assume.assumeTrue(true);\n              }\n            }"
    },
    {
      "description": "testOne",
      "expected-problems": null,
      "expected-linenumbers": [
        65
      ],
      "code": ""
    },
    {
      "description": "negative_annotation_in_junit4",
      "expected-problems": null,
      "expected-linenumbers": [
        74
      ],
      "code": "import org.junit.runner.RunWith;\n            import org.junit.runners.JUnit4;\n            import org.junit.Rule;\n            import org.junit.rules.TemporaryFolder;\n            import org.junit.Test;\n            import org.junit.Ignore;\n\n            @RunWith(JUnit4.class)\n            public class Foo {\n              @Rule public TemporaryFolder folder = new TemporaryFolder();\n\n              @Ignore\n              @Test\n              public void testOne() {}\n\n              @Test\n              public void testTwo() {}\n            }"
    },
    {
      "description": "testOne",
      "expected-problems": null,
      "expected-linenumbers": [
        92
      ],
      "code": ""
    },
    {
      "description": "testTwo",
      "expected-problems": null,
      "expected-linenumbers": [
        95
      ],
      "code": ""
    },
    {
      "description": "positive_assume_in_test",
      "expected-problems": null,
      "expected-linenumbers": [
        102
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Test;\n            import org.junit.Assume;\n\n            public class Foo extends TestCase {\n              public void testName1() {\n                System.out.println(\"here\");\n              }\n\n              public void testName2() {\n                // BUG: Diagnostic contains: Assume\n                Assume.assumeTrue(true);\n              }\n\n              public void testName3() {}\n            }"
    },
    {
      "description": "positive_assume_in_setUp",
      "expected-problems": null,
      "expected-linenumbers": [
        128
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Test;\n            import org.junit.Assume;\n\n            public class Foo extends TestCase {\n              @Override\n              public void setUp() {\n                // BUG: Diagnostic contains: Assume\n                Assume.assumeTrue(true);\n              }\n\n              public void testName1() {}\n            }"
    },
    {
      "description": "positive_assume_in_tear_down",
      "expected-problems": null,
      "expected-linenumbers": [
        151
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Test;\n            import org.junit.Assume;\n\n            public class Foo extends TestCase {\n              @Override\n              public void tearDown() {\n                // BUG: Diagnostic contains: Assume\n                Assume.assumeTrue(true);\n              }\n\n              public void testName1() {}\n            }"
    },
    {
      "description": "positive_static_assume_in_test",
      "expected-problems": null,
      "expected-linenumbers": [
        174
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Test;\n            import static org.junit.Assume.assumeTrue;\n\n            public class Foo extends TestCase {\n              public void testName1() {\n                System.out.println(\"here\");\n              }\n\n              public void testName2() {\n                // BUG: Diagnostic contains: Assume\n                assumeTrue(true);\n              }\n\n              public void testName3() {}\n            }"
    },
    {
      "description": "positive_ignore_on_test",
      "expected-problems": null,
      "expected-linenumbers": [
        200
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Ignore;\n\n            public class Foo extends TestCase {\n              public void testName1() {}\n\n              // BUG: Diagnostic contains: @Ignore\n              @Ignore\n              public void testName2() {}\n            }"
    },
    {
      "description": "positive_ignore_on_class",
      "expected-problems": null,
      "expected-linenumbers": [
        220
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Ignore;\n\n            // BUG: Diagnostic contains: @Ignore\n            @Ignore\n            public class Foo extends TestCase {\n              public void testName1() {}\n\n              public void testName2() {}\n            }"
    },
    {
      "description": "positive_rule_in_junit3",
      "expected-problems": null,
      "expected-linenumbers": [
        240
      ],
      "code": "import junit.framework.TestCase;\n            import org.junit.Rule;\n            import org.junit.rules.TemporaryFolder;\n\n            public class Foo extends TestCase {\n              // BUG: Diagnostic contains: @Rule\n              @Rule public TemporaryFolder folder = new TemporaryFolder();\n\n              public void testName1() {}\n\n              public void testName2() {}\n            }"
    }
  ]
}