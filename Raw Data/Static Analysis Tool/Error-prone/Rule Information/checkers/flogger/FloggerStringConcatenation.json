{
  "name": "FloggerStringConcatenation",
  "language": "java",
  "description": "Prefer string formatting using printf placeholders (e.g. %s) instead of string concatenation",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 107,
  "branches": 11,
  "apis": 2,
  "test": [
    {
      "description": "fix",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n              private static final String CONSTANT = \"constant\";\n\n              public void method(String world, int i, long l, float f, double d, boolean b) {\n                logger.atInfo().log(\"hello \" + world + i + l + f + (d + \"\" + b) + CONSTANT);\n              }\n            }\n            \n\n            import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n              private static final String CONSTANT = \"constant\";\n\n              public void method(String world, int i, long l, float f, double d, boolean b) {\n                logger.atInfo().log(\"hello %s%d%d%g%g%s%s\", world, i, l, f, d, b, CONSTANT);\n              }\n            }"
    },
    {
      "description": "constant",
      "expected-problems": null,
      "expected-linenumbers": [
        65
      ],
      "code": "import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n              private static final String CONSTANT = \"constant\";\n\n              public void method() {\n                logger.atInfo().log(CONSTANT + \"hello\");\n              }\n            }"
    },
    {
      "description": "minus",
      "expected-problems": null,
      "expected-linenumbers": [
        85
      ],
      "code": "import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(String world, int i) {\n                logger.atInfo().log(\"hello \" + world + \" \" + (i - 1));\n              }\n            }\n            \n\n            import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(String world, int i) {\n                logger.atInfo().log(\"hello %s %d\", world, i - 1);\n              }\n            }"
    },
    {
      "description": "numericOps",
      "expected-problems": null,
      "expected-linenumbers": [
        117
      ],
      "code": "import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(int x, int y) {\n                logger.atInfo().log(x + y + \" sum; mean \" + (x + y) / 2);\n              }\n            }\n            \n\n            import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(int x, int y) {\n                logger.atInfo().log(\"%d sum; mean %d\", x + y, (x + y) / 2);\n              }\n            }"
    },
    {
      "description": "multipleArguments",
      "expected-problems": null,
      "expected-linenumbers": [
        149
      ],
      "code": "import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(String hello, String world) {\n                logger.atInfo().log(\"message is %s \" + hello, world);\n              }\n            }\n            \n\n            import com.google.common.flogger.FluentLogger;\n\n            class Test {\n              private static final FluentLogger logger = FluentLogger.forEnclosingClass();\n\n              public void method(String hello, String world) {\n                logger.atInfo().log(\"message is %s %s\", hello, world);\n              }\n            }"
    }
  ]
}