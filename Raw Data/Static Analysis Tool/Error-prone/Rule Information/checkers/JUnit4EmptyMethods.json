{
  "name": "JUnit4EmptyMethods",
  "language": "java",
  "description": "Empty JUnit4 @Before, @After, @BeforeClass, and @AfterClass methods are unnecessary and should be deleted.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 64,
  "branches": 5,
  "apis": 1,
  "test": [
    {
      "description": "emptyMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import org.junit.After;\n            import org.junit.AfterClass;\n            import org.junit.Before;\n            import org.junit.BeforeClass;\n            import org.junit.Test;\n\n            class FooTest {\n              @Before\n              public void setUp() {}\n\n              @BeforeClass\n              public void setUpClass() {}\n\n              @After\n              public void after() {}\n\n              @AfterClass\n              public void afterClass() {}\n\n              @Test\n              public void emptyTest() {}\n            }\n            \n\n            import org.junit.After;\n            import org.junit.AfterClass;\n            import org.junit.Before;\n            import org.junit.BeforeClass;\n            import org.junit.Test;\n\n            class FooTest {\n              @Test\n              public void emptyTest() {}\n            }"
    },
    {
      "description": "emptyTest",
      "expected-problems": null,
      "expected-linenumbers": [
        56
      ],
      "code": ""
    },
    {
      "description": "emptyTest",
      "expected-problems": null,
      "expected-linenumbers": [
        70
      ],
      "code": ""
    },
    {
      "description": "emptyMethodsWithComments",
      "expected-problems": null,
      "expected-linenumbers": [
        77
      ],
      "code": "import org.junit.After;\n            import org.junit.AfterClass;\n            import org.junit.Before;\n            import org.junit.BeforeClass;\n            import org.junit.Test;\n\n            class FooTest {\n              @Before\n              public void setUp() {\n                // comments are ignored\n              }\n\n              @BeforeClass\n              public void setUpClass() {\n                // comments are ignored\n              }\n\n              @After\n              public void after() {\n                // comments are ignored\n              }\n\n              @AfterClass\n              public void afterClass() {\n                // comments are ignored\n              }\n\n              @Test\n              public void emptyTest() {\n                // comments are ignored\n              }\n            }"
    },
    {
      "description": "emptyTest",
      "expected-problems": null,
      "expected-linenumbers": [
        110
      ],
      "code": ""
    },
    {
      "description": "nonEmptyMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        120
      ],
      "code": "import static org.junit.Assert.assertEquals;\n\n            import org.junit.After;\n            import org.junit.AfterClass;\n            import org.junit.Before;\n            import org.junit.BeforeClass;\n            import org.junit.Test;\n\n            class FooTest {\n              @Before\n              public void setUp() {\n                System.out.println(\"setUp()\");\n              }\n\n              @BeforeClass\n              public void setUpClass() {\n                System.out.println(\"setUpClass()\");\n              }\n\n              @After\n              public void after() {\n                System.out.println(\"after()\");\n              }\n\n              @AfterClass\n              public void afterClass() {\n                System.out.println(\"afterClass()\");\n              }\n\n              @Test\n              public void nonEmptyTest() {\n                assertEquals(1, 1);\n              }\n            }"
    },
    {
      "description": "nonEmptyTest",
      "expected-problems": null,
      "expected-linenumbers": [
        155
      ],
      "code": ""
    },
    {
      "description": "abstractMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        165
      ],
      "code": "import org.junit.After;\n            import org.junit.AfterClass;\n            import org.junit.Before;\n            import org.junit.BeforeClass;\n            import org.junit.Test;\n\n            abstract class FooTest {\n              @Before\n              public abstract void setUp();\n\n              @BeforeClass\n              public abstract void setUpClass();\n\n              @After\n              public abstract void after();\n\n              @AfterClass\n              public abstract void afterClass();\n\n              @Test\n              public abstract void emptyTest();\n            }"
    },
    {
      "description": "overriddenMethod",
      "expected-problems": null,
      "expected-linenumbers": [
        198
      ],
      "code": "class FooBase {\n              public void setUp() {\n                System.out.println(\"parent setUp()\");\n              }\n            }\n            \n\n            import org.junit.Before;\n\n            class FooTest extends FooBase {\n              @Before\n              public void setUp() {\n                // don't delete this because it's an override!\n              }\n            }"
    },
    {
      "description": "overriddenMethod",
      "expected-problems": null,
      "expected-linenumbers": [
        198
      ],
      "code": "class FooBase {\n              public void setUp() {\n                System.out.println(\"parent setUp()\");\n              }\n            }\n            \n\n            import org.junit.Before;\n\n            class FooTest extends FooBase {\n              @Before\n              public void setUp() {\n                // don't delete this because it's an override!\n              }\n            }"
    }
  ]
}