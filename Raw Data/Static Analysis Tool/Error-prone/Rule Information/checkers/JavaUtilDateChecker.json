{
  "name": "JavaUtilDateChecker",
  "language": "java",
  "description": "Date has a bad API that leads to bugs; prefer java.time.Instant or LocalDate.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 67,
  "branches": 4,
  "apis": 1,
  "test": [
    {
      "description": "javaUtilDate_constructors",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import java.util.Date;\n\n            class Test {\n              // BUG: Diagnostic contains: Date has a bad API\n              private static final Date date1 = new Date();\n              // BUG: Diagnostic contains: Date has a bad API\n              private static final Date date2 = new Date(123456789L);\n            }"
    },
    {
      "description": "javaUtilDate_staticMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        49
      ],
      "code": "import java.util.Date;\n\n            class Test {\n              // BUG: Diagnostic contains: Date has a bad API\n              private static final long date = Date.parse(\"Sat, 12 Aug 1995 13:30:00 GMT\");\n            }"
    },
    {
      "description": "javaUtilDate_instanceMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        65
      ],
      "code": "import java.util.Date;\n\n            class Test {\n              public void doSomething(Date date) {\n                // BUG: Diagnostic contains: Date has a bad API\n                long time = date.getTime();\n              }\n            }"
    },
    {
      "description": "javaUtilDate_allowedApis",
      "expected-problems": null,
      "expected-linenumbers": [
        83
      ],
      "code": "import java.time.Instant;\n            import java.util.Date;\n\n            class Test {\n              public void doSomething(Date date) {\n                Instant instant = date.toInstant();\n                Date date2 = Date.from(instant);\n              }\n            }"
    }
  ]
}