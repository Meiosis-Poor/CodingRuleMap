{
  "name": "OptionalMapToOptional",
  "language": "java",
  "description": "Mapping to another Optional will yield a nested Optional. Did you mean flatMap?",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 87,
  "branches": 7,
  "apis": 2,
  "test": [
    {
      "description": "positiveWithJavaOptional",
      "expected-problems": null,
      "expected-linenumbers": [
        28
      ],
      "code": "import java.util.Optional;\n\n            class Test {\n              public boolean test(Optional<Integer> optional) {\n                // BUG: Diagnostic contains:\n                return optional.map(i -> Optional.of(1)).isPresent();\n              }\n            }"
    },
    {
      "description": "positiveWithGuavaOptional",
      "expected-problems": null,
      "expected-linenumbers": [
        46
      ],
      "code": "import com.google.common.base.Optional;\n\n            class Test {\n              public boolean test(Optional<Integer> optional) {\n                // BUG: Diagnostic contains:\n                return optional.transform(i -> Optional.of(1)).isPresent();\n              }\n            }"
    },
    {
      "description": "positiveReturned",
      "expected-problems": null,
      "expected-linenumbers": [
        64
      ],
      "code": "import com.google.common.base.Optional;\n\n            class Test {\n              public Optional<Optional<Integer>> test(Optional<Integer> optional) {\n                // BUG: Diagnostic contains:\n                return optional.transform(i -> Optional.of(1));\n              }\n            }"
    },
    {
      "description": "negativeFlatMap",
      "expected-problems": null,
      "expected-linenumbers": [
        82
      ],
      "code": "import java.util.Optional;\n\n            class Test {\n              public Optional<Integer> test(Optional<Integer> optional) {\n                return optional.flatMap(i -> Optional.of(1));\n              }\n            }"
    },
    {
      "description": "negativeNotToOptional",
      "expected-problems": null,
      "expected-linenumbers": [
        99
      ],
      "code": "import java.util.Optional;\n\n            class Test {\n              public Optional<Integer> test(Optional<Integer> optional) {\n                return optional.map(i -> 1);\n              }\n            }"
    },
    {
      "description": "rawOptional",
      "expected-problems": null,
      "expected-linenumbers": [
        116
      ],
      "code": "import java.util.Optional;\n\n            class Test {\n              public Optional<Integer> test(Optional optional) {\n                return optional.map(i -> 1);\n              }\n            }"
    }
  ]
}