{
  "name": "AssistedInjectAndInjectOnSameConstructor",
  "language": "java",
  "description": "@AssistedInject and @Inject cannot be used on the same constructor.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 65,
  "branches": 3,
  "apis": 1,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "package com.google.errorprone.bugpatterns.inject.testdata;\n\nimport com.google.inject.assistedinject.AssistedInject;\n\n/**\n * @author sgoldfeder@google.com (Steven Goldfeder)\n */\npublic class AssistedInjectAndInjectOnSameConstructorPositiveCases {\n  /** Class has a constructor annotated with @javax.inject.Inject and @AssistedInject. */\n  public class TestClass1 {\n    // BUG: Diagnostic contains: remove\n    @javax.inject.Inject\n    // BUG: Diagnostic contains: remove\n    @AssistedInject\n    public TestClass1() {}\n  }\n\n  /** Class has a constructor annotated with @com.google.inject.Inject and @AssistedInject. */\n  public class TestClass2 {\n    // BUG: Diagnostic contains: remove\n    @com.google.inject.Inject\n    // BUG: Diagnostic contains: remove\n    @AssistedInject\n    public TestClass2() {}\n  }\n}\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        69
      ],
      "code": "package com.google.errorprone.bugpatterns.inject.testdata;\n\nimport com.google.inject.assistedinject.AssistedInject;\n\n/**\n * @author sgoldfeder@google.com (Steven Goldfeder)\n */\npublic class AssistedInjectAndInjectOnSameConstructorNegativeCases {\n  /** Class has a single constructor with no annotation. */\n  public class TestClass1 {\n    TestClass1() {}\n  }\n\n  /** Class has a constructor with a @javax.inject.Inject annotation. */\n  public class TestClass2 {\n    @javax.inject.Inject\n    public TestClass2() {}\n  }\n\n  /** Class has a constructor with a @com.google.injectInject annotation. */\n  public class TestClass3 {\n    @com.google.inject.Inject\n    public TestClass3() {}\n  }\n\n  /** Class has a constructor annotated with @AssistedInject */\n  public class TestClass4 {\n    @AssistedInject\n    public TestClass4() {}\n  }\n\n  /** Class has one constructor with a @AssistedInject and one with @javax.inject.inject . */\n  public class TestClass5 {\n    @javax.inject.Inject\n    public TestClass5(int n) {}\n\n    @AssistedInject\n    public TestClass5() {}\n  }\n\n  /** Class has one constructor with a @AssistedInject and one with @javax.inject.inject . */\n  public class TestClass6 {\n    @com.google.inject.Inject\n    public TestClass6(int n) {}\n\n    @AssistedInject\n    public TestClass6() {}\n  }\n\n  /**\n   * Class has a constructor annotated with @javax.inject.Inject and @AssistedInject. Error is\n   * suppressed.\n   */\n  @SuppressWarnings(\"AssistedInjectAndInjectOnSameConstructor\")\n  public class TestClass7 {\n    @javax.inject.Inject\n    @AssistedInject\n    public TestClass7() {}\n  }\n\n  /**\n   * Class has a constructor annotated with @com.google.inject.Inject and @AssistedInject. Error is\n   * suppressed.\n   */\n  @SuppressWarnings(\"AssistedInjectAndInjectOnSameConstructor\")\n  public class TestClass8 {\n    @com.google.inject.Inject\n    @AssistedInject\n    public TestClass8() {}\n  }\n}\\"
    }
  ]
}