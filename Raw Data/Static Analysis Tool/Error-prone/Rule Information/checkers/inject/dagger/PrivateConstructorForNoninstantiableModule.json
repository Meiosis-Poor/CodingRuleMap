{
  "name": "PrivateConstructorForNoninstantiableModule",
  "language": "java",
  "description": "Add a private constructor to modules that will not be instantiated by Dagger.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 87,
  "branches": 8,
  "apis": 1,
  "test": [
    {
      "description": "emptyModuleGetsLeftAlone",
      "expected-problems": null,
      "expected-linenumbers": [
        32
      ],
      "code": "import dagger.Module;\n\n            @Module\n            class Test {}"
    },
    {
      "description": "onlyStaticMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        47
      ],
      "code": "import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            final class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n            }\n            \n\n            import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            final class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "onlyStaticMethods_withConstructorGetsLeftAlone",
      "expected-problems": null,
      "expected-linenumbers": [
        93
      ],
      "code": "import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            final class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "abstractClassWithStaticAndAbstractMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        121
      ],
      "code": "import dagger.Binds;\n            import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            abstract class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n            }\n            \n\n            import dagger.Binds;\n            import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            abstract class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "abstractClassWithStaticAndAbstractMethods_withConstructorGetsLeftAlone",
      "expected-problems": null,
      "expected-linenumbers": [
        181
      ],
      "code": "import dagger.Binds;\n            import dagger.Module;\n            import dagger.Provides;\n\n            @Module\n            abstract class TestModule {\n              @Provides\n              static String provideString() {\n                return \"\";\n              }\n\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Provides\n              static Integer provideInteger() {\n                return 1;\n              }\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "onlyAbstractMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        216
      ],
      "code": "import dagger.Binds;\n            import dagger.Module;\n\n            @Module\n            abstract class TestModule {\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n            }\n            \n\n            import dagger.Binds;\n            import dagger.Module;\n\n            @Module\n            abstract class TestModule {\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "onlyAbstractMethods_withConstructorGetsLeftAlone",
      "expected-problems": null,
      "expected-linenumbers": [
        254
      ],
      "code": "import dagger.Binds;\n            import dagger.Module;\n\n            @Module\n            abstract class TestModule {\n              @Binds\n              abstract Object bindObject(String string);\n\n              @Binds\n              abstract Number bindNumber(Integer integer);\n\n              private TestModule() {}\n            }"
    },
    {
      "description": "interfaceModuleGetsLeftAlone",
      "expected-problems": null,
      "expected-linenumbers": [
        278
      ],
      "code": "import dagger.Binds;\n            import dagger.Module;\n\n            @Module\n            interface TestModule {\n              @Binds\n              Object bindObject(String string);\n\n              @Binds\n              Number bindNumber(Integer integer);\n            }"
    }
  ]
}