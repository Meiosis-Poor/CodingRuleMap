{
  "name": "AndroidInjectionBeforeSuper",
  "language": "java",
  "description": "AndroidInjection.inject() should always be invoked before calling super.lifecycleMethod()",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 149,
  "branches": 7,
  "apis": 10,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        92
      ],
      "code": "package com.google.errorprone.bugpatterns.inject.dagger.testdata;\n\n            import android.app.Activity;\n            import android.app.Fragment;\n            import android.app.Service;\n            import android.content.Context;\n            import android.content.Intent;\n            import android.os.Bundle;\n            import android.os.IBinder;\n            import dagger.android.AndroidInjection;\n\n            final class AndroidInjectionBeforeSuperPositiveCases {\n              public class WrongOrder extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  super.onCreate(savedInstanceState);\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n              }\n\n              public class StatementsInBetween extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  super.onCreate(savedInstanceState);\n                  System.out.println(\"hello, world\");\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n              }\n\n              public static class BaseActivity extends Activity {}\n\n              public class ExtendsBase extends BaseActivity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  super.onCreate(savedInstanceState);\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n              }\n\n              public class WrongOrderFragmentPreApi23 extends Fragment {\n                @Override\n                public void onAttach(Activity activity) {\n                  super.onAttach(activity);\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n              }\n\n              public class WrongOrderFragment extends Fragment {\n                @Override\n                public void onAttach(Context context) {\n                  super.onAttach(context);\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n              }\n\n              public class WrongOrderService extends Service {\n                @Override\n                public void onCreate() {\n                  super.onCreate();\n                  // BUG: Diagnostic contains: AndroidInjectionBeforeSuper\n                  AndroidInjection.inject(this);\n                }\n\n                @Override\n                public IBinder onBind(Intent intent) {\n                  return null;\n                }\n              }\n            }\\\n            \n\npackage dagger.android;\n\nimport android.app.Activity;\nimport android.app.Fragment;\nimport android.app.Service;\n\n/**\n * Stub class for {@code dagger.android.AndroidInjection}. ErrorProne isn't an Android project and\n * can't depend on an {@code .aar} in Maven, so this is provided as a stub for testing.\n */\npublic final class AndroidInjection {\n  public static void inject(Activity activity) {}\n\n  public static void inject(Fragment fragment) {}\n\n  public static void inject(Service service) {}\n}\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        197
      ],
      "code": "package com.google.errorprone.bugpatterns.inject.dagger.testdata;\n\n            import android.app.Activity;\n            import android.app.Fragment;\n            import android.app.Service;\n            import android.content.Intent;\n            import android.os.Bundle;\n            import android.os.IBinder;\n            import dagger.android.AndroidInjection;\n\n            final class AndroidInjectionBeforeSuperNegativeCases {\n              public class CorrectOrder extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  AndroidInjection.inject(this);\n                  super.onCreate(savedInstanceState);\n                }\n              }\n\n              public class StatementsInBetween extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  AndroidInjection.inject(this);\n                  System.out.println(\"hello, world\");\n                  super.onCreate(savedInstanceState);\n                }\n              }\n\n              public static class BaseActivity extends Activity {}\n\n              public class ExtendsBase extends BaseActivity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  AndroidInjection.inject(this);\n                  super.onCreate(savedInstanceState);\n                }\n              }\n\n              public static class Foo {\n                public void onCreate(Bundle bundle) {}\n              }\n\n              public class FooActivity extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {\n                  new Foo().onCreate(savedInstanceState);\n                  AndroidInjection.inject(this);\n                  super.onCreate(savedInstanceState);\n                }\n              }\n\n              public abstract class ActivityWithAbstractOnCreate extends Activity {\n                @Override\n                public void onCreate(Bundle savedInstanceState) {}\n\n                public abstract void onCreate(Bundle savedInstanceState, boolean bar);\n              }\n\n              public class CorrectOrderFragment extends Fragment {\n                @Override\n                public void onAttach(Activity activity) {\n                  AndroidInjection.inject(this);\n                  super.onAttach(activity);\n                }\n              }\n\n              public class CorrectOrderService extends Service {\n                @Override\n                public void onCreate() {\n                  AndroidInjection.inject(this);\n                  super.onCreate();\n                }\n\n                @Override\n                public IBinder onBind(Intent intent) {\n                  return null;\n                }\n              }\n            }\\\n            \n\npackage dagger.android;\n\nimport android.app.Activity;\nimport android.app.Fragment;\nimport android.app.Service;\n\n/**\n * Stub class for {@code dagger.android.AndroidInjection}. ErrorProne isn't an Android project and\n * can't depend on an {@code .aar} in Maven, so this is provided as a stub for testing.\n */\npublic final class AndroidInjection {\n  public static void inject(Activity activity) {}\n\n  public static void inject(Fragment fragment) {}\n\n  public static void inject(Service service) {}\n}\\"
    }
  ]
}