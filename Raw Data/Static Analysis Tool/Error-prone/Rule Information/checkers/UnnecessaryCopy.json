{
  "name": "UnnecessaryCopy",
  "language": "java",
  "description": "This collection is already immutable (just not ImmutableList/ImmutableMap); copying it is unnecessary.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 139,
  "branches": 13,
  "apis": 4,
  "test": [
    {
      "description": "positiveViaVariable",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                ImmutableList<TestFieldProtoMessage> l = ImmutableList.copyOf(m.getMultiFieldList());\n                return l;\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                List<TestFieldProtoMessage> l = m.getMultiFieldList();\n                return l;\n              }\n            }"
    },
    {
      "description": "positiveViaVariable_usageIsMethodInvocation",
      "expected-problems": null,
      "expected-linenumbers": [
        67
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                ImmutableList<TestFieldProtoMessage> l = ImmutableList.copyOf(m.getMultiFieldList());\n                return l.stream().map(x -> x).collect(ImmutableList.toImmutableList());\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                List<TestFieldProtoMessage> l = m.getMultiFieldList();\n                return l.stream().map(x -> x).collect(ImmutableList.toImmutableList());\n              }\n            }"
    },
    {
      "description": "positiveViaVariable_map",
      "expected-problems": null,
      "expected-linenumbers": [
        103
      ],
      "code": "import com.google.common.collect.ImmutableMap;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.Map;\n\n            class Test {\n              Map<Integer, Integer> f(TestProtoMessage m) {\n                ImmutableMap<Integer, Integer> l = ImmutableMap.copyOf(m.getWeightMap());\n                return l;\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableMap;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.Map;\n\n            class Test {\n              Map<Integer, Integer> f(TestProtoMessage m) {\n                Map<Integer, Integer> l = m.getWeightMap();\n                return l;\n              }\n            }"
    },
    {
      "description": "positiveViaVariable_rawType",
      "expected-problems": null,
      "expected-linenumbers": [
        139
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                ImmutableList l = ImmutableList.copyOf(m.getMultiFieldList());\n                return l;\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              List<TestFieldProtoMessage> f(TestProtoMessage m) {\n                List l = m.getMultiFieldList();\n                return l;\n              }\n            }"
    },
    {
      "description": "positiveUsedDirectly",
      "expected-problems": null,
      "expected-linenumbers": [
        175
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n\n            class Test {\n              void f(TestProtoMessage m) {\n                for (var x : ImmutableList.copyOf(m.getMultiFieldList())) {}\n              }\n            }\n            \n\n            import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n\n            class Test {\n              void f(TestProtoMessage m) {\n                for (var x : m.getMultiFieldList()) {}\n              }\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        207
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              ImmutableList<TestFieldProtoMessage> f(TestProtoMessage m) {\n                ImmutableList<TestFieldProtoMessage> l = ImmutableList.copyOf(m.getMultiFieldList());\n                return l;\n              }\n            }"
    },
    {
      "description": "field_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        229
      ],
      "code": "import com.google.common.collect.ImmutableList;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage;\n            import com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage;\n            import java.util.List;\n\n            class Test {\n              private static final TestProtoMessage PROTO = TestProtoMessage.getDefaultInstance();\n\n              private static final ImmutableList<TestFieldProtoMessage> FIELDS =\n                  ImmutableList.copyOf(PROTO.getMultiFieldList());\n            }"
    }
  ]
}