{
  "name": "NullArgumentForNonNullParameter",
  "language": "java",
  "description": "Null is not permitted for this parameter.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 271,
  "branches": 29,
  "apis": 15,
  "test": [
    {
      "description": "positivePrimitive",
      "expected-problems": null,
      "expected-linenumbers": [
        33
      ],
      "code": "import java.util.Optional;\n\n            class Foo {\n              void consume(int i) {}\n\n              void foo(Optional<Integer> o) {\n                // BUG: Diagnostic contains:\n                consume(o.orElse(null));\n              }\n            }"
    },
    {
      "description": "positiveAnnotatedNonnullAggressive",
      "expected-problems": null,
      "expected-linenumbers": [
        53
      ],
      "code": "import javax.annotation.Nonnull;\n\n            class Foo {\n              void consume(@Nonnull String s) {}\n\n              void foo() {\n                // BUG: Diagnostic contains:\n                consume(null);\n              }\n            }"
    },
    {
      "description": "negativeAnnotatedNonnullConservative",
      "expected-problems": null,
      "expected-linenumbers": [
        73
      ],
      "code": "import javax.annotation.Nonnull;\n\n            class Foo {\n              void consume(@Nonnull String s) {}\n\n              void foo() {\n                consume(null);\n              }\n            }"
    },
    {
      "description": "positiveJavaOptionalOf",
      "expected-problems": null,
      "expected-linenumbers": [
        92
      ],
      "code": "import java.util.Optional;\n\n            class Foo {\n              void foo() {\n                // BUG: Diagnostic contains:\n                Optional.of(null);\n              }\n            }"
    },
    {
      "description": "positiveGuavaOptionalOf",
      "expected-problems": null,
      "expected-linenumbers": [
        110
      ],
      "code": "import com.google.common.base.Optional;\n\n            class Foo {\n              void foo() {\n                // BUG: Diagnostic contains:\n                Optional.of(null);\n              }\n            }"
    },
    {
      "description": "positiveGuavaImmutableSetOf",
      "expected-problems": null,
      "expected-linenumbers": [
        128
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Foo {\n              void foo() {\n                // BUG: Diagnostic contains:\n                ImmutableSet.of(null);\n              }\n            }"
    },
    {
      "description": "positiveGuavaImmutableSetBuilderAdd",
      "expected-problems": null,
      "expected-linenumbers": [
        146
      ],
      "code": ""
    },
    {
      "description": "positiveArgumentCaptorForClass",
      "expected-problems": null,
      "expected-linenumbers": [
        163
      ],
      "code": "import org.mockito.ArgumentCaptor;\n\n            class Foo {\n              void foo() {\n                // BUG: Diagnostic contains:\n                ArgumentCaptor.forClass(null);\n              }\n            }"
    },
    {
      "description": "negativeNullMarkedComGoogleCommonButNullable",
      "expected-problems": null,
      "expected-linenumbers": [
        181
      ],
      "code": "import com.google.common.collect.ImmutableSet;\n\n            class Foo {\n              void foo() {\n                ImmutableSet.of().contains(null);\n              }\n            }"
    },
    {
      "description": "positiveNullMarkedOtherPackageAggressive",
      "expected-problems": null,
      "expected-linenumbers": [
        198
      ],
      "code": "import org.jspecify.annotations.NullMarked;\n\n            @NullMarked\n            class Foo {\n              void consume(String s) {}\n\n              void foo() {\n                // BUG: Diagnostic contains:\n                consume(null);\n              }\n            }"
    },
    {
      "description": "positiveNullMarkedPackageInfo",
      "expected-problems": null,
      "expected-linenumbers": [
        219
      ],
      "code": "@org.jspecify.annotations.NullMarked\n            package p;\n            \n\n            package p;\n\n            class Foo {\n              void consume(String s) {}\n\n              void foo() {\n                // BUG: Diagnostic contains:\n                consume(null);\n              }\n            }"
    },
    {
      "description": "negativeNullMarkedPackageInfoCountermanded",
      "expected-problems": null,
      "expected-linenumbers": [
        245
      ],
      "code": "@org.jspecify.annotations.NullMarked\n            package p;\n            \n\n            package p;\n\n            import org.jspecify.annotations.NullUnmarked;\n\n            @NullUnmarked\n            class Foo {\n              void consume(String s) {}\n\n              void foo() {\n                consume(null);\n              }\n            }"
    },
    {
      "description": "negativeNullMarkedNonComGoogleCommonPackageConservative",
      "expected-problems": null,
      "expected-linenumbers": [
        273
      ],
      "code": "import org.jspecify.annotations.NullMarked;\n\n            @NullMarked\n            class Foo {\n              void consume(String s) {}\n\n              void foo() {\n                consume(null);\n              }\n            }"
    },
    {
      "description": "negativeNullMarkedTypeVariable",
      "expected-problems": null,
      "expected-linenumbers": [
        293
      ],
      "code": "import com.google.common.collect.ConcurrentHashMultiset;\n\n            class Foo {\n              void foo() {\n                ConcurrentHashMultiset.create().add(null);\n              }\n            }"
    },
    {
      "description": "negativePrimitiveButEnclosingClass",
      "expected-problems": null,
      "expected-linenumbers": [
        310
      ],
      "code": ""
    }
  ]
}