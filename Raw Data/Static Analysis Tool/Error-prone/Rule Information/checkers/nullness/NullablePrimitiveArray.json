{
  "name": "NullablePrimitiveArray",
  "language": "java",
  "description": "@Nullable type annotations should not be used for primitive types since they cannot be null",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 146,
  "branches": 16,
  "apis": 1,
  "test": [
    {
      "description": "typeAnnotation",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "import org.checkerframework.checker.nullness.qual.Nullable;\n            import org.checkerframework.checker.nullness.qual.NonNull;\n\n            abstract class Test {\n              @Nullable\n              abstract byte[] f();\n\n              abstract @Nullable byte[] g();\n\n              abstract void h(@Nullable byte[] x);\n\n              abstract void i(@Nullable byte @Nullable [] x);\n\n              abstract void j(@Nullable byte... x);\n\n              abstract void k(@Nullable byte[][][] x);\n\n              abstract void l(@NonNull byte[] x);\n            }\n            \n\n            import org.checkerframework.checker.nullness.qual.Nullable;\n            import org.checkerframework.checker.nullness.qual.NonNull;\n\n            abstract class Test {\n              abstract byte @Nullable [] f();\n\n              abstract byte @Nullable [] g();\n\n              abstract void h(byte @Nullable [] x);\n\n              abstract void i(byte @Nullable [] x);\n\n              abstract void j(byte @Nullable ... x);\n\n              abstract void k(byte @Nullable [][][] x);\n\n              abstract void l(byte @NonNull [] x);\n            }"
    },
    {
      "description": "typeAnnotationWithOtherAnnotation",
      "expected-problems": null,
      "expected-linenumbers": [
        82
      ],
      "code": "import org.checkerframework.checker.nullness.qual.Nullable;\n\n            abstract class Test {\n              @SuppressWarnings(\"SomeOtherChecker\") // unrelated annotation\n              @Nullable\n              abstract byte[] f();\n            }\n            \n\n            import org.checkerframework.checker.nullness.qual.Nullable;\n\n            abstract class Test {\n              @SuppressWarnings(\"SomeOtherChecker\") // unrelated annotation\n              abstract byte @Nullable [] f();\n            }"
    },
    {
      "description": "typeAnnotationWithOtherNullnessAnnotationDoesNotSuggestDoubleAnnotation",
      "expected-problems": null,
      "expected-linenumbers": [
        109
      ],
      "code": "import javax.annotation.CheckForNull;\n            import org.checkerframework.checker.nullness.qual.Nullable;\n\n            abstract class Test {\n              @CheckForNull\n              @Nullable\n              abstract byte[] f();\n            }\n            \n\n            import javax.annotation.CheckForNull;\n            import org.checkerframework.checker.nullness.qual.Nullable;\n\n            abstract class Test {\n              @CheckForNull\n              abstract byte[] f();\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        138
      ],
      "code": "import javax.annotation.Nullable;\n\n            abstract class Test {\n              @Nullable\n              abstract Object[] f();\n\n              abstract @Nullable Object[] g();\n\n              abstract void h(@Nullable Object[] x);\n            }"
    },
    {
      "description": "alreadyAnnotatedForNullness",
      "expected-problems": null,
      "expected-linenumbers": [
        159
      ],
      "code": "import org.checkerframework.checker.nullness.qual.Nullable;\n            import org.checkerframework.checker.nullness.qual.NonNull;\n\n            abstract class Test {\n              abstract void f(@Nullable int @NonNull [] x);\n            }\n            \n\n            import org.checkerframework.checker.nullness.qual.Nullable;\n            import org.checkerframework.checker.nullness.qual.NonNull;\n\n            abstract class Test {\n              abstract void f(int @NonNull [] x);\n            }"
    },
    {
      "description": "declarationAnnotation",
      "expected-problems": null,
      "expected-linenumbers": [
        185
      ],
      "code": "import javax.annotation.Nullable;\n\n            abstract class Test {\n              @Nullable\n              abstract byte[] f();\n\n              abstract @Nullable byte[] g();\n\n              abstract void h(@Nullable byte[] x);\n            }"
    }
  ]
}