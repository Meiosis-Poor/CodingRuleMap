{
  "name": "TruthContainsExactlyElementsInUsage",
  "language": "java",
  "description": "containsExactly is preferred over containsExactlyElementsIn when creating new iterables.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 90,
  "branches": 9,
  "apis": 1,
  "test": [
    {
      "description": "negativeDirectContainsExactlyUsage",
      "expected-problems": null,
      "expected-linenumbers": [
        35
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "negativeVariableContainsExactlyUsage",
      "expected-problems": null,
      "expected-linenumbers": [
        53
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            public class ExampleClassTest {\n              void test() {\n                List<Integer> list = ImmutableList.of(1, 2, 3);\n                assertThat(list).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "negativeVariableTruthContainsExactlyElementsInUsage",
      "expected-problems": null,
      "expected-linenumbers": [
        73
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            public class ExampleClassTest {\n              void test() {\n                List<Integer> list = ImmutableList.of(1, 2, 3);\n                assertThat(list).containsExactlyElementsIn(list);\n              }\n            }"
    },
    {
      "description": "negativeVariableTruthContainsExactlyElementsInUsageWithCopy",
      "expected-problems": null,
      "expected-linenumbers": [
        93
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            public class ExampleClassTest {\n              void test() {\n                List<Integer> list = ImmutableList.of(1, 2, 3);\n                assertThat(list).containsExactlyElementsIn(ImmutableList.copyOf(list));\n              }\n            }"
    },
    {
      "description": "negativeTruthContainsExactlyElementsInUsageWithHashSet",
      "expected-problems": null,
      "expected-linenumbers": [
        113
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Sets;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(Sets.newHashSet(1, 2, 3));\n  }\n}"
    },
    {
      "description": "negativeTruthContainsExactlyElementsInUsageWithImmutableSet",
      "expected-problems": null,
      "expected-linenumbers": [
        132
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(ImmutableSet.of(1, 2, 3));\n  }\n}"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithArrayList",
      "expected-problems": null,
      "expected-linenumbers": [
        151
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\nimport java.util.Arrays;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(Arrays.asList(1, 2, 3));\n  }\n}\n\n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Arrays;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithListOf",
      "expected-problems": null,
      "expected-linenumbers": [
        183
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(List.of(1, 2, 3));\n              }\n            }\n            \n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.List;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithInOrderList",
      "expected-problems": null,
      "expected-linenumbers": [
        215
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Arrays;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3))\n                    .containsExactlyElementsIn(Arrays.asList(1, 2, 3))\n                    .inOrder();\n              }\n            }\n            \n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Arrays;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3).inOrder();\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithStaticallyImportedAsList",
      "expected-problems": null,
      "expected-linenumbers": [
        249
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import static java.util.Arrays.asList;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(asList(1, 2, 3));\n              }\n            }\n            \n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import static java.util.Arrays.asList;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithNewArrayList",
      "expected-problems": null,
      "expected-linenumbers": [
        281
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Lists;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(Lists.newArrayList(1, 2, 3));\n  }\n}\n\n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import com.google.common.collect.Lists;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithSingletonList",
      "expected-problems": null,
      "expected-linenumbers": [
        313
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\nimport java.util.Collections;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1)).containsExactlyElementsIn(Collections.singletonList(1));\n  }\n}\n\n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Collections;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1)).containsExactly(1);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithEmptyList",
      "expected-problems": null,
      "expected-linenumbers": [
        345
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Arrays;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of()).containsExactlyElementsIn(Arrays.asList());\n              }\n            }\n            \n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n            import java.util.Arrays;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of()).containsExactly();\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithImmutableList",
      "expected-problems": null,
      "expected-linenumbers": [
        377
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(ImmutableList.of(1, 2, 3));\n  }\n}\n\n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    },
    {
      "description": "refactoringTruthContainsExactlyElementsInUsageWithArray",
      "expected-problems": null,
      "expected-linenumbers": [
        407
      ],
      "code": "import static com.google.common.truth.Truth.assertThat;\nimport com.google.common.collect.ImmutableList;\n\npublic class ExampleClassTest {\n  void test() {\n    assertThat(ImmutableList.of(1, 2, 3)).containsExactlyElementsIn(new Integer[] {1, 2, 3});\n  }\n}\n\n\n            import static com.google.common.truth.Truth.assertThat;\n            import com.google.common.collect.ImmutableList;\n\n            public class ExampleClassTest {\n              void test() {\n                assertThat(ImmutableList.of(1, 2, 3)).containsExactly(1, 2, 3);\n              }\n            }"
    }
  ]
}