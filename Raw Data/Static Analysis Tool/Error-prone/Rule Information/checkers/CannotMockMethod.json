{
  "name": "CannotMockMethod",
  "language": "java",
  "description": "Mockito cannot mock final or static methods, and can't detect this at runtime",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 70,
  "branches": 6,
  "apis": 1,
  "test": [
    {
      "description": "whenCall_flagged",
      "expected-problems": null,
      "expected-linenumbers": [
        29
      ],
      "code": "import static org.mockito.Mockito.when;\n\n            class Test {\n              final Integer foo() {\n                return 1;\n              }\n\n              void test() {\n                // BUG: Diagnostic contains:\n                when(this.foo());\n              }\n            }"
    },
    {
      "description": "whenCall_forStaticMethod_flagged",
      "expected-problems": null,
      "expected-linenumbers": [
        51
      ],
      "code": "import static org.mockito.Mockito.when;\n\n            class Test {\n              static Integer foo() {\n                return 1;\n              }\n\n              void test() {\n                // BUG: Diagnostic contains:\n                when(foo());\n              }\n            }"
    },
    {
      "description": "verifyCall_flagged",
      "expected-problems": null,
      "expected-linenumbers": [
        73
      ],
      "code": "import static org.mockito.Mockito.verify;\n\n            class Test {\n              final Integer foo() {\n                return 1;\n              }\n\n              void test() {\n                // BUG: Diagnostic contains:\n                verify(this).foo();\n              }\n            }"
    },
    {
      "description": "negative",
      "expected-problems": null,
      "expected-linenumbers": [
        95
      ],
      "code": "import static org.mockito.Mockito.when;\n\n            class Test {\n              Integer foo() {\n                return 1;\n              }\n\n              void test() {\n                when(this.foo());\n              }\n            }"
    }
  ]
}