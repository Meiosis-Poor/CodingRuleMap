{
  "name": "UnusedNestedClass",
  "language": "java",
  "description": "This nested class is unused, and can be removed.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 122,
  "branches": 6,
  "apis": 5,
  "test": [
    {
      "description": "positive",
      "expected-problems": null,
      "expected-linenumbers": [
        34
      ],
      "code": "class A {\n              // BUG: Diagnostic contains:\n              private class B {}\n            }"
    },
    {
      "description": "exemptedByUnusedPrefix",
      "expected-problems": null,
      "expected-linenumbers": [
        48
      ],
      "code": "class A {\n              private class UnusedClass {}\n            }"
    },
    {
      "description": "nonPrivateNestedClass_noWarning",
      "expected-problems": null,
      "expected-linenumbers": [
        61
      ],
      "code": "class A {\n              class B {}\n            }"
    },
    {
      "description": "anonymousClass_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        74
      ],
      "code": "import java.util.function.Function;\n            import java.util.stream.Stream;\n\n            class A {\n              private Stream<String> map(Stream<Object> xs) {\n                return xs.map(\n                    new Function<Object, String>() {\n                      @Override\n                      public String apply(Object o) {\n                        return o.toString();\n                      }\n                    });\n              }\n            }"
    },
    {
      "description": "anonymousClass_asAStatement_unused",
      "expected-problems": null,
      "expected-linenumbers": [
        98
      ],
      "code": ""
    },
    {
      "description": "localClass_used_noFinding",
      "expected-problems": null,
      "expected-linenumbers": [
        120
      ],
      "code": "import java.util.function.Function;\n            import java.util.stream.Stream;\n\n            class A {\n              private Stream<String> map(Stream<Object> xs) {\n                class Mapper implements Function<Object, String> {\n                  @Override\n                  public String apply(Object o) {\n                    return o.toString();\n                  }\n                }\n                return xs.map(new Mapper());\n              }\n            }"
    },
    {
      "description": "localClass_unused_finding",
      "expected-problems": null,
      "expected-linenumbers": [
        144
      ],
      "code": "import java.util.function.Function;\n            import java.util.stream.Stream;\n\n            class A {\n              void test() {\n                // BUG: Diagnostic contains:\n                class Mapper implements Function<Object, String> {\n                  @Override\n                  public String apply(Object o) {\n                    return o.toString();\n                  }\n                }\n              }\n            }"
    },
    {
      "description": "usedWithinSelf_warning",
      "expected-problems": null,
      "expected-linenumbers": [
        168
      ],
      "code": "class A {\n              // BUG: Diagnostic contains:\n              private static class B {\n                private static final B b = new B();\n              }\n            }"
    },
    {
      "description": "usedOutsideSelf_noWarning",
      "expected-problems": null,
      "expected-linenumbers": [
        184
      ],
      "code": "class A {\n              private static final B b = new B();\n\n              private static class B {}\n            }"
    },
    {
      "description": "usedOutsideSelf_oddQualification_noWarning",
      "expected-problems": null,
      "expected-linenumbers": [
        199
      ],
      "code": "class A {\n              public static final Object b = new A.B();\n\n              private static class B {}\n            }"
    },
    {
      "description": "suppression",
      "expected-problems": null,
      "expected-linenumbers": [
        214
      ],
      "code": "class A {\n              @SuppressWarnings(\"unused\")\n              private class B {}\n            }"
    },
    {
      "description": "usedReflectively_suppressed",
      "expected-problems": null,
      "expected-linenumbers": [
        228
      ],
      "code": "import com.google.errorprone.annotations.Keep;\n\n            class A {\n              @Keep\n              private class B {}\n            }"
    },
    {
      "description": "refactoring",
      "expected-problems": null,
      "expected-linenumbers": [
        244
      ],
      "code": "class A {\n              /** Foo. */\n              private class B {}\n            }\n            \n\n            class A {}"
    },
    {
      "description": "moduleInfo",
      "expected-problems": null,
      "expected-linenumbers": [
        263
      ],
      "code": "module foo {\n              requires java.base;\n            }"
    }
  ]
}