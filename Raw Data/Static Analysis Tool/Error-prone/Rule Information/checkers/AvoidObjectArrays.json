{
  "name": "AvoidObjectArrays",
  "language": "java",
  "description": "Object arrays are inferior to collections in almost every way. Prefer immutable collections (e.g., ImmutableSet, ImmutableList, etc.) over an object array whenever possible.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 112,
  "branches": 16,
  "apis": 1,
  "test": [
    {
      "description": "methodParam_instanceMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        31
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: consider an Iterable<Object> instead\n              public void objectArray(Object[] objectArray) {}\n\n              // BUG: Diagnostic contains: consider an Iterable<String> instead\n              public void stringArray(String[] stringArray) {}\n\n              public void intArray(int[] intArray) {}\n\n              public void objectValue(Object objectValue) {}\n\n              public void stringValue(String stringValue) {}\n\n              public void intValue(int intValue) {}\n            }"
    },
    {
      "description": "methodParam_staticMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        56
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: consider an Iterable<Object> instead\n              public static void objectArray(Object[] objectArray) {}\n\n              // BUG: Diagnostic contains: consider an Iterable<String> instead\n              public static void stringArray(String[] stringArray) {}\n\n              public static void intArray(int[] intArray) {}\n\n              public static void objectValue(Object objectValue) {}\n\n              public static void stringValue(String stringValue) {}\n\n              public static void intValue(int intValue) {}\n            }"
    },
    {
      "description": "methodParam_instanceMethods_withIterableOverload",
      "expected-problems": null,
      "expected-linenumbers": [
        81
      ],
      "code": "public class IterableSubject {\n              public final void containsAnyIn(Iterable<?> expected) {}\n\n              public final void containsAnyIn(Object[] expected) {}\n            }"
    },
    {
      "description": "returnType_instanceMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        96
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: consider an ImmutableList<Object> instead\n              public Object[] objectArray() {\n                return new String[] {\"a\"};\n              }\n\n              // BUG: Diagnostic contains: consider an ImmutableList<String> instead\n              public String[] stringArray() {\n                return new String[] {\"a\"};\n              }\n\n              public int[] intArray() {\n                return new int[] {42};\n              }\n\n              public Object objectValue() {\n                return \"a\";\n              }\n\n              public String stringValue() {\n                return \"a\";\n              }\n\n              public int intValue() {\n                return 42;\n              }\n            }"
    },
    {
      "description": "returnType_staticMethods",
      "expected-problems": null,
      "expected-linenumbers": [
        133
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: consider an ImmutableList<Object> instead\n              public static Object[] objectArray() {\n                return new String[] {\"a\"};\n              }\n\n              // BUG: Diagnostic contains: consider an ImmutableList<String> instead\n              public static String[] stringArray() {\n                return new String[] {\"a\"};\n              }\n\n              public static int[] intArray() {\n                return new int[] {42};\n              }\n\n              public static Object objectValue() {\n                return \"a\";\n              }\n\n              public static String stringValue() {\n                return \"a\";\n              }\n\n              public static int intValue() {\n                return 42;\n              }\n            }"
    },
    {
      "description": "mainMethod",
      "expected-problems": null,
      "expected-linenumbers": [
        170
      ],
      "code": "public class ArrayUsage {\n              public static void main(String[] args) {}\n            }"
    },
    {
      "description": "twoDimensionalArrays",
      "expected-problems": null,
      "expected-linenumbers": [
        183
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: Avoid returning a String[][]\n              public String[][] returnValue() {\n                return new String[2][2];\n              }\n            }"
    },
    {
      "description": "varArgs",
      "expected-problems": null,
      "expected-linenumbers": [
        199
      ],
      "code": "public class ArrayUsage {\n              public void varArgs(String... strings) {}\n\n              // BUG: Diagnostic contains: consider an Iterable<Class> instead\n              public void varArgs(Class[] clazz, String... strings) {}\n            }"
    },
    {
      "description": "annotationMethod",
      "expected-problems": null,
      "expected-linenumbers": [
        215
      ],
      "code": "public @interface TestAnnotation {\n              String[] value();\n            }"
    },
    {
      "description": "overridden",
      "expected-problems": null,
      "expected-linenumbers": [
        228
      ],
      "code": "public abstract class Parent {\n              // BUG: Diagnostic contains: consider an ImmutableList<String> instead\n              public abstract String[] stringArray();\n            }"
    },
    {
      "description": "junitParams",
      "expected-problems": null,
      "expected-linenumbers": [
        251
      ],
      "code": "import org.junit.runners.Parameterized.Parameters;\n\n            public class ArrayUsage {\n              @Parameters(name = \"{0}\")\n              public static Object[] locales() {\n                return new Object[] {\"vi\"};\n              }\n            }"
    },
    {
      "description": "stringArrayNamedArgs",
      "expected-problems": null,
      "expected-linenumbers": [
        269
      ],
      "code": "public class ArrayUsage {\n              // BUG: Diagnostic contains: consider an Iterable<String> instead\n              public static void doSomething1(String[] args) {}\n\n              // BUG: Diagnostic contains: consider an Iterable<String> instead\n              public static void doSomething2(String[] argv) {}\n\n              // BUG: Diagnostic contains: consider an Iterable<String> instead\n              public static void doSomething3(String[] argz) {}\n            }"
    }
  ]
}