{
  "name": "URLEqualsHashCode",
  "language": "java",
  "description": "Avoid hash-based containers of java.net.URL--the containers rely on equals() and hashCode(), which cause java.net.URL to make blocking internet connections.",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 122,
  "branches": 7,
  "apis": 5,
  "test": [
    {
      "description": "positiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        34
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import com.google.common.collect.BiMap;\n            import com.google.common.collect.HashBiMap;\n            import com.google.common.collect.ImmutableSet;\n            import java.net.URL;\n            import java.util.HashMap;\n            import java.util.HashSet;\n            import java.util.Map;\n            import java.util.Set;\n\n            /**\n             * Positive test cases for URLEqualsHashCode check.\n             *\n             * @author bhagwani@google.com (Sumit Bhagwani)\n             */\n            public class URLEqualsHashCodePositiveCases {\n\n              public void setOfURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                Set<URL> urlSet = new HashSet<URL>();\n              }\n\n              public void setOfCompleteURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                Set<java.net.URL> urlSet = new HashSet<java.net.URL>();\n              }\n\n              public void hashmapOfURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashMap<URL, String> urlMap = new HashMap<URL, String>();\n              }\n\n              public void hashmapOfCompleteURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashMap<java.net.URL, String> urlMap = new HashMap<java.net.URL, String>();\n              }\n\n              public void hashsetOfURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashSet<URL> urlSet = new HashSet<URL>();\n              }\n\n              public void hashsetOfCompleteURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashSet<java.net.URL> urlSet = new HashSet<java.net.URL>();\n              }\n\n              private static class ExtendedSet extends HashSet<java.net.URL> {\n                // no impl.\n              }\n\n              public void hashSetExtendedClass() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashSet extendedSet = new ExtendedSet();\n\n                // BUG: Diagnostic contains: java.net.URL\n                Set urlSet = new ExtendedSet();\n              }\n\n              private static class ExtendedMap extends HashMap<java.net.URL, String> {\n                // no impl.\n              }\n\n              public void hashMapExtendedClass() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashMap extendedMap = new ExtendedMap();\n\n                // BUG: Diagnostic contains: java.net.URL\n                Map urlMap = new ExtendedMap();\n              }\n\n              public void hashBiMapOfURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                BiMap<URL, String> urlBiMap = HashBiMap.create();\n\n                // BUG: Diagnostic contains: java.net.URL\n                BiMap<String, URL> toUrlBiMap = HashBiMap.create();\n              }\n\n              public void hashBiMapOfCompleteURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                HashBiMap<java.net.URL, String> urlBiMap = HashBiMap.create();\n\n                // BUG: Diagnostic contains: java.net.URL\n                HashBiMap<String, java.net.URL> toUrlBiMap = HashBiMap.create();\n              }\n\n              public void immutableSetOfURL() {\n                // BUG: Diagnostic contains: java.net.URL\n                ImmutableSet<URL> urlSet = ImmutableSet.of();\n\n                // BUG: Diagnostic contains: java.net.URL\n                ImmutableSet<URL> urlSet2 = ImmutableSet.<URL>builder().build();\n              }\n            }\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        140
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            import java.net.URL;\n            import java.util.ArrayList;\n            import java.util.Collection;\n            import java.util.HashMap;\n            import java.util.HashSet;\n            import java.util.List;\n            import java.util.Set;\n\n            /**\n             * Negative test cases for URLEqualsHashCode check.\n             *\n             * @author bhagwani@google.com (Sumit Bhagwani)\n             */\n            public class URLEqualsHashCodeNegativeCases {\n\n              private static class Url {\n                private Url() {\n                  // no impl\n                }\n              }\n\n              // Set and HashSet of non-URL class.\n              public void setOfUrl() {\n                Set<Url> urlSet;\n              }\n\n              public void hashsetOfUrl() {\n                HashSet<Url> urlSet;\n              }\n\n              // Collection(s) of type URL\n              public void collectionOfURL() {\n                Collection<URL> urlSet;\n              }\n\n              public void listOfURL() {\n                List<URL> urlSet;\n              }\n\n              public void arraylistOfURL() {\n                ArrayList<URL> urlSet;\n              }\n\n              public void hashmapWithURLAsValue() {\n                HashMap<String, java.net.URL> stringToUrlMap;\n              }\n\n              private static class ExtendedMap extends HashMap<String, java.net.URL> {\n                // no impl.\n              }\n\n              public void hashMapExtendedClass() {\n                ExtendedMap urlMap;\n              }\n            }\\"
    }
  ]
}