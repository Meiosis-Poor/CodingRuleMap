{
  "name": "IsInstanceOfClass",
  "language": "java",
  "description": "The argument to Class#isInstance(Object) should not be a Class",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 107,
  "branches": 16,
  "apis": 3,
  "test": [
    {
      "description": "positive_clazz_enclosingClass",
      "expected-problems": null,
      "expected-linenumbers": [
        30
      ],
      "code": "class A {\n              boolean m(Class<?> clazz) {\n                // BUG: Diagnostic contains: clazz.isAssignableFrom(getClass())\n                return getClass().isInstance(clazz);\n              }\n            }"
    },
    {
      "description": "positive_enclosingClass_clazz",
      "expected-problems": null,
      "expected-linenumbers": [
        46
      ],
      "code": "class A {\n              boolean m(Class<?> clazz) {\n                // BUG: Diagnostic contains: getClass().isAssignableFrom(clazz)\n                return clazz.isInstance(getClass());\n              }\n            }"
    },
    {
      "description": "positive_getClass_getClass",
      "expected-problems": null,
      "expected-linenumbers": [
        62
      ],
      "code": "class A {\n              boolean m(Object a, Object b) {\n                // BUG: Diagnostic contains: b.getClass().isInstance(a)\n                return a.getClass().isInstance(b.getClass());\n              }\n            }"
    },
    {
      "description": "positive_getClass_literal",
      "expected-problems": null,
      "expected-linenumbers": [
        78
      ],
      "code": "class A {\n              boolean m(Object obj) {\n                // BUG: Diagnostic contains: obj instanceof String\n                return obj.getClass().isInstance(String.class);\n              }\n            }"
    },
    {
      "description": "positive_literal_getClass",
      "expected-problems": null,
      "expected-linenumbers": [
        94
      ],
      "code": "class A {\n              boolean m(Object obj) {\n                // BUG: Diagnostic contains: obj instanceof String\n                return String.class.isInstance(obj.getClass());\n              }\n            }"
    },
    {
      "description": "positive_literal_literal",
      "expected-problems": null,
      "expected-linenumbers": [
        110
      ],
      "code": "class A {\n              boolean m(Object obj) {\n                // BUG: Diagnostic contains: String.class == Class.class\n                return Number.class.isInstance(String.class);\n              }\n            }"
    },
    {
      "description": "positive_clazz_getClass",
      "expected-problems": null,
      "expected-linenumbers": [
        126
      ],
      "code": "class A {\n              boolean m(Object o, Class<?> clazz) {\n                // BUG: Diagnostic contains: clazz.isInstance(o)\n                return clazz.isInstance(o.getClass());\n              }\n            }"
    },
    {
      "description": "positive_getClass_clazz",
      "expected-problems": null,
      "expected-linenumbers": [
        142
      ],
      "code": "class A {\n              boolean m(Object o, Class<?> clazz) {\n                // BUG: Diagnostic contains: clazz.isInstance(o)\n                return o.getClass().isInstance(clazz);\n              }\n            }"
    },
    {
      "description": "positive_clazz_clazz",
      "expected-problems": null,
      "expected-linenumbers": [
        158
      ],
      "code": "class A {\n              boolean m(Class<?> a, Class<?> b) {\n                // BUG: Diagnostic contains: b.isAssignableFrom(a)\n                return a.isInstance(b);\n              }\n            }"
    }
  ]
}