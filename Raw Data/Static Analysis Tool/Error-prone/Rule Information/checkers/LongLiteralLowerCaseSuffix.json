{
  "name": "LongLiteralLowerCaseSuffix",
  "language": "java",
  "description": "Prefer 'L' to 'l' for the suffix to long literals",
  "example": null,
  "cwe": null,
  "cwe-description": null,
  "checker-language": "java",
  "loc": 80,
  "branches": 12,
  "apis": 3,
  "test": [
    {
      "description": "java7PositiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        124
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n/** Positive cases for {@link LongLiteralLowerCaseSuffix}. */\npublic class LongLiteralLowerCaseSuffixPositiveCase2 {\n\n  // This constant string includes non-ASCII characters to make sure that we're not confusing\n  // bytes and chars:\n  @SuppressWarnings(\"unused\")\n  private static final String TEST_STRING = \"Îñţérñåţîöñåļîžåţîờñ\";\n\n  public void underscoredLowerCase() {\n    // BUG: Diagnostic contains: value = 0_1__2L\n    long value = 0_1__2l;\n  }\n}\\"
    },
    {
      "description": "java7PositiveCase",
      "expected-problems": null,
      "expected-linenumbers": [
        124
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n/** Positive cases for {@link LongLiteralLowerCaseSuffix}. */\npublic class LongLiteralLowerCaseSuffixPositiveCase2 {\n\n  // This constant string includes non-ASCII characters to make sure that we're not confusing\n  // bytes and chars:\n  @SuppressWarnings(\"unused\")\n  private static final String TEST_STRING = \"Îñţérñåţîöñåļîžåţîờñ\";\n\n  public void underscoredLowerCase() {\n    // BUG: Diagnostic contains: value = 0_1__2L\n    long value = 0_1__2l;\n  }\n}\\"
    },
    {
      "description": "negativeCase",
      "expected-problems": null,
      "expected-linenumbers": [
        149
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n            /**\n             * Negative cases for {@link LongLiteralLowerCaseSuffix}\n             *\n             * @author Simon Nickerson (sjnickerson@google.com)\n             */\n            public class LongLiteralLowerCaseSuffixNegativeCases {\n              public void positiveUpperCase() {\n                long value = 123432L;\n              }\n\n              public void zeroUpperCase() {\n                long value = 0L;\n              }\n\n              public void negativeUpperCase() {\n                long value = -3L;\n              }\n\n              public void notLong() {\n                String value = \"0l\";\n              }\n\n              public void variableEndingInEllIsNotALongLiteral() {\n                long ell = 0L;\n                long value = ell;\n              }\n\n              public void positiveNoSuffix() {\n                long value = 3;\n              }\n\n              public void negativeNoSuffix() {\n                long value = -3;\n              }\n\n              public void positiveHexUpperCase() {\n                long value = 0x80L;\n              }\n\n              public void zeroHexUpperCase() {\n                long value = 0x0L;\n              }\n\n              public void negativeHexUpperCase() {\n                long value = -0x80L;\n              }\n            }\\"
    },
    {
      "description": "disableable",
      "expected-problems": null,
      "expected-linenumbers": [
        208
      ],
      "code": "package com.google.errorprone.bugpatterns.testdata;\n\n/** Positive cases for {@link LongLiteralLowerCaseSuffix}. */\npublic class LongLiteralLowerCaseSuffixPositiveCase1 {\n\n  // This constant string includes non-ASCII characters to make sure that we're not confusing\n  // bytes and chars:\n  @SuppressWarnings(\"unused\")\n  private static final String TEST_STRING = \"Îñţérñåţîöñåļîžåţîờñ\";\n\n  public void positiveLowerCase() {\n    // BUG: Diagnostic contains: value = 123432L\n    long value = 123432l;\n  }\n\n  public void zeroLowerCase() {\n    // BUG: Diagnostic contains: value = 0L\n    long value = 0l;\n  }\n\n  public void negativeLowerCase() {\n    // BUG: Diagnostic contains: value = -123432L\n    long value = -123432l;\n  }\n\n  public void negativeExtraSpacesLowerCase() {\n    // BUG: Diagnostic contains: value = -  123432L\n    long value = -123432l;\n  }\n\n  public void positiveHexLowerCase() {\n    // BUG: Diagnostic contains: value = 0x8abcDEF0L\n    long value = 0x8abcDEF0l;\n    // BUG: Diagnostic contains: value = 0X80L\n    value = 0X80l;\n  }\n\n  public void zeroHexLowerCase() {\n    // BUG: Diagnostic contains: value = 0x0L\n    long value = 0x0l;\n    // BUG: Diagnostic contains: value = 0X0L\n    value = 0X0l;\n  }\n\n  public void negativeHexLowerCase() {\n    // BUG: Diagnostic contains: value = -0x8abcDEF0L\n    long value = -0x8abcDEF0l;\n    // BUG: Diagnostic contains: value = -0X80L\n    value = -0X80l;\n  }\n\n  public void negativeHexExtraSpacesLowerCase() {\n    // BUG: Diagnostic contains: value = -  0x8abcDEF0L\n    long value = -0x8abcDEF0l;\n  }\n\n  public void positiveOctalLowerCase() {\n    // BUG: Diagnostic contains: value = 06543L\n    long value = 06543l;\n  }\n\n  public void zeroOctalLowerCase() {\n    // BUG: Diagnostic contains: value = 00L\n    long value = 00l;\n  }\n\n  public void negativeOctalLowerCase() {\n    // BUG: Diagnostic contains: value = -06543L\n    long value = -06543l;\n  }\n\n  public void negativeOctalExtraSpacesLowerCase() {\n    // BUG: Diagnostic contains: value = -  06543L\n    long value = -06543l;\n  }\n}"
    }
  ]
}