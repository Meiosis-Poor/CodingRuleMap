{
  "name": "Classes with too many fields",
  "description": "Finds classes with many fields; they could probably be refactored by breaking them down into smaller classes, and using composition.",
  "cwe": null,
  "cwe-description": null,
  "language": "cpp",
  "checker-language": "ql",
  "example": null,
  "loc": 103,
  "test": [
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        3,
        8,
        9,
        12
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        3,
        12,
        13,
        14
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        3,
        12,
        24,
        25
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        3,
        12,
        30,
        31
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        8,
        22,
        41,
        57
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        8,
        20,
        60
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        8,
        20,
        60
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        8,
        20,
        74
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        8,
        20,
        74
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        10,
        15,
        33
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    },
    {
      "description": "",
      "expected-problems": 1,
      "expected-linenumbers": [
        10,
        15,
        33
      ],
      "code": "// semmle-extractor-options: --clang\n#define TEN(X) X(1) X(2) X(3) X(4) X(5) X(6) X(7) X(8) X(9) X(10)\n\n#define int_f(n) int f##n;\n#define int_g(n) int g##n;\n\nstruct aa {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nclass bb {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nunion cc_not_flagged_up_because_unions_are_not_classes_in_this_sense {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename T>\nstruct dd {\n  TEN(int_f)\n  TEN(int_g)\n};\n\ntemplate <typename U>\nstruct ee {\n  TEN(int_f)\n  TEN(int_g)\n};\n\nvoid instantiate() {\n  dd<float> d1;\n  dd<int> d2;\n}\n\n// from the qhelp (30 fields)\nstruct MyParticle {\n  bool isActive;\n  int priority;\n\n  float x, y, z;\n  float dx, dy, dz;\n  float ddx, ddy, ddz;\n  bool isCollider;\n\n  int age, maxAge;\n  float size1, size2;\n\n  bool hasColor;\n  unsigned char r1, g1, b1, a1;\n  unsigned char r2, g2, b2, a2;\n\n  class texture *tex;\n  float u1, v1, u2, v2;\n};\n\nstruct MyAlphaClass1 {\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n\n  // ...\n  // ...\n  // ...\n\n  int a2, b2, c2, d2, e2, f2, g2, h2, i2, j2;\n  int k2, l2, m2, n2, o2, p2, q2, r2, s2, t2;\n  int u2, v2, w2, x2, y2, z2;\n};\n\nstruct MyAlphaClass2 {\n  int x;\n\n  // ...\n  // ...\n  // ...\n\n  int a1, b1, c1, d1, e1, f1, g1, h1, i1, j1;\n  int k1, l1, m1, n1, o1, p1, q1, r1, s1, t1;\n  int u1, v1, w1, x1, y1, z1;\n};\n"
    }
  ],
  "branches": 5,
  "apis": 85
}